#!/bin/csh -f -v
#
# Version: @(#)mkdom	1.2 8/4/95
#
# Use this script to create a new domain that compiles and can be linked
# with ptcl or pigi.  To use it, create a directory in which to put
# the new domain, and run this script in that domain, say
#	mkdir $PTOLEMY/src/domains/yyy
#	cd $PTOLEMY/src/domains/yyy
#	$PTOLEMY/src/domains/xxx/mkdom yyy
# Note that this script is not sensitive to the case in "yyy".
# This script does not create any parallel object tree.  You will have
# to do this manually (or write a script).
#
# Copyright (c) 1990-1995 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY 
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES 
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF 
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF 
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# Programmer:		T.M. Parks
# Date of creation:	5 February 1992
#

# Temporary file name.
set temp = tmp$$

# Check for proper usage.
if ($#argv < 1) then
	echo Usage: mkdom domain
	echo "	Use this program to quickly generate the necessary"
	echo "	source files for a new domain.  The resulting domain"
	echo "	will not do much, but at least it will compile."
	exit
endif

if ( ! $?PTOLEMY ) setenv PTOLEMY ~ptolemy
if ( ! $?PTARCH ) then
    setenv PTARCH `$PTOLEMY/bin/ptarch`
endif

set XXX = $PTOLEMY/src/domains/xxx

set domain = $1
set DOM = `echo $domain | tr a-z A-Z`	# upper case domain abbreviation
set dom = `echo $domain | tr A-Z a-z`	# lower case domain abbreviation

# Check that a valid domain abbreviation has been supplied.
# This prevents accidental overwriting of the orginal files.
if ($DOM == "XXX") then
	echo Choose a domain abbreviation other than XXX.
	exit
endif

# Check that the program is being run from a resonable directory.
if ($cwd !~ */src/domains/$dom) then
	echo Run this program in the .../src/domains/$dom directory.
	exit
endif

# Check to see if SCCS is being used for version control
if (-d $XXX/SCCS) then
	alias check_out	'sccs get -k \!^'
	alias check_in	'sccs create \!^ ; rm -f ,\!^'
else
	alias check_out	'cp \!^ .'
	alias check_in	'echo \!^'
endif

# Process the makefile.
check_out $XXX/makefile
sed -e "s/XXX/$DOM/g" -e "s/xxx/$dom/g" < makefile > $temp
mv -f $temp makefile
check_in makefile

# Process the subdirectories.
foreach dir ( kernel stars )
	mkdir $dir
	pushd $dir

	# Process the makefile.
	check_out $XXX/$dir/make.template
	sed -e "s/XXX/$DOM/g" -e "s/xxx/$dom/g" < make.template > $temp
	mv -f $temp make.template
	check_in make.template

	# Process the source files.
	foreach file ( $XXX/$dir/XXX* )
		set destfile=`echo $file:t | sed -e "s/XXX/$DOM/"`
		check_out $file
		sed -e "s/XXX/$DOM/g" -e "s/xxx/$dom/g" < $file:t > $destfile
		check_in $destfile
		rm -f $file:t
	end

	popd
end
