# Test suite for the ::pitcl::connect command.
#
# @Author: Edward A. Lee
#
# @Version: @(#)testConnect.itcl	1.4   04/04/97
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

if {[string compare test [info procs test]] == 1} then { 
    source $TYCHO/kernel/test/testDefs.tcl
} {}

# Uncomment this to get a full report, or set in your Tcl shell window.
# set VERBOSE 1

# Set the following to avoid endless calls to exit.
set reallyExit 0

######################################################################
#### setup
# Create a hierarchical universe x with galaxy x.y and populate with blocks.

test connect-0 {create a test universe} {
    namespace ::pitcl {
        defGalaxy y SDF {
            addBlock z Ramp
            galaxyPort out z.output
        }
        addUniverse x SDF
        addBlock a y
        addBlock b Ramp
        addBlock c Add
        addBlock d XMgraph
    }
} {}

######################################################################
#### connect

test connect-1 {connection of galaxy port to multiport, relative naming} {
    ::pitcl::currentGalaxy .x
    ::pitcl::connect a.out c.input
    list \
            [::pitcl::connected c.input#1] \
            [::pitcl::connected a.out] \
            [::pitcl::connected -deep c.input#1]
} {.x.a.out .x.c.input#1 .x.a.z.output}

test connect-2 {connection of star port to multiport, absolute naming} {
    ::pitcl::addUniverse .confuse SDF
    ::pitcl::connect .x.b.output .x.c.input
    list \
            [::pitcl::connected .x.c.input#2] \
            [::pitcl::connected .x.b.output] \
            [::pitcl::connected -deep .x.b.output]
} {.x.b.output .x.c.input#2 .x.c.input#2}

test connect-3 {are the ports connected to a multiport are listed correctly} {
    ::pitcl::connected .x.c.input
} {.x.a.out .x.b.output}

test connect-4 {are the ports connected to a multiport are listed correctly} {
    ::pitcl::connected -deep .x.c.input
} {.x.a.z.output .x.b.output}

doneTests
