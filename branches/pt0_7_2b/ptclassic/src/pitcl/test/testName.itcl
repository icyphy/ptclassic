# Test suite for pitcl functions that access names.
#
# @Author: Edward A. Lee
#
# @Version: @(#)testName.itcl	1.4   04/04/97
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

if {[string compare test [info procs test]] == 1} then { 
    source $TYCHO/kernel/test/testDefs.tcl
} {}

# Uncomment this to get a full report, or set in your Tcl shell window.
# set VERBOSE 1

# Set the following to avoid endless calls to exit.
set reallyExit 0

######################################################################
#### setup
# Create a hierarchical universe x with galaxy x.y

test name-0 {create a test universe} {
    namespace pitcl {
        defGalaxy y SDF {
            addBlock z Ramp
            galaxyPort out z.output
        }
        addUniverse x SDF
        addBlock a y
        addBlock b Ramp
        addBlock c Add
        addBlock d XMgraph
        connect a.out c.input
        connect b.output c.input
        connect c.output d.input
    }
} {}

######################################################################
#### getClassName

test name-1 {get the class name of a library block} {
    ::pitcl::getClassName BlackHole
} {SDFBlackHole}

test name-2 {get the class name of a master galaxy} {
    ::pitcl::getClassName y
} {y}

test name-3 {get the class name of an instance galaxy} {
    ::pitcl::addUniverse .confusion SDF
    ::pitcl::getClassName .x.a
} {y}

test name-4 {get the class name of an instance star} {
    ::pitcl::currentGalaxy .x
    ::pitcl::getClassName a.z
} {SDFRamp}

######################################################################
#### getFullName

test name-5 {get the full name of a library block} {
    ::pitcl::getFullName BlackHole
} {BlackHole}

test name-6 {get the full name of a master galaxy} {
    ::pitcl::getFullName y
} {y}

test name-7 {get the full name of an instance galaxy} {
    ::pitcl::currentGalaxy .x
    ::pitcl::getFullName a
} {.x.a}

test name-8 {get the full name of an instance star} {
    ::pitcl::currentGalaxy .x
    ::pitcl::getFullName a.z
} {.x.a.z}

test name-9 {get the full name of a star within a master galaxy} {
    ::pitcl::currentGalaxy y
    ::pitcl::getFullName z
} {y.z}

######################################################################
#### getParent

test name-10 {get the parent of a library block} {
    ::pitcl::getParent BlackHole
} {}

test name-11 {get the parent of a master galaxy} {
    ::pitcl::getParent y
} {}

test name-12 {get the parent of an instance galaxy} {
    ::pitcl::currentGalaxy .x
    ::pitcl::getParent a
} {.x}

test name-13 {get the parent of an instance galaxy} {
    ::pitcl::currentGalaxy .confusion
    ::pitcl::getParent .x.a
} {.x}

test name-14 {get the parent of an instance star} {
    ::pitcl::currentGalaxy .x
    ::pitcl::getParent a.z
} {.x.a}

doneTests
