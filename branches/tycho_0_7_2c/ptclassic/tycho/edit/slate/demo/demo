#!/bin/sh
# Command-line program for running slate demos \
    exec wish "$0" "$@"

# @(#)demo	1.1 07/29/98
# Author: John Reekie

# Create the demo namespace
namespace eval ::demo {}

# Set up the auto_path. What we do here is simply append
# paths to the auto_path in the order that is likely to
# be most rapid for finding the needed packages. Note that
# it is important to append all possible paths before doing
# a package require, in case this package requires other
# packages.

# Try SLATE_LIBRARY
if [info exists env(SLATE_LIBRARY)] {
    if { [lsearch -exact $auto_path $env(SLATE_LIBRARY)] }  {
	lappend auto_path $env(SLATE_LIBRARY)
    }
}

# Try TCL_PACKAGES
if [info exists env(TCL_PACKAGES)] {
    if { [lsearch -exact $auto_path $env(TCL_PACKAGES)] == -1 }  {
	lappend auto_path $env(TCL_PACKAGES)
    }
}

# Try TYCHO, or PTOLEMY if there is not TYCHO
if ![info exists env(TYCHO)] {
    if [info exists env(PTOLEMY)] {
	# TYCHO is not set, but PTOLEMY is.
	if [file exists [file join $env(PTOLEMY) tycho]] {
	    set env(TYCHO) [file join $env(PTOLEMY) tycho]
	}
    } 
}
if [info exists env(TYCHO)] {
    if { [lsearch -exact $auto_path $env(TYCHO)] == -1 }  {
	lappend auto_path $env(TYCHO)
    }
}

# Try loading the package. If it doesn't work, print a helpful
# error message and exit
if [catch {package require slate} err ] {
    puts "Cannot load \"slate\"\
	    Error was:\n--start--\n$errorInfo\n--end--\n\
	    The auto_path variable lists the directories that were searched.\n\
	    auto_path = $auto_path\n\
	    You can:\n\
	    1. Install slate in a subdirectory of your \
	    Tcl library\n\
	    2. Install slate in the directory given by the \
	    TCL_PACKAGES variable\n\
	    3. Set the SLATE_LIBRARY variable to point to the \
	    slate directory\n\
	    4. Set the TYCHO variable to point to your \
	    Tycho installation\n\
	    5. Set the PTOLEMY variable to point to your \
	    Ptolemy installation\n"
    exit
}

# This is really a startup script for demos, so load
# the demo package
package require slate.demo
wm iconify .

# Print startup sig
puts "slate, version 3.0"

# If there are no arguments, find demo procs from file names
if { $argv == "" } {
    set cwd [pwd]
    cd [file join $env(SLATE_LIBRARY) demo]
    set argv [glob {demo[A-Z]*.tcl}]
    cd $cwd
}

# Run each demo
foreach f $argv {
    set proc [file root [file tail $f]]
    if ![string match demo* $proc] {
	set proc demo$proc
    }
    ::demo::$proc
}
