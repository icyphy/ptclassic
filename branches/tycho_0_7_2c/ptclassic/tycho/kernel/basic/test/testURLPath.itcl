# Test suite for URLPath: procs related to url-style names
#
# @Author: John Reekie
#
# @Version: @(#)testURLPath.itcl	1.3 03/16/98
#
# @Copyright (c) 1996-1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

# Make sure that the required packages are loaded
package require tycho.util.tytest
package require tycho.kernel.basic


#######################################################################
# Test ::tycho::url. This is a foreach loop that generated a whole
# series of tests on different names and for different cases. For
# each name, the following options are called, in this order:
#   dirname
#   extension
#   path
#   pathtype
#   protocol
#   rootname
#   server
#   split
#   tail
#
# Some additional tests for the "join" and "aslocal" options follow.
#
# Make sure these protocols are registered:
catch {::tycho::register protocol "file" -class ::tycho::ResourceFile}
catch {::tycho::register protocol "http" -class ::tycho::ResourceHTTP}
catch {::tycho::register protocol "ftp" -class ::tycho::ResourceFTP}


set _count 0
foreach _name {
    foo.bar
    /users/ptolemy/foo.bar
    c:/users/ptolemy/foo.bar
    file:/users/ptolemy/foo.bar
    http://ptolemy.eecs
    http://ptolemy.eecs/~ptdesign
    http://ptolemy.eecs/~ptdesign/index.html
} _result {
    {
	.
	.bar
	foo.bar
	relative
	{}
	foo
	{}
	foo.bar
	foo.bar
    }
    {
	/users/ptolemy
	.bar
	/users/ptolemy/foo.bar
	absolute
	{}
	/users/ptolemy/foo
	{}
	{/ users ptolemy foo.bar}
	foo.bar
    }
    {
	c:/users/ptolemy
	.bar
	c:/users/ptolemy/foo.bar
	absolute
	{}
	c:/users/ptolemy/foo
	{}
	{c: users ptolemy foo.bar}
	foo.bar
    }
    {
	file:/users/ptolemy
	.bar
	/users/ptolemy/foo.bar
	absolute
	file
	file:/users/ptolemy/foo
	{}
	{file: {} users ptolemy foo.bar}
	foo.bar
    }
    {
	http://ptolemy.eecs
	{}
	/
	absolute
	http
	http://ptolemy.eecs
	ptolemy.eecs
	{http: ptolemy.eecs}
	{}
    }
    {
	http://ptolemy.eecs
	{}
	/~ptdesign
	absolute
	http
	http://ptolemy.eecs/~ptdesign
	ptolemy.eecs
	{http: ptolemy.eecs ~ptdesign}
	~ptdesign
    }
    {
	http://ptolemy.eecs/~ptdesign
	.html
	/~ptdesign/index.html
	absolute
	http
	http://ptolemy.eecs/~ptdesign/index
	ptolemy.eecs
	{http: ptolemy.eecs ~ptdesign index.html}
	index.html
    }
} {
    foreach _test {
	dirname
	extension
	path
	pathtype
	protocol
	rootname
	server
	split
	tail
    } _rslt $_result {
	test Path-::tycho::url-$_count [list ::tycho::url $_test $_name] {
            incr _count
            update ;# so results can be seen while running
	    ::tycho::url $_test $_name
	} $_rslt
    }
}

# Test the join option
foreach _name {
    foo.bar
    {ptolemy foo bar}
    {/ users ptolemy foo.bar}
    {/users/ptolemy foo.bar}
    {c: users ptolemy foo.bar}
    {c:/users/ptolemy foo.bar}
    {file: {} users ptolemy foo.bar}
    {http: ptolemy.eecs}
    http://ptolemy.eecs
    http://ptolemy.eecs/
    {http: ptolemy.eecs ~ptdesign}
    {http://ptolemy.eecs ~ptdesign}
    {http://ptolemy.eecs ~ptdesign/}
    {http: ptolemy.eecs ~ptdesign index.html}
    {http: ptolemy.eecs/ ~ptdesign index.html}
    {http://ptolemy.eecs ~ptdesign/index.html}
    {http://ptolemy.eecs/ ~ptdesign/index.html}
    {http://ptolemy.eecs/~ptdesign index.html}
    {http://ptolemy.eecs/~ptdesign/ index.html}
    {ftp://ptolemy.eecs/ /design}
    {ftp://ptolemy.eecs/design /schematic}
    {ftp://ptolemy.eecs/design /schematic/drawing and.wir}
    {ftp://ptolemy.eecs/design/ /schematic/drawing and.wir}
    {ftp://ptolemy.eecs/design/ /schematic/drawing and.wir /~ptdesign}
    {ftp://ptolemy.eecs/eal a b /c ~d}
    {ftp://ptolemy.eecs/eal ../../../cxh}
} _result {
    foo.bar
    ptolemy/foo/bar
    /users/ptolemy/foo.bar
    /users/ptolemy/foo.bar
    c:/users/ptolemy/foo.bar
    c:/users/ptolemy/foo.bar
    file:/users/ptolemy/foo.bar
    http://ptolemy.eecs/
    http://ptolemy.eecs/
    http://ptolemy.eecs/
    http://ptolemy.eecs/~ptdesign
    http://ptolemy.eecs/~ptdesign
    http://ptolemy.eecs/~ptdesign
    http://ptolemy.eecs/~ptdesign/index.html
    http://ptolemy.eecs/~ptdesign/index.html
    http://ptolemy.eecs/~ptdesign/index.html
    http://ptolemy.eecs/~ptdesign/index.html
    http://ptolemy.eecs/~ptdesign/index.html
    http://ptolemy.eecs/~ptdesign/index.html
    ftp://ptolemy.eecs/design
    ftp://ptolemy.eecs/schematic
    ftp://ptolemy.eecs/schematic/drawing/and.wir
    ftp://ptolemy.eecs/schematic/drawing/and.wir
    ftp://ptolemy.eecs/~ptdesign
    ftp://ptolemy.eecs/~d
    ftp://ptolemy.eecs/eal/../../../cxh
} {
    test Path-::tycho::url-$_count [list ::tycho::url join $_name] {
        incr _count
        update ;# so results can be seen while running
        eval ::tycho::url join $_name
    } $_result
}

# Test the aslocal option
foreach _name {
    foo/bar
    /foo/bar
    /foo:/bar:
} _result {
    foo/bar
    /foo/bar
    /foo:/bar:
} {
    test Path-::tycho::url-$_count [list ::tycho::url aslocal $_name] {
        incr _count
        update ;# so results can be seen while running
        eval ::tycho::url aslocal $_result
    } $_result
}
