##########################################################################
# @Version: $Id$
# @Author: H. John Reekie
#
# @Copyright (c) %Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#                                                         COPYRIGHTENDKEY
##########################################################################


#######################################################################
#### StatusBar
#
# A very simple prototype status bar display, for putting at the
# bottom of windows.
#
class ::tycho::StatusBar {
    inherit itk::Widget

    constructor {args} {}
    destructor {}


    ###################################################################
    ####                            options                        ####

    # The command to call when the Close button is pressed
    itk_option define -closecommand closeCommand CloseCommand {}


    ###################################################################
    ####                         public methods                    ####

    # Set the class type
    method class {class} {}
    
    # Set the file status display
    method fileStatus {status} {}
    
    # Put a string to the status bar
    method puts {string} {}

    # Set the line and column display, and clear the status string
    method lineColumn {line column} {}

}


#######################################################################
#### -closecommand configuration
#
configbody ::tycho::StatusBar::closecommand {
    $itk_component(closeButton) configure -command $itk_option(-closecommand)
}


#######################################################################
#### constructor
#
body ::tycho::StatusBar::constructor {args} {

    # Create the file status display
    itk_component add fileStatus {
	label $itk_interior.fileStatus -width 3
    } {
	keep -background -cursor
    }
    pack $itk_component(fileStatus) -side left

    # Create the status output display
    itk_component add mainStatus {
	label $itk_interior.mainStatus -anchor w \
		-font [.tychoFonts getFont Helvetica 12]
    } {
	keep -background -cursor
    }
    pack $itk_component(mainStatus) -fill both -expand on -side left

    # Create the class display
    itk_component add class {
	label $itk_interior.class -anchor w \
		-font [.tychoFonts getFont Helvetica 12] \
		-width 20
    } {
	keep -background -cursor
    }
    pack $itk_component(mainStatus) -fill both -expand on -side left

    # Create the close button
    itk_component add closeButton {
	button $itk_interior.closeButton
    } {
	keep -background -font -activebackground -cursor \
		-highlightthickness -activeforeground \
		-foreground -highlightcolor -highlightbackground
    }
    pack $itk_component(closeButton) -side right

    # Initialise options
    eval itk_initialize $args
}



#######################################################################
#### class
#
body ::tycho::StatusBar::class {class} {
    $itk_component(class) configure -text \
	"$class"
}


#######################################################################
#### fileStatus
#
# Set the file status display. Valid values of the _status_ argument
# are ``readonly,'' ``readwrite,'' and ``modified.''
#
# <b>Note</b>: Currently the display consists simply of the letters
# ``R'' (readonly) or ``M'' (modified). This needs to be replaced
# with some meaningful icons.
#
body ::tycho::StatusBar::fileStatus {status} {
    switch -exact $status {
	"readonly" {
	    $itk_component(fileStatus) configure -text "R"
	}
	"readwrite" {
	    $itk_component(fileStatus) configure -text ""
	}
	"modified" {
	    $itk_component(fileStatus) configure -text "M"
	}
	default {
	    error "StatusBar::fileStatus: Invalid option $status"
	}
    }
}


#######################################################################
#### lineColumn
#
body ::tycho::StatusBar::lineColumn {line column} {
    $itk_component(mainStatus) configure -text \
	"$line : $column"
}


#######################################################################
#### puts
#
body ::tycho::StatusBar::puts {string} {
    $itk_component(mainStatus) configure -text $string
}


