# test.tcl
#
# File to demonstrate the Tycho scheduler with
# a sample CGC "task" generated by the Ptolemy
# Tycho target.
#
# $Id$
#

# Load the package
::tycho::loadIfNotPresent ::tycho::timer tytimer
::tycho::loadIfNotPresent ::tycho::cgctest cgctest

# Initialize the iteration counter
set counter 0

catch {destroy .t}
toplevel .t

# Create a label which prints the counter value
label .t.l -textvariable counter -width 8 \
        -font [::tycho::font Helvetica 24]
frame .t.buttons

# This button adds a task to the scheduler.
button .t.start -text Start -command {
    ::tycho::Scheduler::startC ::tycho::cgctest counter
}

# This button pauses the task
button .t.pause  -text Pause  -command {
    ::tycho::Scheduler::suspend cgctest
}

# This button resumes the task
button .t.resume  -text Resume  -command {
    ::tycho::Scheduler::resume cgctest
}

# This button kills the task
button .t.stop  -text Stop -command {
    ::tycho::Scheduler::kill cgctest
}

pack .t.l -fill x -expand on
pack .t.buttons -fill x -expand on
pack .t.start -in .t.buttons -side left
pack .t.pause -in .t.buttons -side left
pack .t.resume -in .t.buttons -side left
pack .t.stop -in .t.buttons -side left


# It's handy to have a button to close the window
button .t.close  -text Close -command {
    catch {::tycho::Scheduler::kill cgctest}
    destroy .t
}
pack .t.close -in .t.buttons -side left


wm deiconify .t
