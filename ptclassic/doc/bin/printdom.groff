#! /bin/csh -f
# $Id$
#
# Print documentation for a Ptolemy domain.  Assumed to be started in
# the "doc" subdirectory of a domain.
#
# Command line options:
#
#	-index		Generate an index only, print nothing.
#
#	-preview	Preview domain via xditview, or nroff if DISPLAY
#			environment variable isn't set.
#
#	-icons		Generate postscript versions of icons and include
#			them in the printout.  This can't be used with the
#			-preview option, and can really only be used at
#			Ptolemy Headquarters in Berkeley.
#
#	-iconsnogen	Include the postscript versions of icons, but don't
#			actually generate them.  This is useful if the
#			icons had been generated by a previous run of
#			printdom.  (It can take a while to generate them).
#			Only usable with -icons
#
#	-iconsnorm	Don't remove the icons when finished.
#
# Remaining arguments are taken to be files to print options.
# Command uses printer defined by environmental variable $PRINTER
# User .cshrc file must contain "setenv PRINTER whatever"
#
# An implicit header file, $PTOLEMY/doc/headers/shared, is prepended.
#
# The documentation consists of a concatenation of the following files:
#
#   $PTOLEMY/doc/headers/shared - macro definitions
#   overall.t - introduction to the domain
#   targettitle.t - title page for the target section
#   targets/*.t - target troff documentation
#   startitle.t - title page for the stars section
#   stars/*.t - star troff documentation files
#   demotitle.t - title page for the demo section
#   demos/*.t- demo troff documentation.
#
# Any troff file may include other troff files with the .so command
#
# Index information is appended to the file $HOME/Almagest.index,
# or to whatever ALAMAGEST_INDEX is set to.

# On interrupt, remove temporary files
onintr catch

if (!($?PTOLEMY)) then
	setenv PTOLEMY ~ptolemy
endif

# File structure information:
set dirheader = $PTOLEMY/doc/headers
set printcommand = groff
set printoptions = "-me -t -e"
set contentscmd = $PTOLEMY/doc/bin/contents.groff
set troffFileNames = "*.t"

# Temporary files
set tempdir = /tmp
set tempTroffFile = $tempdir/pt$$.t
set tempIndexFile = $tempdir/index$$
set tempNroffFile = $tempdir/pt$$.n
set tempFiles = ($tempTroffFile $tempIndexFile $tempNroffFile)

# Variables
set indexonly = 0
set preview = 0
set icons = 0
set icons_nogen = 0
set icons_norm = 0

if (!($?ALMAGEST_INDEX)) then
	setenv ALMAGEST_INDEX $HOME/Almagest.index
endif

while ($#argv)
	switch ($argv[1])
		case -index:
			set indexonly = 1
			shift
			breaksw
		case -preview:
			set preview = 1
			shift
			breaksw
		case -icons:
			set icons = 1
			shift
			breaksw
		case -iconsnogen:
			set icons_nogen = 1
			shift
			breaksw
		case -iconsnorm:
			set icons_norm = 1
			shift
			breaksw
		case -*:
			set printoptions = ($printoptions $argv[1])
			shift
			breaksw
		default:
			cd $1
			shift
			breaksw
	endsw
end

if ($icons && $preview) then
	echo "printdom: -preview and -icons flags are mutually exclusive, sorry."
	exit 1
endif

if (($icons_norm || $icons_nogen) && !($icons)) then
	echo "printdom: -noiconsgen and -noiconsrm flag can only be used with -icons flag"
	exit 1
endif


gsoelim $dirheader/groff-fix $dirheader/shared $dirheader/domain \
	init.t overall.t > $tempTroffFile

# Set icon printing flag: 0 if not printing icons, 1 if printing them.
if ($icons) then
	echo '.nr Ic 1' >> $tempTroffFile
else
	echo '.nr Ic 0' >> $tempTroffFile
endif

if ( -d targets ) then
        if (-e targettitle.t) then
                # set type for this section
                echo '.ds TY "target"' >> $tempTroffFile
                cat targettitle.t >> $tempTroffFile
        endif
        cd targets
        # print all targets, sorted in dictionary order
	foreach file (`ls -1 -d $troffFileNames | sort -f -d`)
		cat -s $file >> $tempTroffFile
	end
        cd ..
endif

if ( -d stars ) then
	if (-e starstitle.t) then
		# set type for this section
		echo '.ds TY "star"' >> $tempTroffFile
		cat starstitle.t >> $tempTroffFile
	endif
	cd stars
        # print all stars, sorted in dictionary order
	foreach file (`ls -1 -d $troffFileNames | sort -f -d`)
		cat -s $file >> $tempTroffFile
	end
	cd ..
endif

if ( -d demos ) then
	if (-e demotitle.t) then
		# set type for this section
		echo '.ds TY "demo"' >> $tempTroffFile
		cat demotitle.t >> $tempTroffFile
	endif
	cd demos
        # print all demos, sorted in dictionary order
	foreach file (`ls -1 -d $troffFileNames | sort -f -d`)
		cat -s $file >> $tempTroffFile
	end
	cd ..
endif

# Generate postscript versions of icons
if ($icons && !($icons_nogen)) then
	echo "printdom: Generating postscript versions of icons.  This will take a while"
	set cwd = `pwd`
	foreach i ( ../icons/* ../*/icons/* )
		$PTOLEMY/doc/bin/psicon $i > $i.ps
	end
	echo "printdom: Done generating postscript versions of icons"
endif

if ($indexonly) then
	# if only generating index, add -t option and throw away the output
	($printcommand $printoptions -t $tempTroffFile > /dev/null) >& $tempIndexFile
else if ($preview) then
	# if previewing, use either X windows or nroff
	if ($?DISPLAY) then
		$printcommand $printoptions -TX75 $tempTroffFile
	else
		($printcommand $printoptions -Tascii $tempTroffFile > $tempNroffFile) >& /dev/null
		more $tempNroffFile
	endif
else
	# otherwise just print it out
	($printcommand $printoptions $tempTroffFile | lpr ) >& $tempIndexFile
	$contentscmd $tempIndexFile
	if (-r title.t) $printcommand $printoptions $dirheader/shared title.t
else
endif

if (-r $tempIndexFile) cat $tempIndexFile >>! $ALMAGEST_INDEX
/bin/rm -f $tempFiles
# XXX we'll enable this later
#if (!($icons_norm)) /bin/rm -f ../icons/*.ps ../*/icons/*.ps
exit 0

catch:
        # prevent the "no match" error message if there are no temporary files
        set nonomatch
	/bin/rm -f $tempFiles
	# XXX we'll enable this later, too.
	#if (!($icons_norm)) /bin/rm -f ../icons/*.ps ../*/icons/*.ps
        exit 1
