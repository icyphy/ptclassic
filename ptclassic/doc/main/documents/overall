.\" $Id$
.\"
.\" Use printsec in ~ptolemy/doc/bin or Makefiles in ~ptolemy/doc
.\" to print this out.  To get this section only, as a standalone document,
.\"     % cd ~ptolemy/doc/sect1/ptlang
.\"     % make print
.\"
.\" If you edit this document, PLEASE BE SURE TO MANUALLY CHANGE THE DATE
.\" BELOW, to indicate a new version.  Be sure you have properly checked
.\" out this file with SCCS (the version number should not be a number below):
.VR 0.$Revision$ $Date$
.TI "\*(PT Documentation"
.AU
Edward A. Lee
.AE
.H1 "Introduction
.pp
Since \*(PT is by design an extensible system,
the documentation must be also be extensible.
To ensure reasonable portability, only standard tools
in the Berkeley Unix\** environment
.(f
\** Unix is a trademark of AT&T.
.)f
have been used.
Furthermore, all shell scripts and Makefiles are supplied
along with the documentation so that they can be modified if
necessary.
The formating is with ditroff (device independent troff)
.IE ditroff
with the -me macros, eqn, and tbl.  In addition, some custom macros
.IE "me macros"
have been supplied in order to enforce a consistent look
across all \*(PT documents.
These macros and their use are explained here.
The -me macros will not be covered, since they are adequately
documented elsewhere.
.H1 "Printing the manual"
.pp
.IE "printing"
First, all scripts for printing the manual use the c shell,
and require that the printer you wish to use be defined.
To do this, place the following line in the file .cshrc in
.IE "cshrc"
your home directory:
.(c
setenv PRINTER lw
.)c
.IE "PRINTER variable"
where
.c lw
is replaced with whatever name your printer has.
.pp
All kernel documentation and utilities for printing documentation
are contained in the directory ~ptolemy/doc.
It is divided into sections as follows:
.ip "main:" 1i
This directory documents the \*(PT kernel and user interfaces.
.ip "bin:" 1i
The scripts for printing the manual are here.
.ip "headers:" 1i
The troff header files are here.
.lp
Domains are documented where their source code resides.
For instance, the documentation for the SDF domain is
in ~ptolemy/src/domains/sdf/doc.
Each directory with documentation has a Makefile.
Printing subsections of the manual can be
accomplished by typing "make print" in the appropriate directory.
.IE "Makefile"
For instance, to print the whole manual,
.(c
% cd ~ptolemy/doc
% make print
.)c
To print only section 1 of the manual, which contains this section,
.(c
% cd ~ptolemy/doc/main
% make print
.)c
You can pass options to ditroff.  For instance, suppose you wish
to print only pages 48 through the end of section 1.
Then use
.(c
make OPTIONS=-o48- print
.)c
Any set of ditroff options may be passed this way.
.IE "ditroff options"
To print only the pigi document,
.(c
% cd ~ptolemy/doc/main/pigi
% make print
.)c
A table of contents for each major section will also be
printed.  Sorry, but this may not be printed in the proper
order, so some rearranging of the pages may be required.
If you are printing the entire manual, an index will be generated
after the entire manual has been printed.
If you have printed a new version of a subsection,
and wish to update the index, then:
.IE "index, printing"
.(c
% cd ~ptolemy/doc
% make prindex
.)c
.pp
When only a subsection is printed, every attempt is made to format
it as a standalone document.  For this reason, sections
may be numbered differently than they would be in the complete
manual.  In addition, a title page may appear that does not
appear when the complete manual is printed.
.H1 "Writing new sections"
.pp
In order to get consistent documentation, a set of troff
macros is used to control most important formatting options.
These macros are explained here.
The set of macros used to document basic capabilities
is different from the set used to document demos and stars.
For stars, the formatted documentation will be generated
automatically by the preprocessor. For demos, you must generate
it yourself.
.H2 "Basic documents"
.pp
An example of a basic document is this one,
covering \*(PT documentation.
The source for this document is in ~ptolemy/doc/main/documents.
The macros it uses are defined in ~ptolemy/doc/headers.
In that directory, it uses macros defined in the file called
``shared'', and in either the file called ``standalone'' or ``together'',
depending on whether the document is printed by itself
or in combination with other manual sections.
.pp
A typical document has the following syntax:
.(c
	.\\\\\&" %\&W\&%	%\&G\&%
	.VR 0.%\&I\&% %\&G\&%
	.TI "SECTION TITLE"
	.AU
	Author list
	one name per line
	no punctuation
	.AE
	.H1 "Section Title"
	.H2 "Title"
	.H3 "Title"
	.H4 "Title"
	.UH "Un-numbered header"
.)c
Text appearing between headers uses standard -me macro formatting.
The first line is a comment that will be translated by sccs
.IE sccs
into a version number for the document, looking something like:
.(c
	.\\\\\&" @(#)filename 1.1     10/14/90
.)c
This is interpreted by troff as a comment, and hence has no
affect on the output.
The version number that will appear on the output
is specified by the .VR macro.
.IE "VR macro"
It takes two arguments, a version number and a date.
These two arguments will be printed in the lower left and right
corners of each page, respectively.
If the version number is given as ``%\&I\&%'', it will be
translated by sccs into the same version number that follows
``filename'' in the ``@(#)'' line above.
For instance, this document is version ``$Revision$'' (see the lower
left corner), with a prepended number
corresponding to major releases of \*(PT.
If the date is given by ``%\&G\&%'', it will be translated
by sccs into a date as shown in the lower right hand corner of
this document.
.pp
The ``.TI'' macro gives the section title.
.IE "TI macro"
When the document is printed standalone, this title will be put
on a separate title page.
Otherwise, it will be a level-one header.
The rest of the macros should be self explanatory.
A table of contents will be generated using these headers.
.H2 "Adding to main"
.pp
If you are adding a new document to the ``main'' part of the \*(PT
documentation, contained in ~ptolemy/doc/main, then you must
edit the Makefile in ~ptolemy/main.
Simply add your new directory name to the definitions of the variables
.c DIRS
and
.c SECTIONS,
using existing entries as a model.
.pp
Your new directory should contain a file called ``overall''
which defines the entire document.  It may contain lines like
.(c
	.so filename
.)c
to source from another file.
Typically, all major subsections of the document would be written
in their own file, with a corresponding ``.so'' entry in ``overall''.
.pp
Your new directory should also itself contain a Makefile, used
for printing the document in standalone form.  A copy of the Makefile
in ~ptolemy/doc/main/documents should work fine.
.H2 "Restricted filenames in doc/main"
.pp
In any documentation directory, when the documentation is printed,
a file named ``index'' will be created.
.IE "index, file"
If there already is such a file, and you have write permission,
it will be clobbered.
Hence, you should not store document sections in a file called ``index''.
.H2 "Index entries"
.pp
The documentation scripts for \*(PT will automatically
generate an index.
Entries in the index must be defined in the document source
using the macro:
.IE "index, entries"
.(c
	.IE "entry"
.)c
The entries will be sorted alphabetically.
.IE "index entries"
.IE "IE macro"
If you look at the index printed with this document,
you will find an entry ``index'' pointing right here.
If you wish for a two word entry to appear twice,
alphabetically by each of the two words, then you must use two index
entries:
.(c
	.IE "two words"
	.IE "words, two"
.)c
No additional editing will be done on index entries.
For this reason, index entries should be carefully chosen.
For example, please do not put the following entry in every
demo description:
.(c
	.IE "\*(PT demo"
.)c
This will lead to hundreds of identical, and very uninteresting index
entries.
Avoid index entries beginning with very generic words in the \*(PT
vocabulary, like \*(PT,
.c star,
.c galaxy,
or
.c domain.
Of course, if you are writing some explanation of these basic terms,
then an index entry is appropriate.
.H2 "Special fonts and displays"
.pp
By convention, \*(PT documentation always refers to \*(PT
using the troff string invoked by the sequence ``\\*(PT''.
This gets formatted in a standard way with a standard font.
The overall \*(PT version number is \*(PV, invoked
by the sequence ``\\*(PV''.
.pp
In addition, c++ class names are set in a special font
by using the ``.c'' macro:
.(c
	.c Class
.)c
as shown here:
.c Class.
For a display entirely set in this font, with no fill,
use the macro pair ``.(c ... .)c'', as in
.(c
	.(c
	text
	goes
	here.
	.)c
.)c
which will come out like:
.(c
text
goes
here.
.)c
This font is also used to highlight keywords,
and to display sections of source code.
The ``.(c ... .)c'' macro pair attempt to keep the text between them
on one page, starting a new page if there isn't room on the current
one.  The ``.(d ... .)d'' macro pair have the same function
but without the keep.
.H2 "Documenting stars"
.pp
Manual entries for new stars will be generated automatically
if you follow the directions given in the section above on defining new
stars.  You need not, therefore, be concerned with the
troff macros used for this.
All editing of the star documentation should be done in the .pl file,
not in the troff file.
.IE "stars, documenting"
.H2 "Documenting new galaxies and demos"
.pp
.IE "galaxies, documenting"
.IE "demos, documenting"
Galaxies and demos must be documented manually, unlike stars.
The troff source files for galaxies should go in XXX/doc/stars,
where XXX is the location of the domain source directory.
Since galaxies can be used exactly as if they were stars,
it is logical that their documentation should appear with
the stars.
Troff source files for demos should go in XXX/doc/demos,
where XXX is again the location of the domain source directory.
.pp
In both cases, the syntax of the document source files is as follows:
.(c
	.\\\\\&" %\&W\&%	%\&G\&%
	.NA "Name of galaxy or demo"
	.SD
	Short descriptor
	.SE
	.SV %\&I\&% %\&G\&%
	.AL "Author list, with commas, and a period."
	.LO "Location of the galaxy or demo definition"
	.LD
	Long descriptor.
	This can contain any -me, eqn, or tbl directives.
	It can also contain un-numbered headers:
	.UH "title"
	.SA
	"See Also"
	List of pointers to other entries in the manual
	.ES \" Every entry must end with this call
.)c
The first line is again a troff comment, containing the sccs version ID.
The second line defines how the version ID and date should be printed
when the manual is printed.
The version number %\&I\&% and date %\&G\&%
keywords have the same meaning as before.
The date here must be manually modified when the galaxy or demo is modified.
The rest of the entries should be self-explanatory.
Here is an example:
.(c
	.\\\\\&" %\&W\&%	%\&G\&%
	.NA adaptFilter
	.SD
	A demo of the LMS adaptive filter star
	.DE
	.IE LMS
	.SV %\&I\&% %\&G\&%
	.AL "Edward A. Lee"
	.LO "~ptolemy/src/domains/sdf/demo"
	.LD
	A Gaussian white noise signal serves as input to an
	FIR filter and an adaptive filter using the LMS algorithm.
	The output of the two filters and the error are displayed
	after the run.  By examining the parameters of the two
	filters, you can find the filenames for the FIR filter
	coefficients and the initial tap values.  The final tap
	values can be saved by specifying a saveTapsFile in the
	adaptive filter star.
	.SA
	IIDGaussian,
	LMS,
	FIR.
	.ES
.)c
Note that a carefully chosen index entry has been inserted here.
\fIIt is not necessary to insert an explicit index entry for the
name of the galaxy or demo\fR.  This will be done automatically.
It is also not recommended that index entries be inserted
for all the ``See Also'' entries.
In this case, however, the main purpose of the demo is to demonstrate
the
.c LMS
star, and the name of the demo is not something like
.c LMSdemo,
so an explicit entry is advised.
.pp
A single star, galaxy, or demo document page can be printed
using the command ``printpage filename''.
This command is stored in ~ptolemy/doc/bin, but also has a link
in ~ptolemy/bin, so it should be in your path.
.H2 "Documenting new domains"
.pp
.IE "domains, documenting"
To include a new domain in the manual, you must 
edit the Makefile in ~ptolemy/doc to add to the
.c DIRS
variable the name of the directory containing the domain documentation.
This will cause your domain to be printed along with the rest of the manual.
Suppose your domain is documented in directory XXX/doc.
This directory should contain a set of specific files recognized
by the documentation scripts.
.UH "title:"
The directory XXX/doc should contain a file called ``title''
which defines the title page for the domain.
A typical title page is:
.(c
	.\\\\\&" %\&W\&%	%\&G\&%
	.eh ''''
	.oh ''''
	.bp
	.(b C
	.sp 1.5i
	.S 200
	.ft 6
	2
	.S 80
	.sp 2i
	SDF
	.sp 1i
	Domain
	.)b
.)c
These are all -me macro calls, except ``.S'' which is defined
in ~ptolemy/doc/headers/shared.  It changes the font size in an orderly way.
The eighth line from the top specifies a section number for the overall
\*(PT document.  This is optional, but should obviously be a large
enough number so that is doesn't conflict with other domain sections.
.UH "init:"
The directory XXX/doc should contain a file called ``init''
with the following definitions:
.(c
	.\\\\\&" %\&W\&%	%\&G\&%
	.nr SN 0 \" Initialize section number
	.nr AS 2 \" Almagest section number
.)c
where the section number is changed to be the same as that used in
the ``title'' file.
Pages of the domain section will be numbered X-Y, where X is the
section number defined by the init file, and Y is the page number.
.UH "overall:"
Just as with ordinary manual sections, this file contains the
main documentation of the domain, including explanations of
its basic operation, how to add stars, how its interface to
other domains works, etc.
The macros it uses are identical to those of ``basic documents''
as explained above.
.UH "stars:"
This directory should contain the troff source documents for
the stars in the domain.
If the directory is absent, no stars documentation will be printed.
.UH "starstitle:"
This file contains the title of the stars documentation section,
as in the following example:
.(c
	.\\\\\&" %\&W\&%	%\&G\&%
	.TI "SDF Stars"
.)c
.UH "demos:"
This directory should contain the troff source documents for
the demos in the domain.
If the directory is absent, no demos documentation will be printed.
.UH "demotitle:"
This file contains the title of the demos documentation section,
as in the following example:
.(c
	.\\\\\&" %\&W\&%	%\&G\&%
	.TI "SDF Demos"
.)c
.H2 "Restricted filenames in domain documents"
.pp
The following filenames in an XXX/doc directory,
where XXX is the domain directory, have special functions, as explained above:
.(c
index
title
init
overall
stars (a directory)
starstitle
demos (a directory)
demostitle
Makefile
.)c
Complete documentation of a domain contains all of these,
plus possibly other files sourced using .so.
