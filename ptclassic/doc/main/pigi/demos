.\" $Id$
.H1 "Running the Ptolemy Demos"
.pp
Once X is running, you can get
some experience by running the Ptolemy demos.
Any user can do this, although average users are
not permitted to change the demos.  If you feel compelled
to change a demo, you can copy it to your own directory
by using ``cp -r''.
See the section below on copying and moving Oct facets.
.H2 "Executing Demos"
.pp
To execute a demo, in any xterm window,
change to the demo directory by typing:
.(c
cd ~ptolemy/demo
.)c
Start Ptolemy via the Ptolemy graphical interface:
.(c
pigi &
.)c
.IE "starting pigi"
.pp
You have started two processes: the graphic editor,
.i vem ,
and a process named
.i pigiRpc
that contains the pigi code and the Ptolemy kernel.
A
.i vem
console window will open in the upper left corner, and a
palette of demo directories directly below it.
Ptolemy (which runs in the pigiRpc process) will automatically start and open
a greeting window.
Click any mouse button in this window to proceed.
The remaining VEM windows can be moved and resized.
.pp
The palette contains icons that themselves represent palettes.
If you have a color monitor, the outline on the icons is purple,
the color used for icons representing palettes.
In the current version of \*(PT, three palettes are included,
one for each of three domains.
We will begin with the leftmost palette, which contains applications
in the synchronous dataflow (SDF) domain.
.pp
Place the mouse cursor in
the palette window, and click the middle mouse button.
The VEM command menu appears.
This menu is of a style called a ``walking menu''.
.IE "walking menu"
The names displayed are only headers.
To see the commands, you must move the mouse to the arrows at the right
of the menu.
A sub menu should appear.
Clicking any mouse button with a command highlighted will execute that command.
To remove the menu without executing any command, simply click a mouse button
anywhere outside the menu.
.pp
The VEM menu is used for manipulating the
graphical description of an application.
We will explain these manipulations later.
For now, you want to find and execute a demo.
Place the mouse cursor on the icon labeled ``SDF'', at the left of the palette.
Get the \*(PT command menu by holding the shift key and clicking
the middle mouse button.
This menu has the same style as the VEM menu.
Go to the ``Window'' sub menu, and execute the \fIlook-inside\fP command.
.IE "look-inside"
A new palette will open, containing icons representing \*(PT
universes, which have no inputs or outputs.
These universes are demos of \*(PT,
self-contained application systems.
You may move and resize this palette window in the usual way.
.pp
Note in the \*(PT menu that the \fIlook-inside\fP directive has an ``i'' next to it.
This is a single key accelerator.
Without using the walking menu, you can look inside any icon by simply
placing the mouse cursor and hitting the ``i'' key on the keyboard.
The single-key accelerators are extremely useful.
.IE "single-key accelerators"
In time, you will find that you use the menu only for commands
that have no accelerator.
.pp
To look inside one of the universes, and see how it is put together,
put the mouse over the desired icon,
and look inside (using the walking menu, or typing an ``i'').
Try this with the first universe icon in the second row, which shows the
use of a
finite impulse response filter to perform linear interpolation.
This system consists of a noise source,
an FIR filter, and two display stars.
To run this system using the walking menu,
place the mouse cursor anywhere in the window.
Again hold the shift key, click the middle
mouse button.  Go to the ``Exec'' sub-menu, and select ``run'' by clicking
any button.  Notice that typing an ``R'' would have had the
same effect.
.IE "run"
When asked for the number of iterations,
click on ``OK'' (or hit ``meta-return'') to accept the default.
When the run is finished, two graphs appear.
Try resizing and moving these displays.
Experiment in these xgraph windows with drawing boxes;
to draw a box, just drag any mouse button.
This causes a new window to open with a display of only the area
that your box enclosed.
Any of the now numerous open windows can be closed with a control-d.
.pp
A few additional window manipulations will prove useful almost
immediately.  In any of the VEM windows, you can closely examine
any part of the window by drawing a box enclosing the area of interest
and typing an ``o''.  Like in an xgraph window,
this causes a new window to open, showing only the enclosed area.
Unlike xgraph windows, typing the ``o'' is necessary.
In addition, you can enlarge a window using the standard X manipulation,
and type an ``f'' to fill the window with the schematic.
You can also zoom-in (or magnify) by typing a ``z'',
and zoom-out by typing a ``Z''.
These and other VEM commands are referenced again later,
and documented completely in the VEM section of the Almagest.
.pp
You may wish to understand exactly how this FIR filter interpolates between
samples generated by the
.c IIDUniform
star.
The action is all in the FIR filter.
To understand its function, place the mouse cursor on it,
and execute the Other:profile command.
Here ``Other'' refers to the command category and ``profile''
to the command in the submenu (you may also type ``,'').
.IE "profile"
This command summarizes the behavior of a star.
Further information can be obtained with the Other:man command,
however as of this writing this has not been fully implemented.
To see the parameter values of the star, execute the Edit:edit-params
command, which has accelerator ``e''.
Notice that the FIR filter supports decimation and interpolation.
In this case, we are upsampling by a ratio of 8.
The tap values describe a triangular impulse response,
which leads to linear interpolation between samples.
.pp
You can safely explore other demos in the palette by the same mechanism.
The demos this palette
are documented in the SDF section of the Almagest, the Ptolemy manual.
.H2 "Dialog Boxes"
.pp
As you explore the demos, you will frequently encounter VEM dialog boxes.
.IE "dialog boxes"
For example, the run command triggers a box asking for
the number of iterations.
To use the default number, you simply need to click ``OK'' or type
the key combination indicated in the ``OK'' button.
To change the number, you must use
EMACS-like editing control characters.
These are summarized below:
.(b
.TS
center, box;
c s
l lw(4i).
\fBDialog Box Editing Control Characters\fP
.sp 0.5
Key	Description
=
Delete, control-h	Delete previous character.
control-a	Move to beginning of line.
control-b	Move backward one character.
control-d	Delete next character.
control-e	Move to end of line.
control-f	Move forward one character.
control-k	Kill (delete) to end of line.
meta-b	Move backward one word.
meta-f	Move forward one word.
meta-h, meta-delete	Delete previous word.
.TE
.)b
In addition, using the mouse you can position the cursor anywhere
in the text to begin editing by clicking the left button.  The left
and right arrow keys may also be used to move the cursor.
.pp
For example, to enter a new number for the number of iterations for run,
position the cursor in the number box, type control-k followed by the
new number.
Do not type return;
this adds a second line to the dialog entry, which is confusing at best.
.pp
Many dialog boxes have more than one field.
The current field is highlighted, and anything you type will go
into it.
To change the current field to a different one, click the left
mouse button on the new one,
or use the ``Tab'' key to move to the next one.
.pp
Since you started Pigi in a directory in which you do not have write
permission, it is not possible here to create new universes, nor
to modify the demos.  There is currently no convenient way
to change to a new directory, so you should exit Ptolemy
before proceeding to the next section, and return to a directory
where you have write permission.
Do this by first closing all xgraph windows that you have open by
typing ``control-d'', and then typing ``control-d'' in the VEM console
window.
A dialog box may appear with a menu of facets that VEM thinks have
been changed.  Since all of these belong to the user ``ptolemy'', you do
not want to save them.
Do not select any of them.  Just click ``OK''.
Then a warning window will appear telling you that closing the console
window will terminate the program.  Just click ``Yes''.
