#ifndef _<T>State_h
#define _<T>State_h 1

#ifdef __GNUG__
#pragma interface
#endif

#include "State.h"

/**************************************************************************
Version identification:
$Id$

 Copyright (c) 1990 The Regents of the University of California.
                       All Rights Reserved.

 Programmer:  I. Kuroda and J. T. Buck
 Date of creation: 6/15/89
 Revisions:

 State with <C> type

 IMPORTANT!!!!  If the name of this file is not ScalarState.hP, DO NOT
 EDIT IT!  The files IntState.h and FloatState.h are both generated from
 a template file by means of the "genclass" program.

**************************************************************************/

///////////////////////////////////////////
// class  <T>State
///////////////////////////////////////////


class <T>State : public State
{
public:
        // constructor
        <T>State();

        // parses initValue to set value
        void initialize();

        // the type
	const char* type() const; // { return "<T>";}

        // the value as a string
	StringList currentValue() const;

        // assignment from a <C>
        <C> operator=(<C> rvalue) { return val = rvalue;}

        // casting to a <C>
        operator <C>() { return val;}

	// class identification
	int isA(const char*) const;
	const char* readClassName() const {return "<T>State";}

	State* clone () const; //  {return new <T>State;}

protected:
	<C> val;
};	


#endif
