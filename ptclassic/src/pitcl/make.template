# Makefile for Ptolemy/Tcl interpreter
# Version identification:
# $Id$
# Copyright (c) 1990-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
# Date of creation: 3/4/92
# Written by: J. Buck
#
# If this file's name is "make.template" and there is no makefile in
# this directory, do
#	cp make.template makefile
#	make depend
# This will add the dependencies to the makefile.

# Root of Ptolemy directory
ROOT =		../..
# Path (absolute or relative) to the object directory root
OBJDIR =	..
# True source directory
VPATH =		$(ROOT)/src/ptcl

# get configuration info
CONFIG =	$(ROOT)/mk/config-$(PTARCH).mk
include $(CONFIG)

INCL = 		-I$(KERNDIR) -I$(TCL_INCDIR) $(PTCOMPAT_INCSPEC)

# config-default.mk sets this to 'yes', but we can't include the ipus domain
# since the non-tk ipus stars need Blackboard* symbols, which are defined in
# the tk ipus stars.
INCLUDE_IPUS_DOMAIN  = no

# Include information on all stars and targets.
include $(ROOT)/mk/stars.mk

# libraries
PTINY_LIBS =		$(PTINY_STAR_LIBS) -lgantt -lptolemy $(TCL_LIBSPEC) \
			$(SYSLIBS) $(LIB_FLUSH_CACHE)
LIBS = $(STAR_LIBS) -lgantt -lptolemy $(TCL_LIBSPEC) $(SYSLIBS)\
			$(LIB_FLUSH_CACHE)

PTINY_LIBFILES =	$(PTINY_STAR_LIBFILES) \
				$(LIBDIR)/libptolemy.$(LIBSUFFIX) \
				$(LIBDIR)/libgantt.$(LIBSUFFIX)
LIBFILES = 		$(STAR_LIBFILES) $(LIBDIR)/libptolemy.$(LIBSUFFIX) \
				$(LIBDIR)/libgantt.$(LIBSUFFIX)

# first star determines default domain as a rule
PTINY_STARS =		$(PTINY_SDFSTARS) $(DESTARS)
ALLSTARS = 		$(OPTIONAL_STARS) $(SDFSTARS) \
			$(CGCSTARS) $(CG96STARS) $(CG56STARS) $(SilageSTARS) \
			$(VHDLFSTARS) $(VHDLBSTARS) $(CGSTARS) \
			$(DDFSTARS) $(THORSTARS) $(DESTARS) $(BDFSTARS) \
			$(MDSDFSTARS)

PTINY_TARGETS =		$(SDFTARGETS) 
ALLTARGETS =		$(SDFTARGETS) $(CGTARGETS) $(CGCTARGETS) \
			$(CG56TARGETS) $(CG96TARGETS) $(BDFTARGETS) \
			$(MDSDFTARGETS)

PTINY_PTCL_MODS = 	$(OBJS) $(PTINY_STARS) $(PTINY_TARGETS) $(PTINY_LIBS)
PTCL_MODS = 		$(OBJS) $(ALLSTARS) $(ALLTARGETS) $(LIBS)

# Sources
SRCS =			PTcl.cc ptclMain.cc ptclError.cc ptclAppInit.cc

# Header files
HDRS =			PTcl.h

# Objects
OBJS =			$(SRCS:.cc=.o)

all:	makefile ptcl


# On some architectures we strip out the debugging so the binaries are smaller
# Note that doing a full strip can sometimes disable incremental linking.

ptcl:		$(OBJS) $(LIBFILES) $(ALLSTARS) $(ALLTARGETS)
		rm -f $@ 
		$(PURELINK) $(LINKER) $(LINKFLAGS) $(PTCL_MODS) -o $@ 
		$(STRIP_DEBUG) $@

ptcl.debug:	$(OBJS) $(LIBFILES) $(ALLSTARS) $(ALLTARGETS)
		rm -f $@ 
		$(PURELINK) $(LINKER) $(LINKFLAGS_D) $(PTCL_MODS) -o $@ 

ptcl.debug.purify:	$(OBJS) $(LIBFILES) $(ALLSTARS) $(ALLTARGETS)
		rm -f $@ 
		$(PURIFY) $(LINKER) $(LINKFLAGS_D) $(PTCL_MODS) -o $@ 

# Small version of ptcl, sdf domain (but with no image stars), and de domain
ptcl.ptiny:	$(OBJS) $(PTINY_LIBFILES) $(PTINY_STARS) $(PTINY_TARGETS)
		rm -f $@ 
		$(PURELINK) $(LINKER) $(LINKFLAGS_D) $(PTINY_PTCL_MODS) -o $@
		$(STRIP_DEBUG) $@

# Small version of ptcl, sdf domain (but with no image stars), and de domain
# made with purify and debugging
ptcl.ptiny.debug.purify:	$(OBJS) $(PTINY_LIBFILES) $(PTINY_STARS) $(PTINY_TARGETS)
		rm -f $@ 
		$(PURIFY) $(LINKER) $(LINKFLAGS_D) $(PTINY_PTCL_MODS) -o $@

# "make install" puts things in the official place
install:	$(BINDIR)/ptcl

$(BINDIR)/ptcl:	ptcl
		rm -f $(BINDIR)/ptcl
		ln ptcl $(BINDIR)

# extra stuff to delete
REALCLEAN_STUFF=ptcl ptcl.debug ptcl.ptiny


LIB=dummy		# required since no LIB
# include common definitions, rules
include $(ROOT)/mk/common.mk


# Don't add anything after the next line; makedepend will zap it.
# DO NOT DELETE THIS LINE -- make depend depends on it.

