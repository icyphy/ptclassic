# Test suite for the ::pitcl::blocks command.
#
# @Author: Edward A. Lee
#
# @Version: @(#)testBlocks.itcl	1.4   04/04/97
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

if {[string compare test [info procs test]] == 1} then { 
    source $TYCHO/kernel/test/testDefs.tcl
} {}

# Uncomment this to get a full report, or set in your Tcl shell window.
# set VERBOSE 1

# Set the following to avoid endless calls to exit.
set reallyExit 0

######################################################################
#### setup
# Create a hierarchical universe x with galaxy x.y

test blocks-0 {create a test universe for blocks command} {
    namespace ::pitcl {
        defGalaxy y SDF {
            addBlock z Ramp
            galaxyPort out z.output
        }
        addUniverse x SDF
        addBlock a y
        addBlock b Ramp
        addBlock c Add
        addBlock d XMgraph
        connect a.out c.input
        connect b.output c.input
        connect c.output d.input
    }
} {}

######################################################################
#### blocks

test blocks-1 {get the top level blocks of a universe} {
    ::pitcl::currentGalaxy .x
    ::pitcl::blocks
} {a b c d}

test blocks-2 {get the top level blocks of a galaxy by relative name} {
    ::pitcl::currentGalaxy .x
    ::pitcl::blocks a
} {z}

test blocks-3 {get the top level blocks of a galaxy by absolute name} {
    ::pitcl::currentGalaxy .x
    ::pitcl::blocks .x.a
} {z}

test blocks-4 {get the top level blocks of a galaxy by dotted name} {
    ::pitcl::currentGalaxy .x
    ::pitcl::blocks .x.a
} {z}

test blocks-5 {get all stars of a universe} {
    ::pitcl::currentGalaxy .x
    ::pitcl::blocks -deep
} {z b c d}

test blocks-6 {get the full name of all stars of a universe} {
    ::pitcl::currentGalaxy .x
    ::pitcl::blocks -deep -fullname
} {.x.a.z .x.b .x.c .x.d}

test blocks-7 {get the names from another universe} {
    ::pitcl::addUniverse .confusion DE
    ::pitcl::blocks -deep -fullname .x
} {.x.a.z .x.b .x.c .x.d}


doneTests
