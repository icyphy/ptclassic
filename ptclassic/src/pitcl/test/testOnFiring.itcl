# Test suite for the onFiring command in pitcl.
#
# @Author: Edward A. Lee
#
# @Version: @(#)testOnFiring.itcl	1.3   05/10/97
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

if {[string compare test [info procs test]] == 1} then { 
    source $TYCHO/kernel/test/testDefs.tcl
} {}

# Uncomment this to get a full report, or set in your Tcl shell window.
# set VERBOSE 1

# Set the following to avoid endless calls to exit.
set reallyExit 0

######################################################################
#### setup
# Create a simple universe.

test onfiring-0 {create a test universe} {
    namespace ::pitcl {
        addUniverse x SDF
        addBlock a WaveForm
        addBlock b Ramp
        addBlock c Add
        addBlock d BlackHole
        connect .x.a.output .x.c.input
        connect .x.b.output .x.c.input
        connect .x.c.output .x.d.input
        onFiringCancel all
    }
} {}

######################################################################
#### onFiring

test onfiring-1 {Check the onFiring command} {
    set handle [::pitcl::onFiring {lappend testresult}]
    string match onFiring* $handle
} {1}

test onfiring-2 {Check the execution of the bound command} {
    set testresult {}
    ::pitcl::run .x
    ::pitcl::wrapup .x
    list $testresult
} {{.x.a .x.b .x.c .x.d}}

test onfiring-3 {Check the onFiringCancel command} {
    ::pitcl::onFiringCancel $handle
    set testresult {}
    ::pitcl::run .x
    ::pitcl::wrapup .x
    list $testresult
} {{}}

test onfiring-4 {Check onFiring with a specific star} {
    ::pitcl::onFiring .x.a {lappend testresult}
    set testresult {}
    ::pitcl::run .x 3
    ::pitcl::wrapup .x
    list $testresult
} {{.x.a .x.a .x.a}}

test onfiring-5 {Check getData -geo} {
    ::pitcl::connect -note 0 .x.c.output .x.d.input#1
    ::pitcl::init .x
    ::pitcl::getData -geo .x.d.input#1
} {0.0}

# Procedure that actually monitors the inputs
proc monitorInput {star} {
    global ::data
    # NOTE: Errors here are not handled correctly
    lappend data [::pitcl::getData $star.input#1]
}

test onfiring-6 {Check getData} {
    ::pitcl::onFiring .x.d {monitorInput}
    set data {}
    ::pitcl::run .x 5
    ::pitcl::wrapup .x
    list $data
} {{0.0 1.0 0.0 3.0 2.0}}

# Procedure that actually monitors the inputs
proc monitorInput2 {star} {
    global ::data
    # NOTE: Errors here are not handled correctly
    set data [concat $data [::pitcl::getData $star.input]]
}

test onfiring-7 {create a multirate test universe} {
    namespace ::pitcl {
        addUniverse x SDF
        addBlock a Ramp
        addBlock b Average
        addBlock c BlackHole
        connect .x.a.output .x.b.input
        connect .x.b.output .x.c.input
        onFiringCancel all
        onFiring .x.b {monitorInput2}   
        set data {}
        run .x 2
        wrapup .x
        list $data
    }
} {{0.0 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0}}

doneTests
