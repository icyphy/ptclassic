# Test suite for the ::pitcl::ports command.
#
# @Author: Edward A. Lee
#
# @Version: @(#)testPorts.itcl	1.3   03/27/97
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

if {[string compare test [info procs test]] == 1} then { 
    source $TYCHO/kernel/test/testDefs.tcl
} {}

# Uncomment this to get a full report, or set in your Tcl shell window.
# set VERBOSE 1

# Set the following to avoid endless calls to exit.
set reallyExit 0

######################################################################
#### setup
# Create a hierarchical universe x with galaxy x.y

test ports-0 {create a test universe} {
    namespace pitcl {
        defGalaxy y SDF {
            addBlock z Ramp
            galaxyPort out z.output
        }
        addUniverse x SDF
        addBlock a y
        addBlock b Ramp
        addBlock c Add
        addBlock d XMgraph
        addBlock e y
        connect a.out c.input
        connect b.output c.input
        connect c.output d.input
        connect e.out d.input
    }
} {}

######################################################################
#### ports

test ports-1 {list ports of a master star} {
    ::pitcl::ports Ramp
} {output}

test ports-2 {list ports of a master star with multiports} {
    ::pitcl::ports Add
} {output}

test ports-3 {list ports of a master star with only multiports} {
    ::pitcl::ports XMgraph
} {}

test ports-4 {list ports of a simple star} {
    ::pitcl::ports b
} {output}

test ports-5 {list ports of a star with multiports} {
    ::pitcl::ports d
} {input#1 input#2}

test ports-6 {list mulitports of a master star} {
    ::pitcl::ports -multiports Add
} {input {}}

test ports-7 {list mulitports of a star instance} {
    ::pitcl::ports -multiports c
} {input {input#1 input#2}}

test ports-8 {list input ports only} {
    ::pitcl::ports -inputs c
} {input#1 input#2}

test ports-9 {list output ports only} {
    ::pitcl::ports -outputs c
} {output}

test ports-10 {list input multiports only} {
    ::pitcl::ports -inputs -multiports c
} {input {input#1 input#2}}

test ports-11 {list output multiports only} {
    ::pitcl::ports -outputs -multiports c
} {}

test ports-12 {list output ports of a star with no outputs} {
    ::pitcl::ports -outputs XMgraph
} {}

test ports-13 {verify that an instance has no inout ports} {
    ::pitcl::ports -outputs -inputs a
} {}

doneTests
