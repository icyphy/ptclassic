# This Makefile is used to the java loadable module.
#
# SCCS:  @(#) Makefile.in 1.89 97/12/12 16:31:45

# The directory containing the Tcl sources and headers appropriate
# for this version of Tk ("srcdir" will be replaced or has already
# been replaced by the configure script):
TCL_GENERIC_DIR = @TCL_SRC_DIR@/generic

# The directory containing the Tcl library archive file appropriate
# for this version of Tk:
TCL_BIN_DIR = @TCL_BIN_DIR@


# Specify which TclBlend system to build (jacl or tclblend).
TCLJAVA=@TCLJAVA@

# When building tclblend, it is necessary to link in the Java thread 
# libraries.  If you have access to native threads, use that.  Otherwise
# you must use green threads.  This builds a "green" executable that performs
# VM initialization before the Tcl interp runs.
#JTHREADS=green
JTHREADS=native

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

TOP_DIR =		@srcdir@/..
JAVA_DIR =		@JAVA_DIR@
JAVA_INC_DIR =		$(JAVA_DIR)/include
JAVA_BIN_DIR =		$(JAVA_DIR)/bin
JAVA_LIB_DIR =		$(JAVA_DIR)/lib

# Location of javac and javah so that we are sure we get the proper
# tools that correspond with $(JAVA_DIR)
JAVAC =			$(JAVA_BIN_DIR)/javac
JAVAH =			$(JAVA_BIN_DIR)/javah
JAVAC_FLAGS =           -g

# Architecture dependent include dir, such as /opt/jdk1.1.4/include/solaris
JAVA_ARCH_INCLUDE =	@JAVA_ARCH_INCLUDE@
# Architecture dependent lib dir, /opt/jdk1.1.4/lib/sparc/native_threads
JAVA_ARCH_LIB =		@JAVA_ARCH_LIB@

# Colon separated list of directories to search for libraries at runtime 
LIB_RUNTIME_DIR = 	$(JAVA_ARCH_LIB):$(TCL_BIN_DIR)
TCL_LD_SEARCH_FLAGS = 	@TCL_LD_SEARCH_FLAGS@

GENERIC_DIR = 		$(TOP_DIR)/generic
UNIX_DIR = 		$(TOP_DIR)/unix
TOOLS_DIR = 		$(TOP_DIR)/tools
DOC_DIR = 		$(TOP_DIR)/doc
WIN_DIR = 		$(TOP_DIR)/win
TEST_JAVA_DIR = 	$(TOP_DIR)/src/tests
TEST_CLASS_DIR = 	$(UNIX_DIR)/$(TCLJAVA)/tests
COMMON_JAVA_DIR	=	$(TOP_DIR)/src/common
NATIVE_JAVA_DIR =	$(TOP_DIR)/src/native
JAVA_JAVA_DIR =		$(TOP_DIR)/src/java
DEMO_JAVA_DIR =		$(TOP_DIR)/demos
TCLTEST =		$(TCL_BIN_DIR)/tcltest
CC =			@CC@
SHLIB_CFLAGS =		@SHLIB_CFLAGS@
SHLIB_LD =		@SHLIB_LD@
SHLIB_SUFFIX =		@SHLIB_SUFFIX@
SHLIB_VERSION =		@SHLIB_VERSION@
SRC_DIR =		@srcdir@
BUILDPKG =		CLASSPATH="$(TARGET_PATH)" buildpkg

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

prefix =	@prefix@
exec_prefix =	@exec_prefix@

# Directory in which to install libtcl.so or libtcl.a:
LIB_INSTALL_DIR =	$(INSTALL_ROOT)$(exec_prefix)/lib

# Directory to install the .class files:
BLEND_LIB_INSTALL_DIR = $(LIB_INSTALL_DIR)/tclblend

# Directory from which applications will reference the library of Tcl
# scripts
BLEND_LIBRARY =	$(prefix)/lib/tclblend$(VERSION)

# Path name to use when installing library scripts:
BLEND_SCRIPT_INSTALL_DIR =	$(INSTALL_ROOT)$(BLEND_LIBRARY)

# Directory containing platform dependent binaries.
BLEND_BIN_DIR =	$(INSTALL_ROOT)$(exec_prefix)/bin

# Tcl used to let the configure script choose which program to use
# for installing, but there are just too many different versions of
# "install" around;  better to use the install-sh script that comes
# with the distribution, which is slower but guaranteed to work.

INSTALL =		@srcdir@/install-sh -c
INSTALL_PROGRAM =	${INSTALL}
INSTALL_DATA =		${INSTALL} -m 644

STUDIO_LIB_DIR =	"/net/hotattack/export/hotattack4/install/Discovery/contest/sparc-S2/Java-Studio1.0/JS/classes"

TCLBLEND_CLASSPATH =    "$(COMMON_JAVA_DIR):$(NATIVE_JAVA_DIR):$(JAVA_LIB_DIR)/classes.zip"
JACL_CLASSPATH =        "$(COMMON_JAVA_DIR):$(JAVA_JAVA_DIR):$(JAVA_LIB_DIR)/classes.zip"
BEAN_CLASSPATH =        "$(JACL_CLASSPATH):$(STUDIO_LIB_DIR)"
TEST_CLASSPATH =        "$(TEST_JAVA_DIR)::$(TEST_JAVA_DIR)/javaload:$(JAVA_LIB_DIR)/classes.zip"
DEMO_CLASSPATH =        "$(DEMO_JAVA_DIR)/gluepkg:$(DEMO_JAVA_DIR)/simplepkg:$(DEMO_JAVA_DIR)/watchpkg:$(DEMO_JAVA_DIR)/pyramidpkg:$(JAVA_LIB_DIR)/classes.zip"

# Libraries to use when linking:
LIBS = $(TCL_LD_SEARCH_FLAGS) \
	-L$(JAVA_ARCH_LIB) -ljava \
	@TCL_BUILD_LIB_SPEC@ @TCL_LIBS@ -lc

CFLAGS = -g
CC_SWITCHES = $(CFLAGS) -D_REENTRANT -DTCL_MEM_DEBUG \
	-I. -I$(TCL_GENERIC_DIR) -I$(JAVA_INC_DIR) \
	-I$(JAVA_ARCH_INCLUDE) $(SHLIB_CFLAGS)

DEPEND_SWITCHES = $(CFLAGS) -I$(GENERIC_DIR) -I$(TCL_GENERIC_DIR) \
	-I$(JAVA_INC_DIR) -I$(JAVA_ARCH_INCLUDE) \
	$(AC_FLAGS) $(MATH_FLAGS) \
	$(GENERIC_FLAGS) $(PROTO_FLAGS) $(MEM_DEBUG_FLAGS) \
	-DTCL_SHLIB_EXT=\"$(SHLIB_SUFFIX)\"

OBJS = \
	javaCmd.o \
	javaInterp.o \
	javaObj.o \
	javaList.o \
	javaUtil.o \
	tclResult.o

TCLBLEND_CLASSES = $(INVOKER_CLASS) $(NATIVE_CLASSES) $(COMMON_CLASSES)
JACL_CLASSES =  $(INVOKER_CLASS) $(JAVA_CLASSES) $(COMMON_CLASSES)

SRCS = \
	$(GENERIC_DIR)/javaCmd.c \
	$(GENERIC_DIR)/javaInterp.c \
	$(GENERIC_DIR)/javaObj.c \
	$(GENERIC_DIR)/javaList.c \
	$(GENERIC_DIR)/javaUtil.c \
	$(GENERIC_DIR)/tclResult.c

COMMON_CLASSES = \
        $(TCLJAVA)/tcl/lang/AdaptorClassLoader.class \
        $(TCLJAVA)/tcl/lang/AdaptorGen.class \
	$(TCLJAVA)/tcl/lang/AssocData.class \
        $(TCLJAVA)/tcl/lang/BeanEvent.class \
        $(TCLJAVA)/tcl/lang/BeanEventMgr.class \
        $(TCLJAVA)/tcl/lang/BeanEventParamSet.class \
	$(TCLJAVA)/tcl/lang/BlendExtension.class \
	$(TCLJAVA)/tcl/lang/ClassRep.class \
	$(TCLJAVA)/tcl/lang/Command.class \
	$(TCLJAVA)/tcl/lang/CommandWithDispose.class \
	$(TCLJAVA)/tcl/lang/Extension.class \
        $(TCLJAVA)/tcl/lang/EventAdaptor.class \
        $(TCLJAVA)/tcl/lang/EventDeleter.class \
        $(TCLJAVA)/tcl/lang/FieldSig.class \
        $(TCLJAVA)/tcl/lang/FuncSig.class \
	$(TCLJAVA)/tcl/lang/InternalRep.class \
	$(TCLJAVA)/tcl/lang/JavaInvoke.class \
	$(TCLJAVA)/tcl/lang/JavaBindCmd.class \
	$(TCLJAVA)/tcl/lang/JavaCallCmd.class \
	$(TCLJAVA)/tcl/lang/JavaDefineClassCmd.class \
	$(TCLJAVA)/tcl/lang/JavaEventCmd.class \
	$(TCLJAVA)/tcl/lang/JavaFieldCmd.class \
	$(TCLJAVA)/tcl/lang/JavaGetInterpCmd.class \
	$(TCLJAVA)/tcl/lang/JavaInstanceofCmd.class \
	$(TCLJAVA)/tcl/lang/JavaInfoCmd.class \
	$(TCLJAVA)/tcl/lang/JavaLoadCmd.class \
	$(TCLJAVA)/tcl/lang/JavaNewCmd.class \
	$(TCLJAVA)/tcl/lang/JavaNullCmd.class \
	$(TCLJAVA)/tcl/lang/JavaPropCmd.class \
	$(TCLJAVA)/tcl/lang/JavaThrowCmd.class \
	$(TCLJAVA)/tcl/lang/PropertySig.class \
	$(TCLJAVA)/tcl/lang/ReflectException.class \
	$(TCLJAVA)/tcl/lang/ReflectObject.class \
	$(TCLJAVA)/tcl/lang/ArrayObject.class \
	$(TCLJAVA)/tcl/lang/TCL.class \
	$(TCLJAVA)/tcl/lang/TclBoolean.class \
	$(TCLJAVA)/tcl/lang/TclClassLoader.class \
	$(TCLJAVA)/tcl/lang/TclDouble.class \
	$(TCLJAVA)/tcl/lang/TclException.class \
	$(TCLJAVA)/tcl/lang/TclIndex.class \
	$(TCLJAVA)/tcl/lang/TclInteger.class \
	$(TCLJAVA)/tcl/lang/TclNumArgsException.class \
	$(TCLJAVA)/tcl/lang/TclPosixException.class \
	$(TCLJAVA)/tcl/lang/TclObject.class \
	$(TCLJAVA)/tcl/lang/TclRuntimeError.class \
	$(TCLJAVA)/tcl/lang/TclString.class \
	$(TCLJAVA)/tcl/lang/VarTrace.class 

NATIVE_CLASSES = \
	$(TCLJAVA)/tcl/lang/CObject.class \
	$(TCLJAVA)/tcl/lang/Interp.class \
	$(TCLJAVA)/tcl/lang/TclList.class \
	$(TCLJAVA)/tcl/lang/Notifier.class \
	$(TCLJAVA)/tcl/lang/TclEvent.class \
	$(TCLJAVA)/tcl/lang/Util.class

JAVA_CLASSES = \
	$(TCLJAVA)/tcl/lang/AfterCmd.class \
	$(TCLJAVA)/tcl/lang/AppendCmd.class \
	$(TCLJAVA)/tcl/lang/ArrayCmd.class \
        $(TCLJAVA)/tcl/lang/BackSlashResult.class \
        $(TCLJAVA)/tcl/lang/BgErrorMgr.class \
	$(TCLJAVA)/tcl/lang/BreakCmd.class \
	$(TCLJAVA)/tcl/lang/CallFrame.class \
	$(TCLJAVA)/tcl/lang/CaseCmd.class \
	$(TCLJAVA)/tcl/lang/CatchCmd.class \
	$(TCLJAVA)/tcl/lang/CdCmd.class \
        $(TCLJAVA)/tcl/lang/Channel.class \
        $(TCLJAVA)/tcl/lang/CharPointer.class \
	$(TCLJAVA)/tcl/lang/CloseCmd.class \
        $(TCLJAVA)/tcl/lang/CObject.class \
	$(TCLJAVA)/tcl/lang/ContinueCmd.class \
	$(TCLJAVA)/tcl/lang/ConcatCmd.class \
	$(TCLJAVA)/tcl/lang/ConsoleEvent.class \
        $(TCLJAVA)/tcl/lang/DebugInfo.class \
	$(TCLJAVA)/tcl/lang/Env.class \
	$(TCLJAVA)/tcl/lang/EofCmd.class \
	$(TCLJAVA)/tcl/lang/ErrorCmd.class \
	$(TCLJAVA)/tcl/lang/EvalCmd.class \
	$(TCLJAVA)/tcl/lang/ExecCmd.class \
	$(TCLJAVA)/tcl/lang/ExitCmd.class \
	$(TCLJAVA)/tcl/lang/ExprCmd.class \
        $(TCLJAVA)/tcl/lang/Expression.class \
        $(TCLJAVA)/tcl/lang/ExprValue.class \
	$(TCLJAVA)/tcl/lang/FblockedCmd.class \
	$(TCLJAVA)/tcl/lang/FconfigureCmd.class \
	$(TCLJAVA)/tcl/lang/FileChannel.class \
	$(TCLJAVA)/tcl/lang/FileCmd.class \
	$(TCLJAVA)/tcl/lang/FileUtil.class \
        $(TCLJAVA)/tcl/lang/FindElemResult.class \
	$(TCLJAVA)/tcl/lang/FlushCmd.class \
	$(TCLJAVA)/tcl/lang/ForCmd.class \
	$(TCLJAVA)/tcl/lang/ForeachCmd.class \
	$(TCLJAVA)/tcl/lang/FormatCmd.class \
	$(TCLJAVA)/tcl/lang/GetsCmd.class \
	$(TCLJAVA)/tcl/lang/GlobalCmd.class \
	$(TCLJAVA)/tcl/lang/GlobCmd.class \
	$(TCLJAVA)/tcl/lang/IdleHandler.class \
	$(TCLJAVA)/tcl/lang/IfCmd.class \
	$(TCLJAVA)/tcl/lang/IncrCmd.class \
	$(TCLJAVA)/tcl/lang/InfoCmd.class \
	$(TCLJAVA)/tcl/lang/Interp.class \
	$(TCLJAVA)/tcl/lang/JACL.class \
	$(TCLJAVA)/tcl/lang/JoinCmd.class \
	$(TCLJAVA)/tcl/lang/LappendCmd.class \
	$(TCLJAVA)/tcl/lang/LindexCmd.class \
	$(TCLJAVA)/tcl/lang/LinsertCmd.class \
	$(TCLJAVA)/tcl/lang/ListCmd.class \
	$(TCLJAVA)/tcl/lang/LlengthCmd.class \
	$(TCLJAVA)/tcl/lang/LrangeCmd.class \
	$(TCLJAVA)/tcl/lang/LreplaceCmd.class \
	$(TCLJAVA)/tcl/lang/LsearchCmd.class \
	$(TCLJAVA)/tcl/lang/LsortCmd.class \
	$(TCLJAVA)/tcl/lang/NamespaceCmd.class \
	$(TCLJAVA)/tcl/lang/Notifier.class \
	$(TCLJAVA)/tcl/lang/OpenCmd.class \
	$(TCLJAVA)/tcl/lang/PackageCmd.class \
        $(TCLJAVA)/tcl/lang/ParseAdaptor.class \
        $(TCLJAVA)/tcl/lang/Parser.class \
        $(TCLJAVA)/tcl/lang/ParseResult.class \
        $(TCLJAVA)/tcl/lang/ParseResultVector.class \
        $(TCLJAVA)/tcl/lang/Procedure.class \
	$(TCLJAVA)/tcl/lang/ProcCmd.class \
	$(TCLJAVA)/tcl/lang/PutsCmd.class \
	$(TCLJAVA)/tcl/lang/PwdCmd.class \
        $(TCLJAVA)/tcl/lang/QSort.class \
	$(TCLJAVA)/tcl/lang/ReadCmd.class \
	$(TCLJAVA)/tcl/lang/RegexMatcher.class \
	$(TCLJAVA)/tcl/lang/RegexpCmd.class \
	$(TCLJAVA)/tcl/lang/RegsubCmd.class \
	$(TCLJAVA)/tcl/lang/RenameCmd.class \
	$(TCLJAVA)/tcl/lang/ReturnCmd.class \
	$(TCLJAVA)/tcl/lang/ScanCmd.class \
        $(TCLJAVA)/tcl/lang/SearchId.class \
	$(TCLJAVA)/tcl/lang/SeekCmd.class \
	$(TCLJAVA)/tcl/lang/SetCmd.class \
	$(TCLJAVA)/tcl/lang/Shell.class \
	$(TCLJAVA)/tcl/lang/SocketCmd.class \
	$(TCLJAVA)/tcl/lang/SourceCmd.class \
	$(TCLJAVA)/tcl/lang/SplitCmd.class \
        $(TCLJAVA)/tcl/lang/StdChannel.class \
	$(TCLJAVA)/tcl/lang/StringCmd.class \
        $(TCLJAVA)/tcl/lang/StrtodResult.class \
        $(TCLJAVA)/tcl/lang/StrtoulResult.class \
	$(TCLJAVA)/tcl/lang/SubstCmd.class \
	$(TCLJAVA)/tcl/lang/SwitchCmd.class \
        $(TCLJAVA)/tcl/lang/TclEvent.class \
        $(TCLJAVA)/tcl/lang/TclIO.class \
        $(TCLJAVA)/tcl/lang/TclList.class \
        $(TCLJAVA)/tcl/lang/TclParse.class \
        $(TCLJAVA)/tcl/lang/TclToken.class \
        $(TCLJAVA)/tcl/lang/TclVarException.class \
	$(TCLJAVA)/tcl/lang/TellCmd.class \
	$(TCLJAVA)/tcl/lang/TimeCmd.class \
	$(TCLJAVA)/tcl/lang/TimerHandler.class \
	$(TCLJAVA)/tcl/lang/TraceCmd.class \
        $(TCLJAVA)/tcl/lang/TraceRecord.class \
	$(TCLJAVA)/tcl/lang/UnsetCmd.class \
	$(TCLJAVA)/tcl/lang/UpdateCmd.class \
	$(TCLJAVA)/tcl/lang/UplevelCmd.class \
	$(TCLJAVA)/tcl/lang/UpvarCmd.class \
        $(TCLJAVA)/tcl/lang/Util.class \
        $(TCLJAVA)/tcl/lang/Var.class \
	$(TCLJAVA)/tcl/lang/VwaitCmd.class \
	$(TCLJAVA)/tcl/lang/WhileCmd.class \
	$(TCLJAVA)/tcl/lang/Word.class

REGEXP_CLASSES = \
	$(TCLJAVA)/tcl/regex/OroRegexMatcher.class \
	$(TCLJAVA)/tcl/regex/OroRegexpCmd.class \
	$(TCLJAVA)/tcl/regex/OroRegsubCmd.class

INVOKER_CLASS = \
	$(TCLJAVA)/tcl/lang/reflect/PkgInvoker.class

BEAN_CLASSES = \
	$(TCLJAVA)/tcl/bean/TclInterp.class \
	$(TCLJAVA)/tcl/bean/StudioTclPort.class \
	$(TCLJAVA)/tcl/bean/TclInterpBeanInfo.class \
	$(TCLJAVA)/tcl/bean/StudioTclInterp.class \
	$(TCLJAVA)/tcl/bean/StudioTclInterpCustomizer.class \
	$(TCLJAVA)/tcl/bean/StudioTclInterpVJComponentInfo.class

JAVA_DEMO_CLASSES = \
	$(DEMO_JAVA_DIR)/pyramidpkg/AppletConsole.class \
	$(DEMO_JAVA_DIR)/pyramidpkg/ConsoleKeyListener.class \
	$(DEMO_JAVA_DIR)/pyramidpkg/ConsoleMouseListener.class \
	$(DEMO_JAVA_DIR)/pyramidpkg/Pyramid.class 

COMMON_DEMO_CLASSES = \
	$(DEMO_JAVA_DIR)/gluepkg/FileDialogApp.class \
	$(DEMO_JAVA_DIR)/gluepkg/FileDialogCmd.class \
	$(DEMO_JAVA_DIR)/gluepkg/GlueExtension.class \
	$(DEMO_JAVA_DIR)/gluepkg/JarCmd.class \
	$(DEMO_JAVA_DIR)/gluepkg/ListboxApp.class \
	$(DEMO_JAVA_DIR)/gluepkg/ListboxCmd.class \
	$(DEMO_JAVA_DIR)/simplepkg/SayhelloCmd.class \
	$(DEMO_JAVA_DIR)/simplepkg/SimpleExtension.class \
	$(DEMO_JAVA_DIR)/watchpkg/StopWatchExtension.class \
	$(DEMO_JAVA_DIR)/watchpkg/StopWatchThread.class \
	$(DEMO_JAVA_DIR)/watchpkg/SwCmd.class

TEST_CLASSES = \
	$(TEST_CLASS_DIR)/ConvertTest.class \
	$(TEST_CLASS_DIR)/JavaTest.class \
	$(TEST_CLASS_DIR)/JavaTestSub.class \
	$(TEST_CLASS_DIR)/TestObjectCmd.class \
	$(TEST_CLASS_DIR)/invoke/ArrayTestClass.class \
	$(TEST_CLASS_DIR)/invoke/IntA.class \
	$(TEST_CLASS_DIR)/invoke/IntC.class \
	$(TEST_CLASS_DIR)/invoke/PublicTester.class \
	$(TEST_CLASS_DIR)/javainfo/InfoTestClass.class \
	$(TEST_CLASS_DIR)/javainfo/SuperTestClass.class \
	$(TEST_CLASS_DIR)/javaload/Test1Cmd.class \
	$(TEST_CLASS_DIR)/javaload/Test1Extension.class \
	$(TCLJAVA)/pkg1/MyClass.class \
	$(TCLJAVA)/pkg1/TclPkgInvoker.class \
	$(TCLJAVA)/pkg2/MyClass.class \
	$(TCLJAVA)/tcl/lang/AdaptorGenTest.class \
	$(TCLJAVA)/tcl/lang/JtestCmd.class \
	$(TCLJAVA)/tcl/lang/NoEventBean.class \
	$(TCLJAVA)/tcl/lang/NonPublic.class \
	$(TCLJAVA)/tcl/lang/TclPkgInvoker.class \
	$(TCLJAVA)/tcl/lang/TestcompcodeCmd.class \
	$(TCLJAVA)/tcl/lang/Tester1Event.class \
	$(TCLJAVA)/tcl/lang/Tester1Listener.class \
	$(TCLJAVA)/tcl/lang/Tester2Event.class\
	$(TCLJAVA)/tcl/lang/Tester2Listener.class \
	$(TCLJAVA)/tcl/lang/TesterBean.class

JAVALOAD_TEST_CLASSES = \
	$(TEST_CLASS_DIR)/javaload/Test2Cmd.class \
	$(TEST_CLASS_DIR)/javaload/Test2Extension.class \
	$(TEST_CLASS_DIR)/javaload/Test3Extension.class \
	$(TEST_CLASS_DIR)/javaload/Test4Extension.class \
	$(TEST_CLASS_DIR)/javaload/Test5Extension.class \
	$(TEST_CLASS_DIR)/javaload/Test6Extension.class \
	$(TEST_CLASS_DIR)/javaload/Test7Extension.class \
	$(TEST_CLASS_DIR)/javaload/Test8Extension.class \
	$(TEST_CLASS_DIR)/javaload/Test9Extension.class

TCLBLEND_TEST_CLASSES = \
	$(TEST_CLASS_DIR)/VarTraceTest.class \
	$(TCLJAVA)/tcl/lang/NativeTestExtension.class

JACL_TEST_CLASSES = \
	$(TEST_CLASS_DIR)/VarTraceTest.class \
	$(TCLJAVA)/tcl/lang/JavaTestExtension.class \
	$(TCLJAVA)/tcl/lang/TestgetplatformCmd.class \
	$(TCLJAVA)/tcl/lang/TestParserCmd.class \
	$(TCLJAVA)/tcl/lang/TestEvalObjvCmd.class \
	$(TCLJAVA)/tcl/lang/TestEval2Cmd.class \
	$(TCLJAVA)/tcl/lang/TestParsevarCmd.class \
	$(TCLJAVA)/tcl/lang/TestParsevarnameCmd.class \
	$(TCLJAVA)/tcl/lang/TestsetplatformCmd.class

# Default is to build whatever is specified by the
# TCLJAVA variable (jacl or tclblend).
all: $(TCLJAVA)

# Install functionality was added by Christopher Hylands.  We 
# are not going to support all of his changes this release. 
# See the ../changes file for more info on what was changed.
#
#install: install_$(TCLJAVA)

#----------------------------------------------------------------
# Build tclblend
#----------------------------------------------------------------

tclblend.jar: tclblend
	(cd tclblend; jar c0f ../tclblend.jar tcl)

tclblend: tclblend.depend

tclblend.depend:
	@mkdir -p tclblend
	@$(MAKE) tclblend.build SRC_CLASSPATH=$(TCLBLEND_CLASSPATH) TCLJAVA=tclblend \
		SRC_JAVA_DIR=$(NATIVE_JAVA_DIR)

tclblend.build: tclblend.classes libtclblend$(SHLIB_SUFFIX) $(JTHREADS)

tclblend.classes: setup $(TCLBLEND_CLASSES) build

# javaNative.h is created by javah in the object directory.
$(OBJS): $(GENERIC_DIR)/javaNative.h

# build the shared library
libtclblend$(SHLIB_SUFFIX): $(OBJS)
	rm -f libtclblend$(SHLIB_SUFFIX)
	$(SHLIB_LD) $(OBJS) -o libtclblend$(SHLIB_SUFFIX) @SHLIB_LD_LIBS@

javaCmd.o: $(GENERIC_DIR)/javaCmd.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/javaCmd.c

javaInterp.o: $(GENERIC_DIR)/javaInterp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/javaInterp.c

javaObj.o: $(GENERIC_DIR)/javaObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/javaObj.c

javaList.o: $(GENERIC_DIR)/javaList.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/javaList.c

javaUtil.o: $(GENERIC_DIR)/javaUtil.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/javaUtil.c

tclResult.o: $(GENERIC_DIR)/tclResult.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclResult.c

$(GENERIC_DIR)/javaNative.h: tclblend.classes
	CLASSPATH="$(CLASSPATH):`pwd`/tclblend" \
	$(JAVAH) -jni -o $(GENERIC_DIR)/javaNative.h \
		tcl.lang.CObject \
		tcl.lang.Interp \
		tcl.lang.TclList \
		tcl.lang.Util 

green.build:
	@$(MAKE) green SRC_CLASSPATH=$(TCLBLEND_CLASSPATH) TCLJAVA=tclblend \
		SRC_JAVA_DIR=$(NATIVE_JAVA_DIR)
# Build the shared lib. that is necessary for pre-initialization
# of the Tcl interp.
green: green.o libtclblend$(SHLIB_SUFFIX)
	$(CC) -o green -g green.o libtclblend$(SHLIB_SUFFIX) $(LIBS)

green.o: $(UNIX_DIR)/green.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/green.c

# Nothing is done for this rule, but it still needs to be here to 
# satisfy the target for the tclblend rule reference to $(JTHREADS)
native:

BLEND_LIB_FILE = libtclblend$(SHLIB_SUFFIX)

# Install tclBlend
#install_tclblend: tclblend.jar #$(BLEND_LIB_FILE)
#	@for i in $(LIB_INSTALL_DIR) $(BLEND_LIB_INSTALL_DIR) \
#		$(BLEND_SCRIPT_INSTALL_DIR) \
#		$(BLEND_BIN_DIR) \
#		; \
#	    do \
#	    if [ ! -d $$i ] ; then \
#		echo "Making directory $$i"; \
#		mkdir -p $$i; \
#		chmod 755 $$i; \
#		else true; \
#		fi; \
#	    done;
#	@echo "Installing $(BLEND_LIB_FILE)"
#	@$(INSTALL_DATA) $(BLEND_LIB_FILE) $(LIB_INSTALL_DIR)
#	@# Make the library readonly and executable for HPUX.
#	@chmod 555 $(LIB_INSTALL_DIR)/$(BLEND_LIB_FILE)
#	@echo "Installing tclblend.jar"
#	@$(INSTALL_DATA) tclblend.jar $(LIB_INSTALL_DIR)/tclblend
#	@echo "Installing init.tcl"
#	@$(INSTALL_DATA) init.tcl $(LIB_INSTALL_DIR)/tclblend
#	@echo "Installing jwish.tcl"
#	@$(INSTALL_DATA) $(UNIX_DIR)/jwish.tcl $(LIB_INSTALL_DIR)/tclblend
#	@echo "Installing jwish"
#	@$(INSTALL_PROGRAM) jwish $(BLEND_BIN_DIR)
#	chmod a+rx $(BLEND_BIN_DIR)/jwish
#	@echo "Installing pkgIndex.tcl"
#	# Note that pkgIndex.tcl contains platform dependent commands like
#	# the name of the shared library to load.
#	echo "package ifneeded java 1.0 [list tclPkgSetup \$$dir java 1.0 {{../libtclblend$(SHLIB_SUFFIX) load {java::new java::call java::field java::info java::instanceof java::load java::null}}}]" > $(BLEND_LIB_INSTALL_DIR)/pkgIndex.tcl

#----------------------------------------------------------------
# Build Jacl
#----------------------------------------------------------------

jacl.jar: jacl.jar.depend
	(cd jacl; jar 0cf ../jacl.jar tcl com)

jacl.jar.depend: jacl

jacl: jacl.depend regexp.depend

jacl.depend:
	@mkdir -p jacl
	@$(MAKE) jacl.build SRC_CLASSPATH=$(JACL_CLASSPATH) TCLJAVA=jacl \
		SRC_JAVA_DIR=$(JAVA_JAVA_DIR)
	@mkdir -p jacl/tcl/lang/library
	cp -fr $(JAVA_JAVA_DIR)/tcl/lang/library/*.tcl jacl/tcl/lang/library
	cp -fr $(JAVA_JAVA_DIR)/tcl/lang/library/tclIndex jacl/tcl/lang/library

jacl.build: setup $(JACL_CLASSES) build

regexp.depend:
	@if [ -d $(JAVA_JAVA_DIR)/tcl/regex ]; then \
		$(MAKE) regexp.build SRC_CLASSPATH=$(JACL_CLASSPATH) TCLJAVA=jacl \
			SRC_JAVA_DIR=$(JAVA_JAVA_DIR); \
	fi

regexp.build: setup $(REGEXP_CLASSES) build
	@mkdir -p $(TCLJAVA)/com/oroinc/text/regex 
	cp -fr $(JAVA_JAVA_DIR)/com/oroinc/text/regex/*.class \
		$(TCLJAVA)/com/oroinc/text/regex

#----------------------------------------------------------------
# Build TclBean
#----------------------------------------------------------------

bean: jacl bean.depend
	(cd jacl; jar 0cfm ../jacl.jar ../../src/java/tcl/bean/bean.manifest tcl com)
 
bean.depend:
	@$(MAKE) bean.build SRC_CLASSPATH=$(BEAN_CLASSPATH) TCLJAVA=jacl \
		SRC_JAVA_DIR=$(JAVA_JAVA_DIR)
	cp -fr $(JAVA_JAVA_DIR)/tcl/bean/*.gif \
		$(JAVA_JAVA_DIR)/tcl/bean/*.html \
		jacl/tcl/bean
	@mkdir -p jacl/tcl/bean/scripts
	cp -fr $(JAVA_JAVA_DIR)/tcl/bean/scripts/*.tcl \
		jacl/tcl/bean/scripts

bean.build: setup $(BEAN_CLASSES) build

#----------------------------------------------------------------
# Build tests
#----------------------------------------------------------------

test: $(TCLJAVA)Test

jaclTest: jacl
	@$(MAKE) jacltest.build SRC_CLASSPATH="$(TEST_CLASSPATH):jacl" TCLJAVA=jacl

tclblendTest: $(TCLTEST) tclblend
	@$(MAKE) tclblendtest.build SRC_CLASSPATH="$(TEST_CLASSPATH):tclblend" TCLJAVA=tclblend 

jacltest.build: setup mktestdir $(TEST_CLASSES) $(JACL_TEST_CLASSES) \
		build javaload.build jacltest.exec

tclblendtest.build: setup mktestdir $(TEST_CLASSES) $(TCLBLEND_TEST_CLASSES) \
		build javaload.build tclblendtest.exec

javaload.build: setup $(JAVALOAD_TEST_CLASSES) 
	if [ -f depend.out ]; then \
		cat depend.out | CLASSPATH="$(SRC_CLASSPATH):jacl/tests/javaload" \
		xargs $(JAVAC) $(JAVAC_FLAGS) -d $(TCLJAVA)/tests/javaload; \
		rm -f depend.out; \
	fi
	( cd $(TCLJAVA)/tests/javaload; \
	jar c0f test9.jar Test9Extension.class; \
	rm Test9Extension.class; )

jacltest.exec:
	( echo lappend auto_path [pwd]\; cd $(TOP_DIR)/tests\; \
	  source all\; exit; ) | \
	CLASSPATH=$(JAVA_LIB_DIR)/classes.zip:$(UNIX_DIR)/$(TCLJAVA) \
	java tcl.lang.Shell

tclblendtest.exec:
	( echo lappend auto_path [pwd]\; cd $(TOP_DIR)/tests\; \
	  source all\; exit; ) | \
	LD_LIBRARY_PATH="$(TCL_BIN_DIR):$(UNIX_DIR):$(LD_LIBRARY_PATH):$(JAVA_DIR)/lib/sparc/$(JTHREADS)_threads" \
	CLASSPATH=$(JAVA_LIB_DIR)/classes.zip:$(UNIX_DIR)/$(TCLJAVA) \
	$(TCL_BIN_DIR)/tcltest

$(TCLTEST):
	(cd $(TCL_BIN_DIR); $(MAKE) tcltest)

mktestdir:
	@if test ! -d $(TEST_CLASS_DIR); then \
		mkdir -p $(TEST_CLASS_DIR); fi;
	@if test ! -d $(TEST_CLASS_DIR)/javaload; then \
		mkdir -p $(TEST_CLASS_DIR)/javaload; fi;


#----------------------------------------------------------------
# Demos
#----------------------------------------------------------------

demos: $(TCLJAVA)Demo

jaclDemo: jaclDemo.build

jaclDemo.build:
	@$(MAKE) demo.build TCLJAVA=jacl SRC_CLASSPATH="$(DEMO_CLASSPATH):jacl" DEMO_CLASSES="$(JAVA_DEMO_CLASSES) $(COMMON_DEMO_CLASSES)"

tclblendDemo: tclblendDemo.build

tclblendDemo.build: 
	@$(MAKE) demo.build TCLJAVA=tclblend SRC_CLASSPATH="$(DEMO_CLASSPATH):tclblend" DEMO_CLASSES="$(COMMON_DEMO_CLASSES)"

demo.build: $(TCLJAVA) setup $(DEMO_CLASSES) build.demo

build.demo:
	if [ -f depend.out ]; then \
		cat depend.out | CLASSPATH=$(SRC_CLASSPATH) xargs $(JAVAC) $(JAVAC_FLAGS); \
		rm -f depend.out; \
	fi


#----------------------------------------------------------------
# Auto-Gen the Web Page
#----------------------------------------------------------------

webpage: $(DOC_DIR)/html/TclCmd/java.htm \
$(DOC_DIR)/html/TclCmd/javaload.htm \
$(DOC_DIR)/html/TclCmd/javabind.htm

$(DOC_DIR)/html/TclCmd/java.htm: $(DOC_DIR)/java.n
	@$(MAKE) webpage.build

$(DOC_DIR)/html/TclCmd/javaload.htm: $(DOC_DIR)/javaload.n
	@$(MAKE) webpage.build

$(DOC_DIR)/html/TclCmd/javabind.htm: $(DOC_DIR)/javabind.n
	@$(MAKE) webpage.build

webpage.build:
	@( rm -rf $(DOC_DIR)/html; \
	cd $(TOOLS_DIR); \
	tclsh tcltk-man-html.tcl --srcdir=$(TOP_DIR) --htmldir=$(DOC_DIR)/html; \
	cp $(DOC_DIR)/license.htm $(DOC_DIR)/html/copyright.htm)


#----------------------------------------------------------------
# Other functions
#----------------------------------------------------------------

setup: 
	@rm -f depend.out

build:
	@if [ -f depend.out ]; then \
		echo "cat depend.out | CLASSPATH=$(SRC_CLASSPATH) xargs $(JAVAC) $(JAVAC_FLAGS) -d $(TCLJAVA)"; \
		cat depend.out | CLASSPATH=$(SRC_CLASSPATH) xargs $(JAVAC) $(JAVAC_FLAGS) -d $(TCLJAVA); \
		rm -f depend.out; \
	fi

depend:  
	makedepend -- $(DEPEND_SWITCHES) -- $(SRCS)

Makefile: $(SRC_DIR)/Makefile.in
	./config.status

clean:  jaclClean tclblendClean democlean

tclblendClean:
	rm -f *.o lib*$(SHLIB_SUFFIX) tclblend.jar green
	rm -f $(GENERIC_DIR)/javaNative.h
	rm -rf tclblend

jaclClean:
	rm -rf jacl
	rm -f jacl.jar

democlean: 
	rm -f ../demos/*/*.class

distclean: clean
	rm -f config.cache config.log config.status lib.exp confdefs.h depend.out
	rm -f Makefile


#----------------------------------------------------------------
# Class Build Rules for Common Classes
#----------------------------------------------------------------

$(TCLJAVA)/tcl/lang/reflect/PkgInvoker.class: $(COMMON_JAVA_DIR)/tcl/lang/reflect/PkgInvoker.java
	$(JAVAC) $(JAVAC_FLAGS) -d $(TCLJAVA) $(COMMON_JAVA_DIR)/tcl/lang/reflect/PkgInvoker.java

$(TCLJAVA)/tcl/lang/AdaptorClassLoader.class: $(COMMON_JAVA_DIR)/tcl/lang/AdaptorClassLoader.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/AdaptorClassLoader.java >> depend.out

$(TCLJAVA)/tcl/lang/AdaptorGen.class: $(COMMON_JAVA_DIR)/tcl/lang/AdaptorGen.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/AdaptorGen.java >> depend.out

$(TCLJAVA)/tcl/lang/AssocData.class: $(COMMON_JAVA_DIR)/tcl/lang/AssocData.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/AssocData.java >> depend.out

$(TCLJAVA)/tcl/lang/BeanEvent.class: $(COMMON_JAVA_DIR)/tcl/lang/BeanEvent.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/BeanEvent.java >> depend.out

$(TCLJAVA)/tcl/lang/BeanEventMgr.class: $(COMMON_JAVA_DIR)/tcl/lang/BeanEventMgr.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/BeanEventMgr.java >> depend.out

$(TCLJAVA)/tcl/lang/BeanEventParamSet.class: $(COMMON_JAVA_DIR)/tcl/lang/BeanEventParamSet.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/BeanEventParamSet.java >> depend.out

$(TCLJAVA)/tcl/lang/BlendExtension.class: $(COMMON_JAVA_DIR)/tcl/lang/BlendExtension.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/BlendExtension.java >> depend.out

$(TCLJAVA)/tcl/lang/ClassRep.class: $(COMMON_JAVA_DIR)/tcl/lang/ClassRep.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/ClassRep.java >> depend.out

$(TCLJAVA)/tcl/lang/Command.class: $(COMMON_JAVA_DIR)/tcl/lang/Command.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/Command.java >> depend.out

$(TCLJAVA)/tcl/lang/CommandWithDispose.class: $(COMMON_JAVA_DIR)/tcl/lang/CommandWithDispose.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/CommandWithDispose.java >> depend.out

$(TCLJAVA)/tcl/lang/Extension.class: $(COMMON_JAVA_DIR)/tcl/lang/Extension.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/Extension.java >> depend.out

$(TCLJAVA)/tcl/lang/EventAdaptor.class: $(COMMON_JAVA_DIR)/tcl/lang/EventAdaptor.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/EventAdaptor.java >> depend.out

$(TCLJAVA)/tcl/lang/EventDeleter.class: $(COMMON_JAVA_DIR)/tcl/lang/EventDeleter.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/EventDeleter.java >> depend.out

$(TCLJAVA)/tcl/lang/FieldSig.class: $(COMMON_JAVA_DIR)/tcl/lang/FieldSig.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/FieldSig.java >> depend.out

$(TCLJAVA)/tcl/lang/FuncSig.class: $(COMMON_JAVA_DIR)/tcl/lang/FuncSig.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/FuncSig.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaInstanceofCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaInstanceofCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaInstanceofCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/InternalRep.class: $(COMMON_JAVA_DIR)/tcl/lang/InternalRep.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/InternalRep.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaInvoke.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaInvoke.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaInvoke.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaBindCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaBindCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaBindCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaCallCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaCallCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaCallCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaDefineClassCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaDefineClassCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaDefineClassCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaEventCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaEventCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaEventCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaFieldCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaFieldCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaFieldCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaGetInterpCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaGetInterpCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaGetInterpCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaInfoCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaInfoCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaInfoCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaNewCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaNewCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaNewCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaPropCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaPropCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaPropCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaThrowCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaThrowCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaThrowCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaLoadCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaLoadCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaLoadCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaNullCmd.class: $(COMMON_JAVA_DIR)/tcl/lang/JavaNullCmd.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/JavaNullCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/PropertySig.class: $(COMMON_JAVA_DIR)/tcl/lang/PropertySig.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/PropertySig.java >> depend.out

$(TCLJAVA)/tcl/lang/ReflectException.class: $(COMMON_JAVA_DIR)/tcl/lang/ReflectException.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/ReflectException.java >> depend.out

$(TCLJAVA)/tcl/lang/ReflectObject.class: $(COMMON_JAVA_DIR)/tcl/lang/ReflectObject.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/ReflectObject.java >> depend.out

$(TCLJAVA)/tcl/lang/ArrayObject.class: $(COMMON_JAVA_DIR)/tcl/lang/ArrayObject.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/ArrayObject.java >> depend.out

$(TCLJAVA)/tcl/lang/TCL.class: $(COMMON_JAVA_DIR)/tcl/lang/TCL.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TCL.java >> depend.out

$(TCLJAVA)/tcl/lang/TclBoolean.class: $(COMMON_JAVA_DIR)/tcl/lang/TclBoolean.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclBoolean.java >> depend.out

$(TCLJAVA)/tcl/lang/TclClassLoader.class: $(COMMON_JAVA_DIR)/tcl/lang/TclClassLoader.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclClassLoader.java >> depend.out

$(TCLJAVA)/tcl/lang/TclDouble.class: $(COMMON_JAVA_DIR)/tcl/lang/TclDouble.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclDouble.java >> depend.out

$(TCLJAVA)/tcl/lang/TclException.class: $(COMMON_JAVA_DIR)/tcl/lang/TclException.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclException.java >> depend.out

$(TCLJAVA)/tcl/lang/TclIndex.class: $(COMMON_JAVA_DIR)/tcl/lang/TclIndex.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclIndex.java >> depend.out

$(TCLJAVA)/tcl/lang/TclInteger.class: $(COMMON_JAVA_DIR)/tcl/lang/TclInteger.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclInteger.java >> depend.out

$(TCLJAVA)/tcl/lang/TclNumArgsException.class: $(COMMON_JAVA_DIR)/tcl/lang/TclNumArgsException.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclNumArgsException.java >> depend.out

$(TCLJAVA)/tcl/lang/TclPosixException.class: $(COMMON_JAVA_DIR)/tcl/lang/TclPosixException.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclPosixException.java >> depend.out

$(TCLJAVA)/tcl/lang/TclObject.class: $(COMMON_JAVA_DIR)/tcl/lang/TclObject.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclObject.java >> depend.out

$(TCLJAVA)/tcl/lang/TclRuntimeError.class: $(COMMON_JAVA_DIR)/tcl/lang/TclRuntimeError.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclRuntimeError.java >> depend.out

$(TCLJAVA)/tcl/lang/TclString.class: $(COMMON_JAVA_DIR)/tcl/lang/TclString.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/TclString.java >> depend.out

$(TCLJAVA)/tcl/lang/VarTrace.class: $(COMMON_JAVA_DIR)/tcl/lang/VarTrace.java
	echo $(COMMON_JAVA_DIR)/tcl/lang/VarTrace.java >> depend.out

#----------------------------------------------------------------
# Class Build Rules for Native or Java Classes
#----------------------------------------------------------------

$(TCLJAVA)/tcl/lang/AfterCmd.class: $(SRC_JAVA_DIR)/tcl/lang/AfterCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/AfterCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/AppendCmd.class: $(SRC_JAVA_DIR)/tcl/lang/AppendCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/AppendCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ArrayCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ArrayCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ArrayCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/BackSlashResult.class: $(SRC_JAVA_DIR)/tcl/lang/BackSlashResult.java
	echo $(SRC_JAVA_DIR)/tcl/lang/BackSlashResult.java >> depend.out

$(TCLJAVA)/tcl/lang/BgErrorMgr.class: $(SRC_JAVA_DIR)/tcl/lang/BgErrorMgr.java
	echo $(SRC_JAVA_DIR)/tcl/lang/BgErrorMgr.java >> depend.out

$(TCLJAVA)/tcl/lang/BreakCmd.class: $(SRC_JAVA_DIR)/tcl/lang/BreakCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/BreakCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/CallFrame.class: $(SRC_JAVA_DIR)/tcl/lang/CallFrame.java
	echo $(SRC_JAVA_DIR)/tcl/lang/CallFrame.java >> depend.out

$(TCLJAVA)/tcl/lang/CaseCmd.class: $(SRC_JAVA_DIR)/tcl/lang/CaseCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/CaseCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/CatchCmd.class: $(SRC_JAVA_DIR)/tcl/lang/CatchCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/CatchCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/CdCmd.class: $(SRC_JAVA_DIR)/tcl/lang/CdCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/CdCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/Channel.class: $(SRC_JAVA_DIR)/tcl/lang/Channel.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Channel.java >> depend.out

$(TCLJAVA)/tcl/lang/CharPointer.class: $(SRC_JAVA_DIR)/tcl/lang/CharPointer.java
	echo $(SRC_JAVA_DIR)/tcl/lang/CharPointer.java >> depend.out

$(TCLJAVA)/tcl/lang/CloseCmd.class: $(SRC_JAVA_DIR)/tcl/lang/CloseCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/CloseCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/CObject.class: $(SRC_JAVA_DIR)/tcl/lang/CObject.java
	echo $(SRC_JAVA_DIR)/tcl/lang/CObject.java >> depend.out

$(TCLJAVA)/tcl/lang/ConcatCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ConcatCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ConcatCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ConsoleEvent.class: $(SRC_JAVA_DIR)/tcl/lang/ConsoleEvent.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ConsoleEvent.java >> depend.out

$(TCLJAVA)/tcl/lang/ContinueCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ContinueCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ContinueCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/DebugInfo.class: $(SRC_JAVA_DIR)/tcl/lang/DebugInfo.java
	echo $(SRC_JAVA_DIR)/tcl/lang/DebugInfo.java >> depend.out

$(TCLJAVA)/tcl/lang/Env.class: $(SRC_JAVA_DIR)/tcl/lang/Env.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Env.java >> depend.out

$(TCLJAVA)/tcl/lang/EofCmd.class: $(SRC_JAVA_DIR)/tcl/lang/EofCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/EofCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ErrorCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ErrorCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ErrorCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/EvalCmd.class: $(SRC_JAVA_DIR)/tcl/lang/EvalCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/EvalCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ExecCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ExecCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ExecCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ExitCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ExitCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ExitCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ExprCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ExprCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ExprCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/Expression.class: $(SRC_JAVA_DIR)/tcl/lang/Expression.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Expression.java >> depend.out

$(TCLJAVA)/tcl/lang/ExprValue.class: $(SRC_JAVA_DIR)/tcl/lang/ExprValue.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ExprValue.java >> depend.out

$(TCLJAVA)/tcl/lang/FblockedCmd.class: $(SRC_JAVA_DIR)/tcl/lang/FblockedCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/FblockedCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/FconfigureCmd.class: $(SRC_JAVA_DIR)/tcl/lang/FconfigureCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/FconfigureCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/FileCmd.class: $(SRC_JAVA_DIR)/tcl/lang/FileCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/FileCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/FileUtil.class: $(SRC_JAVA_DIR)/tcl/lang/FileUtil.java
	echo $(SRC_JAVA_DIR)/tcl/lang/FileUtil.java >> depend.out

$(TCLJAVA)/tcl/lang/FlushCmd.class: $(SRC_JAVA_DIR)/tcl/lang/FlushCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/FlushCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/FileChannel.class: $(SRC_JAVA_DIR)/tcl/lang/FileChannel.java
	echo $(SRC_JAVA_DIR)/tcl/lang/FileChannel.java >> depend.out

$(TCLJAVA)/tcl/lang/FindElemResult.class: $(SRC_JAVA_DIR)/tcl/lang/FindElemResult.java
	echo $(SRC_JAVA_DIR)/tcl/lang/FindElemResult.java >> depend.out

$(TCLJAVA)/tcl/lang/ForCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ForCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ForCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ForeachCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ForeachCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ForeachCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/FormatCmd.class: $(SRC_JAVA_DIR)/tcl/lang/FormatCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/FormatCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/GetsCmd.class: $(SRC_JAVA_DIR)/tcl/lang/GetsCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/GetsCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/GlobalCmd.class: $(SRC_JAVA_DIR)/tcl/lang/GlobalCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/GlobalCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/GlobCmd.class: $(SRC_JAVA_DIR)/tcl/lang/GlobCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/GlobCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/IdleHandler.class: $(SRC_JAVA_DIR)/tcl/lang/IdleHandler.java
	echo $(SRC_JAVA_DIR)/tcl/lang/IdleHandler.java >> depend.out

$(TCLJAVA)/tcl/lang/IfCmd.class: $(SRC_JAVA_DIR)/tcl/lang/IfCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/IfCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/IncrCmd.class: $(SRC_JAVA_DIR)/tcl/lang/IncrCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/IncrCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/InfoCmd.class: $(SRC_JAVA_DIR)/tcl/lang/InfoCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/InfoCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/Interp.class: $(SRC_JAVA_DIR)/tcl/lang/Interp.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Interp.java >> depend.out

$(TCLJAVA)/tcl/lang/ListCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ListCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ListCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JACL.class: $(SRC_JAVA_DIR)/tcl/lang/JACL.java
	echo $(SRC_JAVA_DIR)/tcl/lang/JACL.java >> depend.out

$(TCLJAVA)/tcl/lang/JoinCmd.class: $(SRC_JAVA_DIR)/tcl/lang/JoinCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/JoinCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/LappendCmd.class: $(SRC_JAVA_DIR)/tcl/lang/LappendCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/LappendCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/LindexCmd.class: $(SRC_JAVA_DIR)/tcl/lang/LindexCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/LindexCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/LinsertCmd.class: $(SRC_JAVA_DIR)/tcl/lang/LinsertCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/LinsertCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/LlengthCmd.class: $(SRC_JAVA_DIR)/tcl/lang/LlengthCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/LlengthCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/LrangeCmd.class: $(SRC_JAVA_DIR)/tcl/lang/LrangeCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/LrangeCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/LreplaceCmd.class: $(SRC_JAVA_DIR)/tcl/lang/LreplaceCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/LreplaceCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/LsearchCmd.class: $(SRC_JAVA_DIR)/tcl/lang/LsearchCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/LsearchCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/LsortCmd.class: $(SRC_JAVA_DIR)/tcl/lang/LsortCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/LsortCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/NamespaceCmd.class: $(SRC_JAVA_DIR)/tcl/lang/NamespaceCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/NamespaceCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/Notifier.class: $(SRC_JAVA_DIR)/tcl/lang/Notifier.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Notifier.java >> depend.out

$(TCLJAVA)/tcl/lang/OpenCmd.class: $(SRC_JAVA_DIR)/tcl/lang/OpenCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/OpenCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/PackageCmd.class: $(SRC_JAVA_DIR)/tcl/lang/PackageCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/PackageCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ParseAdaptor.class: $(SRC_JAVA_DIR)/tcl/lang/ParseAdaptor.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ParseAdaptor.java >> depend.out

$(TCLJAVA)/tcl/lang/Parser.class: $(SRC_JAVA_DIR)/tcl/lang/Parser.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Parser.java >> depend.out

$(TCLJAVA)/tcl/lang/ParseResult.class: $(SRC_JAVA_DIR)/tcl/lang/ParseResult.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ParseResult.java >> depend.out

$(TCLJAVA)/tcl/lang/ParseResultVector.class: $(SRC_JAVA_DIR)/tcl/lang/ParseResultVector.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ParseResultVector.java >> depend.out

$(TCLJAVA)/tcl/lang/ProcCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ProcCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ProcCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/Procedure.class: $(SRC_JAVA_DIR)/tcl/lang/Procedure.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Procedure.java >> depend.out

$(TCLJAVA)/tcl/lang/PutsCmd.class: $(SRC_JAVA_DIR)/tcl/lang/PutsCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/PutsCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/PwdCmd.class: $(SRC_JAVA_DIR)/tcl/lang/PwdCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/PwdCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/QSort.class: $(SRC_JAVA_DIR)/tcl/lang/QSort.java
	echo $(SRC_JAVA_DIR)/tcl/lang/QSort.java >> depend.out

$(TCLJAVA)/tcl/lang/ReadCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ReadCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ReadCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/RegexMatcher.class: $(SRC_JAVA_DIR)/tcl/lang/RegexMatcher.java
	echo $(SRC_JAVA_DIR)/tcl/lang/RegexMatcher.java >> depend.out

$(TCLJAVA)/tcl/lang/RegexpCmd.class: $(SRC_JAVA_DIR)/tcl/lang/RegexpCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/RegexpCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/RegsubCmd.class: $(SRC_JAVA_DIR)/tcl/lang/RegsubCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/RegsubCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/RenameCmd.class: $(SRC_JAVA_DIR)/tcl/lang/RenameCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/RenameCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ReturnCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ReturnCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ReturnCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/ScanCmd.class: $(SRC_JAVA_DIR)/tcl/lang/ScanCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/ScanCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/SearchId.class: $(SRC_JAVA_DIR)/tcl/lang/SearchId.java
	echo $(SRC_JAVA_DIR)/tcl/lang/SearchId.java >> depend.out

$(TCLJAVA)/tcl/lang/SeekCmd.class: $(SRC_JAVA_DIR)/tcl/lang/SeekCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/SeekCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/SetCmd.class: $(SRC_JAVA_DIR)/tcl/lang/SetCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/SetCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/Shell.class: $(SRC_JAVA_DIR)/tcl/lang/Shell.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Shell.java >> depend.out

$(TCLJAVA)/tcl/lang/SocketCmd.class: $(SRC_JAVA_DIR)/tcl/lang/SocketCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/SocketCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/SourceCmd.class: $(SRC_JAVA_DIR)/tcl/lang/SourceCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/SourceCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/SplitCmd.class: $(SRC_JAVA_DIR)/tcl/lang/SplitCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/SplitCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/StdChannel.class: $(SRC_JAVA_DIR)/tcl/lang/StdChannel.java
	echo $(SRC_JAVA_DIR)/tcl/lang/StdChannel.java >> depend.out

$(TCLJAVA)/tcl/lang/StringCmd.class: $(SRC_JAVA_DIR)/tcl/lang/StringCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/StringCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/StrtodResult.class: $(SRC_JAVA_DIR)/tcl/lang/StrtodResult.java
	echo $(SRC_JAVA_DIR)/tcl/lang/StrtodResult.java >> depend.out

$(TCLJAVA)/tcl/lang/StrtoulResult.class: $(SRC_JAVA_DIR)/tcl/lang/StrtoulResult.java
	echo $(SRC_JAVA_DIR)/tcl/lang/StrtoulResult.java >> depend.out

$(TCLJAVA)/tcl/lang/SubstCmd.class: $(SRC_JAVA_DIR)/tcl/lang/SubstCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/SubstCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/SwitchCmd.class: $(SRC_JAVA_DIR)/tcl/lang/SwitchCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/SwitchCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TclEvent.class: $(SRC_JAVA_DIR)/tcl/lang/TclEvent.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TclEvent.java >> depend.out

$(TCLJAVA)/tcl/lang/TclIO.class: $(SRC_JAVA_DIR)/tcl/lang/TclIO.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TclIO.java >> depend.out

$(TCLJAVA)/tcl/lang/TclList.class: $(SRC_JAVA_DIR)/tcl/lang/TclList.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TclList.java >> depend.out

$(TCLJAVA)/tcl/lang/TclParse.class: $(SRC_JAVA_DIR)/tcl/lang/TclParse.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TclParse.java >> depend.out

$(TCLJAVA)/tcl/lang/TclToken.class: $(SRC_JAVA_DIR)/tcl/lang/TclToken.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TclToken.java >> depend.out

$(TCLJAVA)/tcl/lang/TclVarException.class: $(SRC_JAVA_DIR)/tcl/lang/TclVarException.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TclVarException.java >> depend.out

$(TCLJAVA)/tcl/lang/TellCmd.class: $(SRC_JAVA_DIR)/tcl/lang/TellCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TellCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TimerHandler.class: $(SRC_JAVA_DIR)/tcl/lang/TimerHandler.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TimerHandler.java >> depend.out

$(TCLJAVA)/tcl/lang/TimeCmd.class: $(SRC_JAVA_DIR)/tcl/lang/TimeCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TimeCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TraceCmd.class: $(SRC_JAVA_DIR)/tcl/lang/TraceCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TraceCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TraceRecord.class: $(SRC_JAVA_DIR)/tcl/lang/TraceRecord.java
	echo $(SRC_JAVA_DIR)/tcl/lang/TraceRecord.java >> depend.out

$(TCLJAVA)/tcl/lang/UnsetCmd.class: $(SRC_JAVA_DIR)/tcl/lang/UnsetCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/UnsetCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/UpdateCmd.class: $(SRC_JAVA_DIR)/tcl/lang/UpdateCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/UpdateCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/UplevelCmd.class: $(SRC_JAVA_DIR)/tcl/lang/UplevelCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/UplevelCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/UpvarCmd.class: $(SRC_JAVA_DIR)/tcl/lang/UpvarCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/UpvarCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/Util.class: $(SRC_JAVA_DIR)/tcl/lang/Util.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Util.java >> depend.out

$(TCLJAVA)/tcl/lang/Var.class: $(SRC_JAVA_DIR)/tcl/lang/Var.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Var.java >> depend.out

$(TCLJAVA)/tcl/lang/VwaitCmd.class: $(SRC_JAVA_DIR)/tcl/lang/VwaitCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/VwaitCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/WhileCmd.class: $(SRC_JAVA_DIR)/tcl/lang/WhileCmd.java
	echo $(SRC_JAVA_DIR)/tcl/lang/WhileCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/Word.class: $(SRC_JAVA_DIR)/tcl/lang/Word.java
	echo $(SRC_JAVA_DIR)/tcl/lang/Word.java >> depend.out

#----------------------------------------------------------------
# Class Build Rules for Regexp package Classes
#----------------------------------------------------------------

$(TCLJAVA)/tcl/regex/OroRegexMatcher.class: $(SRC_JAVA_DIR)/tcl/regex/OroRegexMatcher.java
	echo $(SRC_JAVA_DIR)/tcl/regex/OroRegexMatcher.java >> depend.out

$(TCLJAVA)/tcl/regex/OroRegexpCmd.class: $(SRC_JAVA_DIR)/tcl/regex/OroRegexpCmd.java
	echo $(SRC_JAVA_DIR)/tcl/regex/OroRegexpCmd.java >> depend.out

$(TCLJAVA)/tcl/regex/OroRegsubCmd.class: $(SRC_JAVA_DIR)/tcl/regex/OroRegsubCmd.java
	echo $(SRC_JAVA_DIR)/tcl/regex/OroRegsubCmd.java >> depend.out

#----------------------------------------------------------------
# Test class build rules for classes in "tcl.lang" package
#----------------------------------------------------------------

$(TCLJAVA)/tcl/lang/TestsetplatformCmd.class: $(TEST_JAVA_DIR)/TestsetplatformCmd.java
	echo $(TEST_JAVA_DIR)/TestsetplatformCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TestgetplatformCmd.class: $(TEST_JAVA_DIR)/TestgetplatformCmd.java
	echo $(TEST_JAVA_DIR)/TestgetplatformCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/JavaTestExtension.class: $(TEST_JAVA_DIR)/JavaTestExtension.java
	echo $(TEST_JAVA_DIR)/JavaTestExtension.java >> depend.out

$(TCLJAVA)/tcl/lang/JtestCmd.class: $(TEST_JAVA_DIR)/JtestCmd.java
	echo $(TEST_JAVA_DIR)/JtestCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TestParserCmd.class: $(TEST_JAVA_DIR)/TestParserCmd.java
	echo $(TEST_JAVA_DIR)/TestParserCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TestParsevarCmd.class: $(TEST_JAVA_DIR)/TestParsevarCmd.java
	echo $(TEST_JAVA_DIR)/TestParsevarCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TestParsevarnameCmd.class: $(TEST_JAVA_DIR)/TestParsevarnameCmd.java
	echo $(TEST_JAVA_DIR)/TestParsevarnameCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TestEvalObjvCmd.class: $(TEST_JAVA_DIR)/TestEvalObjvCmd.java
	echo $(TEST_JAVA_DIR)/TestEvalObjvCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TestEval2Cmd.class: $(TEST_JAVA_DIR)/TestEval2Cmd.java
	echo $(TEST_JAVA_DIR)/TestEval2Cmd.java >> depend.out

$(TCLJAVA)/tcl/lang/NoEventBean.class: $(TEST_JAVA_DIR)/NoEventBean.java
	echo $(TEST_JAVA_DIR)/NoEventBean.java >> depend.out

$(TCLJAVA)/tcl/lang/TesterBean.class: $(TEST_JAVA_DIR)/TesterBean.java
	echo $(TEST_JAVA_DIR)/TesterBean.java >> depend.out

$(TCLJAVA)/tcl/lang/Tester1Listener.class: $(TEST_JAVA_DIR)/Tester1Listener.java
	echo $(TEST_JAVA_DIR)/Tester1Listener.java >> depend.out

$(TCLJAVA)/tcl/lang/Tester1Event.class: $(TEST_JAVA_DIR)/Tester1Event.java
	echo $(TEST_JAVA_DIR)/Tester1Event.java >> depend.out

$(TCLJAVA)/tcl/lang/Tester2Listener.class: $(TEST_JAVA_DIR)/Tester2Listener.java
	echo $(TEST_JAVA_DIR)/Tester2Listener.java >> depend.out

$(TCLJAVA)/tcl/lang/Tester2Event.class: $(TEST_JAVA_DIR)/Tester2Event.java
	echo $(TEST_JAVA_DIR)/Tester2Event.java >> depend.out

$(TCLJAVA)/tcl/lang/AdaptorGenTest.class: $(TEST_JAVA_DIR)/AdaptorGenTest.java
	echo $(TEST_JAVA_DIR)/AdaptorGenTest.java >> depend.out

$(TCLJAVA)/tcl/lang/NativeTestExtension.class: $(TEST_JAVA_DIR)/NativeTestExtension.java
	echo $(TEST_JAVA_DIR)/NativeTestExtension.java >> depend.out

$(TCLJAVA)/tcl/lang/NonPublic.class: $(TEST_JAVA_DIR)/NonPublic.java
	echo $(TEST_JAVA_DIR)/NonPublic.java >> depend.out

$(TCLJAVA)/tcl/lang/TestcompcodeCmd.class: $(TEST_JAVA_DIR)/TestcompcodeCmd.java
	echo $(TEST_JAVA_DIR)/TestcompcodeCmd.java >> depend.out

$(TCLJAVA)/tcl/lang/TclPkgInvoker.class: $(TEST_JAVA_DIR)/TclPkgInvoker.java
	echo $(TEST_JAVA_DIR)/TclPkgInvoker.java >> depend.out

$(TCLJAVA)/pkg1/TclPkgInvoker.class: $(TEST_JAVA_DIR)/pkg1/TclPkgInvoker.java
	echo $(TEST_JAVA_DIR)/pkg1/TclPkgInvoker.java >> depend.out

$(TCLJAVA)/pkg1/MyClass.class: $(TEST_JAVA_DIR)/pkg1/MyClass.java
	echo $(TEST_JAVA_DIR)/pkg1/MyClass.java >> depend.out

$(TCLJAVA)/pkg2/MyClass.class: $(TEST_JAVA_DIR)/pkg2/MyClass.java
	echo $(TEST_JAVA_DIR)/pkg2/MyClass.java >> depend.out

#----------------------------------------------------------------
# Build rules for Bean classes
#----------------------------------------------------------------

$(TCLJAVA)/tcl/bean/TclInterp.class: $(JAVA_JAVA_DIR)/tcl/bean/TclInterp.java
	echo $(JAVA_JAVA_DIR)/tcl/bean/TclInterp.java >> depend.out

$(TCLJAVA)/tcl/bean/TclInterpBeanInfo.class: $(JAVA_JAVA_DIR)/tcl/bean/TclInterpBeanInfo.java
	echo $(JAVA_JAVA_DIR)/tcl/bean/TclInterpBeanInfo.java >> depend.out

$(TCLJAVA)/tcl/bean/StudioTclInterp.class: $(JAVA_JAVA_DIR)/tcl/bean/StudioTclInterp.java
	echo $(JAVA_JAVA_DIR)/tcl/bean/StudioTclInterp.java >> depend.out

$(TCLJAVA)/tcl/bean/StudioTclPort.class: $(JAVA_JAVA_DIR)/tcl/bean/StudioTclPort.java
	echo $(JAVA_JAVA_DIR)/tcl/bean/StudioTclPort.java >> depend.out

$(TCLJAVA)/tcl/bean/StudioTclInterpCustomizer.class: $(JAVA_JAVA_DIR)/tcl/bean/StudioTclInterpCustomizer.java
	echo $(JAVA_JAVA_DIR)/tcl/bean/StudioTclInterpCustomizer.java >> depend.out

$(TCLJAVA)/tcl/bean/StudioTclInterpVJComponentInfo.class: $(JAVA_JAVA_DIR)/tcl/bean/StudioTclInterpVJComponentInfo.java
	echo $(JAVA_JAVA_DIR)/tcl/bean/StudioTclInterpVJComponentInfo.java >> depend.out


#----------------------------------------------------------------
# Test class build rules for classes in "tests" package
#----------------------------------------------------------------

$(TEST_CLASS_DIR)/ConvertTest.class: $(TEST_JAVA_DIR)/ConvertTest.java
	echo $(TEST_JAVA_DIR)/ConvertTest.java >> depend.out

$(TEST_CLASS_DIR)/JavaTest.class: $(TEST_JAVA_DIR)/JavaTest.java
	echo $(TEST_JAVA_DIR)/JavaTest.java >> depend.out

$(TEST_CLASS_DIR)/JavaTestSub.class: $(TEST_JAVA_DIR)/JavaTestSub.java
	echo $(TEST_JAVA_DIR)/JavaTestSub.java >> depend.out

$(TEST_CLASS_DIR)/TestObjectCmd.class: $(TEST_JAVA_DIR)/TestObjectCmd.java
	echo $(TEST_JAVA_DIR)/TestObjectCmd.java >> depend.out

$(TEST_CLASS_DIR)/VarTraceTest.class: $(TEST_JAVA_DIR)/VarTraceTest.java
	echo $(TEST_JAVA_DIR)/VarTraceTest.java >> depend.out

$(TEST_CLASS_DIR)/invoke/IntA.class: $(TEST_JAVA_DIR)/IntA.java
	echo $(TEST_JAVA_DIR)/IntA.java >> depend.out

$(TEST_CLASS_DIR)/invoke/IntC.class: $(TEST_JAVA_DIR)/IntC.java
	echo $(TEST_JAVA_DIR)/IntC.java >> depend.out

$(TEST_CLASS_DIR)/invoke/PublicTester.class: $(TEST_JAVA_DIR)/PublicTester.java
	echo $(TEST_JAVA_DIR)/PublicTester.java >> depend.out

$(TEST_CLASS_DIR)/invoke/ArrayTestClass.class: $(TEST_JAVA_DIR)/ArrayTestClass.java
	echo $(TEST_JAVA_DIR)/ArrayTestClass.java >> depend.out

$(TEST_CLASS_DIR)/javainfo/InfoTestClass.class: $(TEST_JAVA_DIR)/InfoTestClass.java
	echo $(TEST_JAVA_DIR)/InfoTestClass.java >> depend.out

$(TEST_CLASS_DIR)/javainfo/SuperTestClass.class: $(TEST_JAVA_DIR)/SuperTestClass.java
	echo $(TEST_JAVA_DIR)/SuperTestClass.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test1Cmd.class: $(TEST_JAVA_DIR)/javaload/Test1Cmd.java
	echo $(TEST_JAVA_DIR)/javaload/Test1Cmd.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test2Cmd.class: $(TEST_JAVA_DIR)/javaload/Test2Cmd.java
	echo $(TEST_JAVA_DIR)/javaload/Test2Cmd.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test1Extension.class: $(TEST_JAVA_DIR)/javaload/Test1Extension.java
	echo $(TEST_JAVA_DIR)/javaload/Test1Extension.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test2Extension.class: $(TEST_JAVA_DIR)/javaload/Test2Extension.java
	echo $(TEST_JAVA_DIR)/javaload/Test2Extension.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test3Extension.class: $(TEST_JAVA_DIR)/javaload/Test3Extension.java
	echo $(TEST_JAVA_DIR)/javaload/Test3Extension.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test4Extension.class: $(TEST_JAVA_DIR)/javaload/Test4Extension.java
	echo $(TEST_JAVA_DIR)/javaload/Test4Extension.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test5Extension.class: $(TEST_JAVA_DIR)/javaload/Test5Extension.java
	echo $(TEST_JAVA_DIR)/javaload/Test5Extension.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test6Extension.class: $(TEST_JAVA_DIR)/javaload/Test6Extension.java
	echo $(TEST_JAVA_DIR)/javaload/Test6Extension.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test7Extension.class: $(TEST_JAVA_DIR)/javaload/Test7Extension.java
	echo $(TEST_JAVA_DIR)/javaload/Test7Extension.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test8Extension.class: $(TEST_JAVA_DIR)/javaload/Test8Extension.java
	echo $(TEST_JAVA_DIR)/javaload/Test8Extension.java >> depend.out

$(TEST_CLASS_DIR)/javaload/Test9Extension.class: $(TEST_JAVA_DIR)/javaload/Test9Extension.java
	echo $(TEST_JAVA_DIR)/javaload/Test9Extension.java >> depend.out


#----------------------------------------------------------------
# Demos class build rules
#----------------------------------------------------------------

$(DEMO_JAVA_DIR)/gluepkg/GlueExtension.class: $(DEMO_JAVA_DIR)/gluepkg/GlueExtension.java
	echo $(DEMO_JAVA_DIR)/gluepkg/GlueExtension.java >> depend.out

$(DEMO_JAVA_DIR)/gluepkg/FileDialogApp.class: $(DEMO_JAVA_DIR)/gluepkg/FileDialogApp.java
	echo $(DEMO_JAVA_DIR)/gluepkg/FileDialogApp.java >> depend.out

$(DEMO_JAVA_DIR)/gluepkg/FileDialogCmd.class: $(DEMO_JAVA_DIR)/gluepkg/FileDialogCmd.java
	echo $(DEMO_JAVA_DIR)/gluepkg/FileDialogCmd.java >> depend.out

$(DEMO_JAVA_DIR)/gluepkg/JarCmd.class: $(DEMO_JAVA_DIR)/gluepkg/JarCmd.java
	echo $(DEMO_JAVA_DIR)/gluepkg/JarCmd.java >> depend.out

$(DEMO_JAVA_DIR)/gluepkg/ListboxApp.class: $(DEMO_JAVA_DIR)/gluepkg/ListboxApp.java
	echo $(DEMO_JAVA_DIR)/gluepkg/ListboxApp.java >> depend.out

$(DEMO_JAVA_DIR)/gluepkg/ListboxCmd.class: $(DEMO_JAVA_DIR)/gluepkg/ListboxCmd.java
	echo $(DEMO_JAVA_DIR)/gluepkg/ListboxCmd.java >> depend.out

$(DEMO_JAVA_DIR)/pyramidpkg/AppletConsole.class: $(DEMO_JAVA_DIR)/pyramidpkg/AppletConsole.java
	echo $(DEMO_JAVA_DIR)/pyramidpkg/AppletConsole.java >> depend.out

$(DEMO_JAVA_DIR)/pyramidpkg/ConsoleKeyListener.class: $(DEMO_JAVA_DIR)/pyramidpkg/ConsoleKeyListener.java
	echo $(DEMO_JAVA_DIR)/pyramidpkg/ConsoleKeyListener.java >> depend.out

$(DEMO_JAVA_DIR)/pyramidpkg/ConsoleMouseListener.class: $(DEMO_JAVA_DIR)/pyramidpkg/ConsoleMouseListener.java
	echo $(DEMO_JAVA_DIR)/pyramidpkg/ConsoleMouseListener.java >> depend.out

$(DEMO_JAVA_DIR)/pyramidpkg/Pyramid.class: $(DEMO_JAVA_DIR)/pyramidpkg/Pyramid.java
	echo $(DEMO_JAVA_DIR)/pyramidpkg/Pyramid.java >> depend.out

$(DEMO_JAVA_DIR)/simplepkg/SayhelloCmd.class: $(DEMO_JAVA_DIR)/simplepkg/SayhelloCmd.java
	echo $(DEMO_JAVA_DIR)/simplepkg/SayhelloCmd.java >> depend.out

$(DEMO_JAVA_DIR)/simplepkg/SimpleExtension.class: $(DEMO_JAVA_DIR)/simplepkg/SimpleExtension.java
	echo $(DEMO_JAVA_DIR)/simplepkg/SimpleExtension.java >> depend.out

$(DEMO_JAVA_DIR)/watchpkg/StopWatchExtension.class: $(DEMO_JAVA_DIR)/watchpkg/StopWatchExtension.java
	echo $(DEMO_JAVA_DIR)/watchpkg/StopWatchExtension.java >> depend.out

$(DEMO_JAVA_DIR)/watchpkg/StopWatchThread.class: $(DEMO_JAVA_DIR)/watchpkg/StopWatchThread.java
	echo $(DEMO_JAVA_DIR)/watchpkg/StopWatchThread.java >> depend.out

$(DEMO_JAVA_DIR)/watchpkg/SwCmd.class: $(DEMO_JAVA_DIR)/watchpkg/SwCmd.java
	echo  $(DEMO_JAVA_DIR)/watchpkg/SwCmd.java >> depend.out


#----------------------------------------------------------------
# Distributions
#----------------------------------------------------------------

#
# Target to create a proper Tcl distribution from information in the
# master source directory.  DISTDIR must be defined to indicate where
# to put the distribution.
#

DISTDIR =               /proj/tcl/dist/java
JACL_ZIPNAME =          jaclSrc@TCLJAVA_MAJOR_VERSION@@TCLJAVA_MINOR_VERSION@.zip
JACL_SRC_DISTNAME =     jaclSrc@TCLJAVA_VERSION@
JACL_DISTNAME =         jacl@TCLJAVA_VERSION@
JACL_DISTDIR =          $(DISTDIR)/$(JACL_DISTNAME)
BLEND_ZIPNAME =         tclBlendSrc@TCLJAVA_MAJOR_VERSION@@TCLJAVA_MINOR_VERSION@.zip
BLEND_SRC_DISTNAME =    tclBlendSrc@TCLJAVA_VERSION@
BLEND_DISTNAME =        tclBlend@TCLJAVA_VERSION@
BLEND_DISTDIR =         $(DISTDIR)/$(BLEND_DISTNAME)
BEAN_ZIPNAME =          tclBeanSrc@TCLJAVA_MAJOR_VERSION@@TCLJAVA_MINOR_VERSION@.zip
BEAN_SRC_DISTNAME =     tclBeanSrc@TCLJAVA_VERSION@
BEAN_DISTNAME =         tclBean@TCLJAVA_VERSION@
BEAN_DISTDIR =          $(DISTDIR)/$(BEAN_DISTNAME)

$(UNIX_DIR)/configure: $(UNIX_DIR)/configure.in
	autoconf $(UNIX_DIR)/configure.in > $(UNIX_DIR)/configure


#----------------------------------------------------------------
# commonSrcDist --
#
#	Builds the directory structure and copies files that are 
# 	common in both blend and jacl.  Source releases only.
#----------------------------------------------------------------

commonSrcDist:
	rm -rf $(SRC_DISTDIR)
	mkdir -p $(SRC_DISTDIR)

	cp -p $(TOP_DIR)/license.terms \
		$(TOP_DIR)/diffs.txt \
		$(TOP_DIR)/changes \
		$(SRC_DISTDIR)
	cp -p $(TOP_DIR)/README.$(TCLJAVA) \
		$(SRC_DISTDIR)/README

	mkdir $(SRC_DISTDIR)/unix
	cp -p $(UNIX_DIR)/configure \
		$(UNIX_DIR)/configure.in \
		$(UNIX_DIR)/Makefile.in \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/unix
	cp -p $(UNIX_DIR)/README.$(TCLJAVA) \
		$(SRC_DISTDIR)/unix/README

	chmod 664 $(SRC_DISTDIR)/unix/Makefile.in
	chmod 775 $(SRC_DISTDIR)/unix/configure $(SRC_DISTDIR)/unix/configure.in

	mkdir $(SRC_DISTDIR)/win
	cp -p $(WIN_DIR)/BuildJava.java \
		$(WIN_DIR)/common.mak \
		$(WIN_DIR)/pkgIndex.tcl \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/win
	cp -p $(TOP_DIR)/win/Makefile.$(TCLJAVA) \
		$(SRC_DISTDIR)/win/makefile.vc
	cp -p $(TOP_DIR)/win/README.$(TCLJAVA) \
		$(SRC_DISTDIR)/win/README

	mkdir $(SRC_DISTDIR)/doc
	cp -p $(TOP_DIR)/doc/*.[13n] \
		$(TOP_DIR)/doc/javaAPI.txt \
		$(TOP_DIR)/doc/license.htm \
		$(TOP_DIR)/doc/man.macros \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/doc
	mkdir $(SRC_DISTDIR)/doc/html
	cp -rp $(TOP_DIR)/doc/html/* \
		$(SRC_DISTDIR)/doc/html

	mkdir -p $(SRC_DISTDIR)/src/common/tcl/lang/reflect
	cp -p $(COMMON_JAVA_DIR)/tcl/lang/*.java \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/src/common/tcl/lang
	cp -p $(COMMON_JAVA_DIR)/tcl/lang/reflect/*.java \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/src/common/tcl/lang/reflect

	mkdir -p $(SRC_DISTDIR)/src/tests \
		$(SRC_DISTDIR)/src/tests/javaload \
		$(SRC_DISTDIR)/src/tests/pkg1 \
		$(SRC_DISTDIR)/src/tests/pkg2
	cp -p $(TEST_JAVA_DIR)/*.java \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/src/tests/
	cp -p $(TEST_JAVA_DIR)/javaload/*.java \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/src/tests/javaload
	cp -p $(TEST_JAVA_DIR)/pkg1/*.java \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/src/tests/pkg1
	cp -p $(TEST_JAVA_DIR)/pkg2/*.java \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/src/tests/pkg2

	mkdir $(SRC_DISTDIR)/tests 
	cp -p $(TOP_DIR)/tests/README \
		$(TOP_DIR)/tests/all \
		$(TOP_DIR)/tests/defs \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/tests

	mkdir -p $(SRC_DISTDIR)/tests/common
	cp -p  $(TOP_DIR)/tests/common/*.test \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/tests/common

#----------------------------------------------------------------
# commonBinDist --
#
#	Builds the directory structure and copies files that are 
# 	common in both blend and jacl.  Binary releases only.
#----------------------------------------------------------------

commonBinDist:
	rm -rf $(SRC_DISTDIR)
	mkdir -p $(SRC_DISTDIR)

	cp -p $(TOP_DIR)/license.terms \
		$(TOP_DIR)/diffs.txt \
		$(TOP_DIR)/changes \
		$(SRC_DISTDIR)
	cp -p $(TOP_DIR)/README.$(TCLJAVA) \
		$(SRC_DISTDIR)/README

	mkdir $(SRC_DISTDIR)/doc
	cp -p $(TOP_DIR)/doc/*.[13n] \
		$(TOP_DIR)/doc/javaAPI.txt \
		$(TOP_DIR)/doc/license.htm \
		$(TOP_DIR)/doc/man.macros \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/doc
	mkdir $(SRC_DISTDIR)/doc/html
	cp -rp $(TOP_DIR)/doc/html/* \
		$(SRC_DISTDIR)/doc/html

	mkdir -p $(SRC_DISTDIR)/demos/gluepkg \
		$(SRC_DISTDIR)/demos/watchpkg \
		$(SRC_DISTDIR)/demos/simplepkg
	cp -p $(TOP_DIR)/demos/gluepkg/*.class \
		$(SRC_DISTDIR)/demos/gluepkg
	cp -p $(TOP_DIR)/demos/simplepkg/*.class \
		$(SRC_DISTDIR)/demos/simplepkg
	cp -p $(TOP_DIR)/demos/watchpkg/*.class \
		$(SRC_DISTDIR)/demos/watchpkg

#----------------------------------------------------------------
# commonDemoDist --
#
#	Builds the directory structure and copies demos that are 
# 	common in both blend and jacl.  This target is used for
#	both binary and source releases.
#----------------------------------------------------------------

commonDemoDist:
	mkdir -p $(SRC_DISTDIR)/demos/gluepkg \
		$(SRC_DISTDIR)/demos/watchpkg \
		$(SRC_DISTDIR)/demos/simplepkg
	cp -p $(TOP_DIR)/demos/README \
		$(SRC_DISTDIR)/demos
	cp -p $(TOP_DIR)/demos/gluepkg/*.java \
		$(TOP_DIR)/demos/gluepkg/*.tcl \
		$(TOP_DIR)/demos/gluepkg/*.jar \
		$(TOP_DIR)/demos/gluepkg/README \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/demos/gluepkg
	cp -p $(TOP_DIR)/demos/simplepkg/*.java \
		$(TOP_DIR)/demos/simplepkg/README \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/demos/simplepkg
	cp -p $(TOP_DIR)/demos/watchpkg/*.java \
		$(TOP_DIR)/demos/watchpkg/*.tcl \
		$(TOP_DIR)/demos/watchpkg/README \
		$(TOP_DIR)/license.terms \
		$(SRC_DISTDIR)/demos/watchpkg

#----------------------------------------------------------------
# jaclSrcDist --
#
#	Builds the directory structure and copies files that are 
# 	unique to Jacl.  Before this is done, the targets 
#	commonSrcDist and commonDemoDist MUST be built.
#----------------------------------------------------------------

jaclSrcDist: $(UNIX_DIR)/configure webpage
	@$(MAKE) commonSrcDist SRC_DISTDIR=$(JACL_DISTDIR) TCLJAVA=jacl
	@$(MAKE) commonDemoDist SRC_DISTDIR=$(JACL_DISTDIR)

	mkdir -p $(JACL_DISTDIR)/src/java/tcl/lang/library
	cp -p $(JAVA_JAVA_DIR)/tcl/lang/*.java \
		$(TOP_DIR)/license.terms \
		$(JACL_DISTDIR)/src/java/tcl/lang
	cp -p $(JAVA_JAVA_DIR)/tcl/lang/library/*.tcl \
		$(JAVA_JAVA_DIR)/tcl/lang/library/tclIndex \
		$(TOP_DIR)/license.terms \
		$(JACL_DISTDIR)/src/java/tcl/lang/library

	mkdir -p $(JACL_DISTDIR)/tests/java
	cp -p  $(TOP_DIR)/tests/*.test \
		$(JACL_DISTDIR)/tests
	cp -p  $(TOP_DIR)/tests/java/*.test \
		$(TOP_DIR)/license.terms \
		$(JACL_DISTDIR)/tests/java

	mkdir -p $(JACL_DISTDIR)/demos/pyramidpkg \
		$(JACL_DISTDIR)/demos/guiDemo
	cp -p $(TOP_DIR)/demos/pyramidpkg/*.java \
		$(TOP_DIR)/demos/pyramidpkg/*.html \
		$(TOP_DIR)/demos/pyramidpkg/changeDefs.tcl \
		$(TOP_DIR)/demos/pyramidpkg/README \
		$(TOP_DIR)/license.terms \
		$(JACL_DISTDIR)/demos/pyramidpkg
	cp -p $(TOP_DIR)/demos/guiDemo/*.tcl \
		$(TOP_DIR)/demos/guiDemo/README \
		$(TOP_DIR)/license.terms \
		$(JACL_DISTDIR)/demos/guiDemo

	rm -f $(DISTDIR)/$(JACL_SRC_DISTNAME).tar.Z \
		$(DISTDIR)/$(JACL_SRC_DISTNAME).tar.gz \
		$(DISTDIR)/$(JACL_ZIPNAME) 
	cd $(DISTDIR);\
		tar cf $(JACL_SRC_DISTNAME).tar $(JACL_DISTNAME); \
		gzip -9 -c $(JACL_SRC_DISTNAME).tar > $(JACL_SRC_DISTNAME).tar.gz; \
		compress $(JACL_SRC_DISTNAME).tar; \
		zip -r8 $(JACL_ZIPNAME) $(JACL_DISTNAME); \
		rm -f $(JACL_SRC_DISTNAME).tar

#----------------------------------------------------------------
# tclblendSrcDist --
#
#	Builds the directory structure and copies files that are 
# 	unique to Blend.  Before this is done, the targets 
#	commonSrcDist and commonDemoDist MUST be built.
#----------------------------------------------------------------

tclblendSrcDist: $(UNIX_DIR)/configure webpage
	@$(MAKE) commonSrcDist SRC_DISTDIR=$(BLEND_DISTDIR) TCLJAVA=tclblend
	@$(MAKE) commonDemoDist SRC_DISTDIR=$(BLEND_DISTDIR)

	mkdir $(BLEND_DISTDIR)/generic
	cp -p $(GENERIC_DIR)/*.c \
		$(GENERIC_DIR)/*.h \
		$(TOP_DIR)/license.terms \
		$(BLEND_DISTDIR)/generic

	cp -p $(UNIX_DIR)/green.c \
		$(UNIX_DIR)/pkgIndex.tcl \
		$(BLEND_DISTDIR)/unix

	mkdir -p $(BLEND_DISTDIR)/src/native/tcl/lang
	cp -p $(NATIVE_JAVA_DIR)/tcl/lang/*.java \
		$(TOP_DIR)/license.terms \
		$(BLEND_DISTDIR)/src/native/tcl/lang

	mkdir -p $(BLEND_DISTDIR)/tests/native
	cp -p  $(TOP_DIR)/tests/native/*.test \
		$(TOP_DIR)/license.terms \
		$(BLEND_DISTDIR)/tests/native

	rm -f \
		$(DISTDIR)/$(BLEND_SRC_DISTNAME).tar.Z \
		$(DISTDIR)/$(BLEND_SRC_DISTNAME).tar.gz \
		$(DISTDIR)/$(BLEND_ZIPNAME)
	cd $(DISTDIR);\
		tar cf $(BLEND_SRC_DISTNAME).tar $(BLEND_DISTNAME); \
		gzip -9 -c $(BLEND_SRC_DISTNAME).tar > $(BLEND_SRC_DISTNAME).tar.gz; \
		compress $(BLEND_SRC_DISTNAME).tar; \
		zip -r8 $(BLEND_ZIPNAME) $(BLEND_DISTNAME); \
		rm -f $(BLEND_SRC_DISTNAME).tar \

#----------------------------------------------------------------
# jaclBinDist --
#
#	Before any files are copied, make the jar file for jacl.
#	Currently the class files for the TclBean are also 
# 	included.  After this is done, the targets 
#	commonBinDist and commonDemoDist MUST be built.  Then
#	copy files unique to the binary dist of Jacl.
#----------------------------------------------------------------

jaclBinDist: $(UNIX_DIR)/configure webpage
	$(MAKE) jaclClean
	$(MAKE) jaclDemo
	$(MAKE) bean
	$(MAKE) jacl.jar

	@$(MAKE) commonBinDist SRC_DISTDIR=$(JACL_DISTDIR) TCLJAVA=jacl
	@$(MAKE) commonDemoDist SRC_DISTDIR=$(JACL_DISTDIR)

	cp -p $(UNIX_DIR)/README.jacl \
		$(JACL_DISTDIR)/INSTALL.txt
	cp -p $(TOP_DIR)/unix/jacl.jar \
		$(JACL_DISTDIR)

	mkdir -p $(JACL_DISTDIR)/demos/pyramidpkg \
		$(JACL_DISTDIR)/demos/guiDemo
	cp -p $(TOP_DIR)/demos/pyramidpkg/*.java \
		$(TOP_DIR)/demos/pyramidpkg/*.class \
		$(TOP_DIR)/demos/pyramidpkg/*.html \
		$(TOP_DIR)/demos/pyramidpkg/changeDefs.tcl \
		$(TOP_DIR)/demos/pyramidpkg/README \
		$(TOP_DIR)/license.terms \
		$(JACL_DISTDIR)/demos/pyramidpkg
	cp -p $(TOP_DIR)/demos/guiDemo/*.tcl \
		$(TOP_DIR)/demos/guiDemo/README \
		$(TOP_DIR)/license.terms \
		$(JACL_DISTDIR)/demos/guiDemo

	cp -f $(TOP_DIR)/binary.license.terms \
		$(JACL_DISTDIR)/license.terms
	cp -f $(TOP_DIR)/binary.license.terms \
		$(JACL_DISTDIR)/demos/gluepkg/license.terms
	cp -f $(TOP_DIR)/binary.license.terms \
		$(JACL_DISTDIR)/demos/guiDemo/license.terms
	cp -f $(TOP_DIR)/binary.license.terms \
		$(JACL_DISTDIR)/demos/pyramidpkg/license.terms
	cp -f $(TOP_DIR)/binary.license.terms \
		$(JACL_DISTDIR)/demos/simplepkg/license.terms
	cp -f $(TOP_DIR)/binary.license.terms \
		$(JACL_DISTDIR)/demos/watchpkg/license.terms
	cp -f $(TOP_DIR)/binary.license.terms \
		$(JACL_DISTDIR)/doc/license.terms
	cp -f $(TOP_DIR)/binary.license.terms \
		$(JACL_DISTDIR)/doc/html/license.terms
	cp -f $(TOP_DIR)/binary.license.terms \
		$(JACL_DISTDIR)/doc/html/TclCmd/license.terms

	rm -f $(DISTDIR)/$(JACL_DISTNAME).tar.Z \
		$(DISTDIR)/$(JACL_DISTNAME).tar.gz
	cd $(DISTDIR);\
		tar cf $(JACL_DISTNAME).tar $(JACL_DISTNAME); \
		gzip -9 -c $(JACL_DISTNAME).tar > $(JACL_DISTNAME).tar.gz; \
		compress $(JACL_DISTNAME).tar; \
		rm -f $(JACL_DISTNAME).tar 

#----------------------------------------------------------------
# jaclBinDist --
#
#	Before any files are copied, make the jar file for blend.
# 	After this is done, the targets commonBinDist and
#	commonDemoDist MUST be built.  Then copy files unique
#	to the binary dist of Blend.
#----------------------------------------------------------------

tclblendBinDist: $(UNIX_DIR)/configure webpage
	$(MAKE) tclblendClean
	$(MAKE) tclblendDemo
	$(MAKE) tclblend.jar

	@$(MAKE) commonBinDist SRC_DISTDIR=$(BLEND_DISTDIR) TCLJAVA=tclblend
	@$(MAKE) commonDemoDist SRC_DISTDIR=$(BLEND_DISTDIR)

	cp -p $(TOP_DIR)/unix/tclblend.jar \
		$(BLEND_DISTDIR)
	mkdir $(BLEND_DISTDIR)/unix
	cp -p $(UNIX_DIR)/green.c \
		$(UNIX_DIR)/pkgIndex.tcl \
		$(UNIX_DIR)/*.o \
		$(UNIX_DIR)/libtclblend$(SHLIB_SUFFIX) \
		$(BLEND_DISTDIR)/unix
	cp -p $(UNIX_DIR)/README.tclblend \
		$(BLEND_DISTDIR)/unix/README

	rm -f $(DISTDIR)/$(BLEND_DISTNAME).solaris.tar.Z \
		$(DISTDIR)/$(BLEND_DISTNAME).solaris.tar.gz
	cd $(DISTDIR);\
		tar cf $(BLEND_DISTNAME).solaris.tar $(BLEND_DISTNAME); \
		gzip -9 -c $(BLEND_DISTNAME).solaris.tar > $(BLEND_DISTNAME).solaris.tar.gz; \
		compress $(BLEND_DISTNAME).solaris.tar; \
		rm -f $(BLEND_DISTNAME).solaris.tar 

#----------------------------------------------------------------
# beanSrcDist --
#
#	Identical to jaclSrcDist except it also copies the source
#	for the Tcl Bean.  Before this is done, the targets 
#	commonSrcDist and commonDemoDist MUST be built.
#
# NOTE:
#	This target is for internal use only!!!
#----------------------------------------------------------------

beanSrcDist: $(UNIX_DIR)/configure webpage
	@$(MAKE) commonSrcDist SRC_DISTDIR=$(BEAN_DISTDIR) TCLJAVA=jacl
	@$(MAKE) commonDemoDist SRC_DISTDIR=$(BEAN_DISTDIR)

	mkdir -p $(BEAN_DISTDIR)/src/java/tcl/lang/library
	cp -p $(JAVA_JAVA_DIR)/tcl/lang/*.java \
		$(TOP_DIR)/license.terms \
		$(BEAN_DISTDIR)/src/java/tcl/lang
	cp -p $(JAVA_JAVA_DIR)/tcl/lang/library/*.tcl \
		$(JAVA_JAVA_DIR)/tcl/lang/library/tclIndex \
		$(TOP_DIR)/license.terms \
		$(BEAN_DISTDIR)/src/java/tcl/lang/library

	mkdir -p $(BEAN_DISTDIR)/src/java/tcl/bean/scripts
	cp -p $(JAVA_JAVA_DIR)/tcl/bean/*.java \
		$(JAVA_JAVA_DIR)/tcl/bean/*.gif \
		$(JAVA_JAVA_DIR)/tcl/bean/*.manifest \
		$(JAVA_JAVA_DIR)/tcl/bean/*.html \
		$(TOP_DIR)/license.terms \
		$(BEAN_DISTDIR)/src/java/tcl/bean
	cp -p $(JAVA_JAVA_DIR)/tcl/bean/scripts/*.tcl \
		$(TOP_DIR)/license.terms \
		$(BEAN_DISTDIR)/src/java/tcl/bean/scripts

	mkdir -p $(BEAN_DISTDIR)/src/java/tcl/regex
	cp -p $(JAVA_JAVA_DIR)/tcl/regex/*.java \
		$(TOP_DIR)/license.terms \
		$(BEAN_DISTDIR)/src/java/tcl/regex
	mkdir -p $(BEAN_DISTDIR)/src/java/com/oroinc/text/regex
	cp -p $(JAVA_JAVA_DIR)/com/oroinc/text/regex/*.class \
		$(BEAN_DISTDIR)/src/java/com/oroinc/text/regex

	mkdir -p $(BEAN_DISTDIR)/tests/java
	cp -p  $(TOP_DIR)/tests/*.test \
		$(BEAN_DISTDIR)/tests
	cp -p  $(TOP_DIR)/tests/java/*.test \
		$(TOP_DIR)/license.terms \
		$(BEAN_DISTDIR)/tests/java

	mkdir -p $(BEAN_DISTDIR)/demos/pyramidpkg \
		$(BEAN_DISTDIR)/demos/guiDemo
	cp -p $(TOP_DIR)/demos/pyramidpkg/*.java \
		$(TOP_DIR)/demos/pyramidpkg/*.html \
		$(TOP_DIR)/demos/pyramidpkg/changeDefs.tcl \
		$(TOP_DIR)/demos/pyramidpkg/README \
		$(TOP_DIR)/license.terms \
		$(BEAN_DISTDIR)/demos/pyramidpkg
	cp -p $(TOP_DIR)/demos/guiDemo/*.tcl \
		$(TOP_DIR)/demos/guiDemo/README \
		$(TOP_DIR)/license.terms \
		$(BEAN_DISTDIR)/demos/guiDemo

	rm -f $(DISTDIR)/$(BEAN_SRC_DISTNAME).tar.Z \
		$(DISTDIR)/$(BEAN_SRC_DISTNAME).tar.gz \
		$(DISTDIR)/$(BEAN_ZIPNAME) 
	cd $(DISTDIR);\
		tar cf $(BEAN_SRC_DISTNAME).tar $(BEAN_DISTNAME); \
		gzip -9 -c $(BEAN_SRC_DISTNAME).tar > $(BEAN_SRC_DISTNAME).tar.gz; \
		compress $(BEAN_SRC_DISTNAME).tar; \
		zip -r8 $(BEAN_ZIPNAME) $(BEAN_DISTNAME); \
		rm -f $(BEAN_SRC_DISTNAME).tar


alldist: jaclBinDist tclblendBinDist jaclSrcDist tclblendSrcDist README.dist

README.dist:
	cp $(TOOLS_DIR)/README.dist $(DISTDIR)/README


# DO NOT DELETE THIS LINE -- make depend depends on it.
