#! /bin/sh
#
# $Id$
#
# Copyright (c) 1994-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY 
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES 
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF 
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF 
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# Programmer: Christopher Hylands
#
# Substitute for pxgraph that saves the data into files.
# 1. We try to generate reasonable filenames by reading a file called
#    'pxfilename' that will contain the base for the generated file names.
# 2. We try to grab the title of the graph from the -t option
# 3. If pxgraph is called with multiple files, then each file gets a number 
#
# Note that there could be race condition if two pxgraphs are trying to
# write files at once.  We could try using the tmp filename.
# Or we could add a 2 second sleep into the ptcl scripts between runs

files=`echo "$@" | awk '{for(i=1;i<=NF;i++) if ($i ~/^\/tmp\// || $i ~ /temp/ ) printf("%s ", $i)}' - `
#if [ "$files" = "" ]; then
#	files=`echo "$@" | awk '{print $NF }' - `
#fi

origArgs=`echo "$@" | sed 's=/tmp/[^ ]*==g'`
for arg in "$@"
do
	if [ $1 = "-t" ]; then 
		origTitle=$2
		title=`echo $2 | sed 's/ /_/g' `
		break
	fi
	shift
done
origArgs=`echo $origArgs | sed "s/$origTitle/$title/g"`

if [ -f pxfilename ]; then
	outfilebase="`cat pxfilename`.$title"
	outlog="`cat pxfilename`.pxgraph"
	# Filter out any pathnames that have /tmp in them
	#echo "$@ Files: $files $title" |
	#sed 's=/tmp/[^ ]*=tmpfile=g'
else
	outfilebase=pxgraph.out.$title
	outlog="run.pxgraph"
fi

# Don't print any /tmp file names, as they could change between runs
#echo "$@ Files: $files Title: $title" | sed 's=/tmp/[^ ]*=tmpfile=g'

filenum=1
filelist=""
for file in $files
do
	outfile="$outfilebase.$filenum"
	while [ -f $outfile ]
	do
		filenum=`expr $filenum + 1`
		outfile="$outfilebase.$filenum"
	done
	cp $file $outfile
	filelist="$filelist $outfile"
	#echo "$file -> $outfile"

done
echo "\$PTOLEMY/bin.\$PTARCH/pxgraph $origArgs $filelist &" >> $outlog
exit



echo "$@"
for arg in "$@"
do
	case "$1" in
		-binary) shift ;;
		=*) shift;;
		-t|-0) shift;shift;;
		*) echo $arg;;
	esac

done

cp $1 $outfile

awk '{ for(i=1;i<=NF;i++) {
	outfile="pxgraph.out"i
	#print outfile
	if (NR == 1)
		printf("\n%cset %d%c\n",34,i,34) > outfile
	print NR,$i > outfile
	}
}' -

#cat /tmp/xg-col* | xgraph
