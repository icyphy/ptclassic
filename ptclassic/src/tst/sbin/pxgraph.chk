#!/bin/sh
# Look for stars that have the same title in a palette
#
# $Id$
#
# Copyright (c) %Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY 
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES 
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF 
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF 
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# Programmer: Christopher Hylands
#
# Usage: pxgraph.chk octtoolspalette.pal
# Returns 1 if a palette contains two stars that have the same title.

# The problem here is that the testbed pxgraph script uses the title
# to differentiate files, so if two stars have the same title, then
# there could be confusion.

results=`grep title $1 |
	awk -F\{ '{if (NF> 4) {
			split($2,f,"}")
			print f[1]
		   } else {
			print $NF
		   }
		  }' |
	sort | uniq -c |
	awk '$1 > 1 {print $0}' `

if [ "$results" -ne "" ]; then
	echo "$1 has stars that have duplicate titles:"
	echo "count  title"
	echo "$results"
	exit 1
fi

