/* This file is generated by utils/libexttools/MatlabIfcGen.tcl */
int (*MatlabIfc :: engEvalString)(Engine* /*ep*/, MXCONST char* /*string*/);
Engine* (*MatlabIfc :: engOpen)(MXCONST char* /*startcmd*/);
int (*MatlabIfc :: engClose)(Engine* /*ep*/);
mxArray* (*MatlabIfc :: engGetArray)(Engine* /*ep*/, MXCONST char* /*name*/);
int (*MatlabIfc :: engPutArray)(Engine* /*ep*/, MXCONST mxArray* /*ap*/);
int (*MatlabIfc :: engOutputBuffer)(Engine* /*ep*/, char* /*buffer*/, int /*buflen*/);
mxArray* (*MatlabIfc :: mxCreateDoubleMatrix)(int /*m*/, int /*n*/, mxComplexity /*flag*/);
void (*MatlabIfc :: mxDestroyArray)(mxArray* /*pa*/);
void* (*MatlabIfc :: mxCalloc)(size_t /*numberOfElements*/, size_t /*size*/);
void (*MatlabIfc :: mxFree)(void* /*memoryPtr*/);
const char* (*MatlabIfc :: mxGetName)(const mxArray* /*matrixPtr*/);
void (*MatlabIfc :: mxSetName)(mxArray* /*matrixPtr*/, const char* /*name*/);
int (*MatlabIfc :: mxGetM)(const mxArray* /*matrixPtr*/);
void (*MatlabIfc :: mxSetM)(mxArray* /*matrixPtr*/, int /*numrows*/);
int (*MatlabIfc :: mxGetN)(const mxArray* /*matrixPtr*/);
void (*MatlabIfc :: mxSetN)(mxArray* /*matrixPtr*/, int /*numcols*/);
double* (*MatlabIfc :: mxGetPr)(const mxArray* /*matrixPtr*/);
void (*MatlabIfc :: mxSetPr)(mxArray* /*matrixPtr*/, double* /*realMatrixPtr*/);
double* (*MatlabIfc :: mxGetPi)(const mxArray* /*matrixPtr*/);
void (*MatlabIfc :: mxSetPi)(mxArray* /*matrixPtr*/, double* /*imagMatrixPtr*/);
int (*MatlabIfc :: mxGetNzmax)(const mxArray* /*matrixPtr*/);
void (*MatlabIfc :: mxSetNzmax)(mxArray* /*matrixPtr*/, int /*numNonZeroElements*/);
int* (*MatlabIfc :: mxGetIr)(const mxArray* /*matrixPtr*/);
void (*MatlabIfc :: mxSetIr)(mxArray* /*matrixPtr*/, int* /*sparseIndexArray*/);
int* (*MatlabIfc :: mxGetJc)(const mxArray* /*matrixPtr*/);
void (*MatlabIfc :: mxSetJc)(mxArray* /*matrixPtr*/, int* /*sparseIndexArray*/);
int (*MatlabIfc :: mxGetString)(const mxArray* /*matrixPtr*/, char* /*buffer*/, int /*bufferLength*/);
mxArray* (*MatlabIfc :: mxCreateString)(const char* /*string*/);
double (*MatlabIfc :: mxGetScalar)(const mxArray* /*matrixPtr*/);
bool (*MatlabIfc :: mxIsSparse)(const mxArray* /*matrixPtr*/);
bool (*MatlabIfc :: mxIsDouble)(const mxArray* /*matrixPtr*/);
bool (*MatlabIfc :: mxIsNumeric)(const mxArray* /*matrixPtr*/);
bool (*MatlabIfc :: mxIsComplex)(const mxArray* /*matrixPtr*/);
