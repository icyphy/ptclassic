/* This file is generated by utils/libexttools/MatlabIfcGen.tcl */
static int (*engEvalString)(Engine* /*ep*/, MXCONST char* /*string*/);
static int dumengEvalString(Engine* /*ep*/, MXCONST char* /*string*/) { MatlabEngineError(); return 0; }
static Engine* (*engOpen)(MXCONST char* /*startcmd*/);
static Engine* dumengOpen(MXCONST char* /*startcmd*/) { MatlabEngineError(); return 0; }
static int (*engClose)(Engine* /*ep*/);
static int dumengClose(Engine* /*ep*/) { MatlabEngineError(); return 0; }
static mxArray* (*engGetArray)(Engine* /*ep*/, MXCONST char* /*name*/);
static mxArray* dumengGetArray(Engine* /*ep*/, MXCONST char* /*name*/) { MatlabEngineError(); return 0; }
static int (*engPutArray)(Engine* /*ep*/, MXCONST mxArray* /*ap*/);
static int dumengPutArray(Engine* /*ep*/, MXCONST mxArray* /*ap*/) { MatlabEngineError(); return 0; }
static int (*engOutputBuffer)(Engine* /*ep*/, char* /*buffer*/, int /*buflen*/);
static int dumengOutputBuffer(Engine* /*ep*/, char* /*buffer*/, int /*buflen*/) { MatlabEngineError(); return 0; }
static mxArray* (*mxCreateDoubleMatrix)(int /*m*/, int /*n*/, mxComplexity /*flag*/);
static mxArray* dummxCreateDoubleMatrix(int /*m*/, int /*n*/, mxComplexity /*flag*/) { MatlabEngineError(); return 0; }
static void (*mxDestroyArray)(mxArray* /*pa*/);
static void dummxDestroyArray(mxArray* /*pa*/) { MatlabEngineError();  }
static void* (*mxCalloc)(size_t /*numberOfElements*/, size_t /*size*/);
static void* dummxCalloc(size_t /*numberOfElements*/, size_t /*size*/) { MatlabEngineError(); return 0; }
static void (*mxFree)(void* /*memoryPtr*/);
static void dummxFree(void* /*memoryPtr*/) { MatlabEngineError();  }
static const char* (*mxGetName)(const mxArray* /*matrixPtr*/);
static const char* dummxGetName(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static void (*mxSetName)(mxArray* /*matrixPtr*/, const char* /*name*/);
static void dummxSetName(mxArray* /*matrixPtr*/, const char* /*name*/) { MatlabEngineError();  }
static int (*mxGetM)(const mxArray* /*matrixPtr*/);
static int dummxGetM(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static void (*mxSetM)(mxArray* /*matrixPtr*/, int /*numrows*/);
static void dummxSetM(mxArray* /*matrixPtr*/, int /*numrows*/) { MatlabEngineError();  }
static int (*mxGetN)(const mxArray* /*matrixPtr*/);
static int dummxGetN(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static void (*mxSetN)(mxArray* /*matrixPtr*/, int /*numcols*/);
static void dummxSetN(mxArray* /*matrixPtr*/, int /*numcols*/) { MatlabEngineError();  }
static double* (*mxGetPr)(const mxArray* /*matrixPtr*/);
static double* dummxGetPr(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static void (*mxSetPr)(mxArray* /*matrixPtr*/, double* /*realMatrixPtr*/);
static void dummxSetPr(mxArray* /*matrixPtr*/, double* /*realMatrixPtr*/) { MatlabEngineError();  }
static double* (*mxGetPi)(const mxArray* /*matrixPtr*/);
static double* dummxGetPi(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static void (*mxSetPi)(mxArray* /*matrixPtr*/, double* /*imagMatrixPtr*/);
static void dummxSetPi(mxArray* /*matrixPtr*/, double* /*imagMatrixPtr*/) { MatlabEngineError();  }
static int (*mxGetNzmax)(const mxArray* /*matrixPtr*/);
static int dummxGetNzmax(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static void (*mxSetNzmax)(mxArray* /*matrixPtr*/, int /*numNonZeroElements*/);
static void dummxSetNzmax(mxArray* /*matrixPtr*/, int /*numNonZeroElements*/) { MatlabEngineError();  }
static int* (*mxGetIr)(const mxArray* /*matrixPtr*/);
static int* dummxGetIr(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static void (*mxSetIr)(mxArray* /*matrixPtr*/, int* /*sparseIndexArray*/);
static void dummxSetIr(mxArray* /*matrixPtr*/, int* /*sparseIndexArray*/) { MatlabEngineError();  }
static int* (*mxGetJc)(const mxArray* /*matrixPtr*/);
static int* dummxGetJc(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static void (*mxSetJc)(mxArray* /*matrixPtr*/, int* /*sparseIndexArray*/);
static void dummxSetJc(mxArray* /*matrixPtr*/, int* /*sparseIndexArray*/) { MatlabEngineError();  }
static int (*mxGetString)(const mxArray* /*matrixPtr*/, char* /*buffer*/, int /*bufferLength*/);
static int dummxGetString(const mxArray* /*matrixPtr*/, char* /*buffer*/, int /*bufferLength*/) { MatlabEngineError(); return 0; }
static mxArray* (*mxCreateString)(const char* /*string*/);
static mxArray* dummxCreateString(const char* /*string*/) { MatlabEngineError(); return 0; }
static double (*mxGetScalar)(const mxArray* /*matrixPtr*/);
static double dummxGetScalar(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static bool (*mxIsSparse)(const mxArray* /*matrixPtr*/);
static bool dummxIsSparse(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static bool (*mxIsDouble)(const mxArray* /*matrixPtr*/);
static bool dummxIsDouble(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static bool (*mxIsNumeric)(const mxArray* /*matrixPtr*/);
static bool dummxIsNumeric(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
static bool (*mxIsComplex)(const mxArray* /*matrixPtr*/);
static bool dummxIsComplex(const mxArray* /*matrixPtr*/) { MatlabEngineError(); return 0; }
