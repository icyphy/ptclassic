# Definition of abstract visualization state machine class
#
# @Author: Farhana Sheikh
#
# @Version: $Id$
#
# @Copyright (c) 1995-%Q% The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################


#######################################################################
#### VSM
# This abstract class defines a visualization state machine class that 
# other VSM classes will inherit from to translate data into graphical 
# annotations which then will be passed onto views that will display the 
# data appropriately.
#
# FIXME: Fill in the documentation here
#
# <p>
# Here is an example:
# <tcl><pre>
# tycho::VSM .vsm
# </pre></tcl>
#
class ::tycho::VSM {

    constructor {args} {}
    destructor {}

    ###################################################################
    ####                            options                        ####

    itk_option define -file file File ""

    ###################################################################
    ####                         public methods                    ####

    # methods to interpret textual data and generate appropriate
    # graphical annotations for display to render
    
    # Reset a VSM to initial state
    method reset {}


    # methods to generate and manipulate textual data from a given set 
    # of graphical annotations 

    ###################################################################
    ####                   private variables                       ####

    # name of file to interpret
    private variable filename ""

    # current state of VSM
    private variable state
}

#######################################################################
#### -file configuration
# Set the name of the file that is to be interpreted by VSM
#
configbody ::tycho::VSM::file {

    set filename $itk_option(-file)
}

#######################################################################
#### constructor
#
body ::tycho::VSM::constructor {args} {

    set state IDLE
    eval itk_initialize $args
}

#######################################################################
#### destructor
#
body ::tycho::VSM::destructor {} {
}

    ###################################################################
    ###################################################################
    ####                      public methods                       ####


#######################################################################
#### reset
# Reset a VSM to its initial state
#
body ::tycho::VSM::reset {} {

}

