##########################################################################
# Version: $Id$
# Author: John Reekie
#
# Copyright (c) 1996-1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#                                                         COPYRIGHTENDKEY
##########################################################################


##########################################################################
#### EditGraph
#
# _EditGraph_ is an editor for the _GraphLayout_ model. It edits
# directed graphs.
#
class ::tycho::EditGraph {
    inherit ::tycho::TCanvas

    constructor {args} {}
    destructor {}
    
    #################################################################
    ####                        options                          ####

    # The GraphLayout model
    itk_option define -model model Model {}
    
    #################################################################
    ####                     public methods                      ####

    # Add a tag to all indicated vertices and edges.
    method addtag {tag args}

    # Delete a tag from all items.
    method dtag {tag}

    # Call the model
    method model {method args}

    # Move an item
    method move {tag x y}

    # Start moving an item
    method moveclick {tag x y}

    # Continue moving an item
    method movedrag {tag x y}

    # Stop moving an item
    method moverelease {tag x y}

    # Reshape an item
    method reshape {name x y args}

    # Start reshaping an item
    method reshapeclick {name x y args}

    # Continue reshaping an item
    method reshapedrag {name x y args}

    # Stop reshaping an item
    method reshaperelease {name x y args}

    # Add a new vertex to the view
    method vertex {name coords args}

    # Configure a vertex
    method vertexconfigure {name args}

    # Return the vertices and edges with a given tag.
    method withtag {tag}

    #################################################################
    ####                  protected methods                      ####
    
    #################################################################
    ####                 protected variables                     ####
    
    # The mapping from vertex and edge names to item IDs
    protected variable _itemID

    # The mapping from item IDs to vertex and edge names
    protected variable _itemname

    #################################################################
    ####                   private methods                       ####

}

########################################################################
#### constructor
#
body ::tycho::EditGraph::constructor {args} {
    # Add to menus
    menubar addMenu Devel
    menubar command {New vertex} Devel \
	    -command "$this model vertex 100 100 -color green"

    # Evaluate options
    eval itk_initialize $args
}

########################################################################
#### model
#
# Call the model. Note that this always publishes the command to
# the model via Model::publish{}, so that all views _including
# this one_ are notified of the change.
#
body ::tycho::EditGraph::model {method args} {
    if { $itk_option(-model) !=  "" } {
	eval $itk_option(-model) publish $method $args
    }
}

########################################################################
#### addtag
#
# Add a tag to all indicated vertices and names.
#
body ::tycho::EditGraph::addtag {tag args} {
    foreach name $args {
	$slate addtag withtag $_itemID($name)
    }
    return $result
}

########################################################################
#### dtag
#
# Delete a tag from all items.
#
body ::tycho::EditGraph::dtag {tag} {
    $slate dtag $tag
}

########################################################################
#### move
#
body ::tycho::EditGraph::move {tag x y} {
    $slate move $tag $x $y
}

########################################################################
#### moveclick
#
body ::tycho::EditGraph::moveclick {tag x y} {
    $slate moveclick $tag $x $y
}

########################################################################
#### movedrag
#
body ::tycho::EditGraph::movedrag {tag x y} {
    $slate movedrag $tag $x $y
}

########################################################################
#### moverelease
#
body ::tycho::EditGraph::moverelease {tag x y} {
    $slate moverelease $tag $x $y
}

########################################################################
#### reshape
#
body ::tycho::EditGraph::reshape {name x y args} {
    eval $slate reshape $name $x $y $args
}

########################################################################
#### reshapeclick
#
body ::tycho::EditGraph::reshapeclick {name x y args} {
    eval $slate reshapeclick $name $x $y $args
}

########################################################################
#### reshapedrag
#
body ::tycho::EditGraph::reshapedrag {name x y args} {
    eval $slate reshapedrag $name $x $y $args
}

########################################################################
#### reshaperelease
#
body ::tycho::EditGraph::reshaperelease {name x y args} {
    eval $slate reshaperelease $name $x $y $args
}

########################################################################
#### vertex
#
# Add a new vertex to the view. This method must be called only
# by the model.
#
body ::tycho::EditGraph::vertex {name coords args} {
    set id [eval $slate create KeyedVertex $coords $args]
    set _itemID($name) $id
    set _itemname($id) $name
}

########################################################################
#### vertexconfigure
#
# Configure a vertex. This method must be called only
# by the model.
#
body ::tycho::EditGraph::vertexconfigure {name args} {
    eval $slate itemconfigure $_itemID($name) $args
}

########################################################################
#### withtag
#
# Return the vertice and edges with a given tag.
#
body ::tycho::EditGraph::withtag {tag} {
    set result {}
    foreach id [$slate find withtag $tag] {
	lappend result $_itemname($id)
    }
    return $result
}
