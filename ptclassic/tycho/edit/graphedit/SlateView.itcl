##########################################################################
# Version: $Id$
# Author: John Reekie
#
# @Copyright (c) 1996-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
##########################################################################

##########################################################################
#### SlateView
#
# _SlateView_ is a view that contains a Slate. It provides an interface
# between Slates and Layout models.
#
class ::tycho::SlateView {
    inherit ::tycho::File

    constructor {args} {}
    destructor {}
    
    #################################################################
    ####                        options                          ####

    # The layout model
    public variable layout ""
    
    #################################################################
    ####                     public methods                      ####

    # Set or get the coordinates of an item
    method coords {name args}

    # Load items from the model into the slate
    method load {layout {item {}}}

    # Find items.
    method find {mode args}

    # Get the id of an item given its name
    method id {name}

    # Get or set the name of an item given its id
    method name {id}

    # Handle change notification from the layout model
    method notify {method args}

    #################################################################
    ####                  protected methods                      ####

    # Add a new item
    method _add {name args}

    # Add a tag to all indicated items.
    method _addtag {tag args}

    # Set or get the coordinates of an item
    method _coords {name args}

    # Clear data from this editor
    method _clear {}

    # Delete an item
    method _delete {name}

    # Delete a tag from all items.
    method _dtag {tag {delete {}}}

    # Configure an item
    method _itemconfigure {name args}
    
    # Move an item
    method _move {tag x y}

    # Start moving an item
    method _moveclick {tag x y args}

    # Continue moving an item
    method _movedrag {tag x y}

    # Stop moving an item
    method _moverelease {tag}

    # Reshape an item
    method _reshape {name x y args}

    # Start reshaping an item
    method _reshapeclick {name x y args}

    # Continue reshaping an item
    method _reshapedrag {name x y}

    # Stop reshaping an item
    method _reshaperelease {name}

    # Manipulate the the selection
    method _selection {mode {name {}}}

    #################################################################
    ####                  protected variables                    ####
    
    # The slate
    protected variable slate

    #################################################################
    ####                   private variables                     ####
    
    # The mapping from item names to item IDs
    private variable _itemid

    # The mapping from item IDs to item names
    private variable _nameof
}

########################################################################
#### constructor
#
body ::tycho::SlateView::constructor {args} {
    # Create a slate
    itk_component add slate {
        uplevel #0 ::tycho::slate $itk_interior.slate
    } {
        keep -cursor
        rename -background -canvascolor canvasColor CanvasColor
        rename -height -canvasheight canvasHeight CanvasHeight
        rename -width -canvaswidth canvasWidth CanvasWidth
    }
    set slate $itk_component(slate)
    pack $slate -expand yes -fill both -side left

    # Evaluate options
    eval configure $args
}

########################################################################
#### coords
#
# Set or get coordinates of an item.
#
body ::tycho::SlateView::coords {name args} {
    eval $slate coords $_itemid($name) $args
}

########################################################################
#### id
#
# Return the slate id of an item given its name. If the id is unknown,
# return the argument on the assumption that it's a valid canvas
# tag.
#
body ::tycho::SlateView::id {name} {
    if [::info exists _itemid($name)] {
        return $_itemid($name)
    } else {
        return $name
    }
}

########################################################################
#### load
#
# Load items from a layout model into the slate.
#
body ::tycho::SlateView::load {layout {item {}}} {
	if { $item != "" } {
		_add $item [$layout itemcget $item]
	}
	foreach i [$layout listing item $item] {
		load $layout $i
	}
}

########################################################################
#### name
#
# Get the name of an item from its slate id.
#
body ::tycho::SlateView::name {id} {
	return $_itemid($name)
}

########################################################################
#### notify
#
# Notify on a change to the layout model. This method simply
# prepends an underscore to the command name and evaluates the
# protected method with that name.
#
body ::tycho::SlateView::notify {method args} {
    eval _$method $args
}

#####################################################################
#####################################################################
####                     protected methods                       ####

########################################################################
#### _add
#
# Add a new item to the view.
#
body ::tycho::SlateView::_add {name args} {
    array set opts $args
    set type $opts(-type)
    set coords $opts(-coords)
    unset opts(-type)
    unset opts(-coords)
    set args [array get opts]

    if { [llength $name] == 1 } {
	# Root item
	set id [eval $slate create $type $coords $args]
    	set _itemid($name) $id
    	set _nameof($id) $name
    } else {
	set parent $_itemid([lreplace $name end end])
	set id [eval $slate createrootchild $parent $type $coords $args]
	set _itemid($name) $id
	set _nameof($id) $name
    }
}

########################################################################
#### _addtag
#
# Add a tag to all indicated vertices and names.
#
body ::tycho::SlateView::_addtag {tag args} {
    foreach name $args {
	$slate addtag $tag withtag $_itemid($name)
    }
}

########################################################################
#### _clear
#
# Clear all items from the slate.
#
body ::tycho::SlateView::_clear {} {
    catch {unset _itemid}
    catch {unset _nameof}
    $slate delete all
}

########################################################################
#### _coords
#
# Set coordinates of an item.
#
body ::tycho::SlateView::_coords {name args} {
    eval $slate coords $_itemid($name) $args
}

########################################################################
#### _delete
#
# Delete an item.
#
body ::tycho::SlateView::_delete {name} {
    $slate delete $_itemid($name)
    unset _nameof(_itemid($name))
    unset _itemid($name)
}

########################################################################
#### _dtag
#
# Delete a tag from all items.
#
body ::tycho::SlateView::_dtag {tag {delete {}}} {
    eval $slate dtag $tag $delete
}

########################################################################
#### _itemconfigure
#
# Configure an item.
#
body ::tycho::SlateView::_itemconfigure {name args} {
	array set opts $args
	if [::info exists opts(-coords)] {
		eval $slate coords $_itemid($name) $opts(-coords)
		unset opts(-coords)
		set args [array get opts]
	}
    eval $slate itemconfigure $_itemid($name) $args
}

########################################################################
#### _move
#
body ::tycho::SlateView::_move {tag x y} {
    if { [::info exists _itemid($tag)] } {
        $slate move $_itemid($tag) $x $y
    } else {
        $slate move $tag $x $y
    }
}

########################################################################
#### _moveclick
#
body ::tycho::SlateView::_moveclick {tag x y} {
    if { [::info exists _itemid($tag)] } {
        eval $slate moveclick $_itemid($tag) $x $y
    } else {
        eval $slate moveclick $tag $x $y
    }
}

########################################################################
#### _movedrag
#
body ::tycho::SlateView::_movedrag {tag x y} {
    if { [::info exists _itemid($tag)] } {
        $slate movedrag $_itemid($tag) $x $y
    } else {
        $slate movedrag $tag $x $y
    }
}

########################################################################
#### _moverelease
#
body ::tycho::SlateView::_moverelease {tag} {
    if { [::info exists _itemid($tag)] } {
        $slate moverelease $_itemid($tag)
    } else {
        $slate moverelease $tag
    }
}

########################################################################
#### _reshape
#
body ::tycho::SlateView::_reshape {name x y args} {
    eval $slate reshape $_itemid($name) $x $y $args
}

########################################################################
#### _reshapeclick
#
body ::tycho::SlateView::_reshapeclick {name x y args} {
    eval $slate reshapeclick $_itemid($name) $x $y $args
}

########################################################################
#### _reshapedrag
#
body ::tycho::SlateView::_reshapedrag {name x y} {
    $slate reshapedrag $_itemid($name) $x $y
}

########################################################################
#### _reshaperelease
#
body ::tycho::SlateView::_reshaperelease {name} {
    $slate reshaperelease $_itemid($name)
}

########################################################################
#### _selection
#
# Manipulate the selection.
#
body ::tycho::SlateView::_selection {mode {name {}}} {
    switch -exact $mode {
    	"add" {
	    $slate selection add $_itemid($name)
    	}
    	"remove" {
	    $slate selection add $_itemid($name)
    	}
    	"clear" {
	    $slate selection clear
    	}
    }
}

########################################################################
#### find
#
# Find items.
#
body ::tycho::SlateView::find {mode tag} {
    set result {}
    foreach id [$slate find $mode $tag] {
	lappend result $_nameof($id)
    }
    return $result
}
