##########################################################################
# Version: $Id$
# Author: John Reekie
#
# @Copyright (c) 1996-1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
##########################################################################


##########################################################################
#### StarLibrary
#
# <b>This class is under development.</b>
#
# A _StarLibrary_ is a model containing a collection of "stars"
# (in the Ptolemy sense).
#
# This model has the following types:
# <dl>
# <dt><b>star</b> _name_
# <dd>
# A description of a star.
#
# <dt><b>port</b> _port_
# <dd>
# A port of a star.
#
# </dl>
#
# Here is an example of a star library model:
# <pre><tcl>
#     catch {delete object $lib}
#     set lib [::tycho::StarLibrary [::tycho::autoName library]]
#     $lib parse {
#          group sdf -label {SDF Stars} {
#              star Ramp &#92
#                      -label {Ramp} &#92
#                      -icon {icons.tim#sdf.Ramp} {
#                  attribute step -default 1.0 -type number -label step
#                  attribute value -default 0.0 -type number -label value
#                  port out -composite 0 -datatype float
#              }
#              star Printer &#92
#                      -label {Printer} &#92
#                      -icon {icons.tim#sdf.Printer} {
#                  attribute fileName -default "<stdout>" -label fileName
#                  port in -composite 0 -datatype float
#              }
#              star Xgraph &#92
#                      -label {Xgraph} {
#                  port in -composite 0 -datatype float
#              }
#          }
#      }
#     $lib describe
# </tcl></pre>
#
# Create a menubar and add this library to it:
# <tcl quiet><pre>
#    proc select {library item} {
#        ::tycho::inform "item $item: [$library describe $item]"
#    }
#    catch {delete object .mb}
#    ::tycho::MenuBar .mb
#    pack .mb
#    raise .
#    wm deiconify .
#    .mb addMenu foo -label Foo
#    $lib makemenu star .mb foo "select $lib"
# </pre></tcl>
#
# Create an editing widget on the star.
# <tcl quiet><pre>
#    $lib edit sample.Add "::tycho::inform \[$lib describe\]"
# </pre></tcl>
#
class ::tycho::StarLibrary {
    inherit ::tycho::Library

    constructor {args} {}
    destructor {}
    
    #################################################################
    ####                        options                          ####


    #################################################################
    ####                     public methods                      ####
   
    # Add a star
    method star {name args}
}

########################################################################
#### constructor
#
body ::tycho::StarLibrary::constructor {args} {
    # Evaluate options
    eval configure $args

    # The star entity type
    type define star

    # The port entity type
    type define port
}

########################################################################
#### star
#
# Add a new star. Flag an error if the star already exists.
# Additional arguments are the initial values
# of item attributes. Return the undo command.
#
body ::tycho::StarLibrary::star {name args} {
    error "Not implemented"
}
