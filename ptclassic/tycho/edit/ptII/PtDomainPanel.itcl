##########################################################################
# Version: $Id$
# Author: John Reekie
#
# @Copyright (c) 1996-1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
##########################################################################

##########################################################################
#### PtDomainPanel
#
# Panel to select domain and director
#
class ::tycho::PtDomainPanel {
    inherit ::tycho::PtRunPanel

    constructor {args} {}
    destructor {}

    #################################################################
    ####                        options                          ####

    # The domain library being used. Must be set in the constructor
    public variable domainLibrary

    # The simulation object. Must be set in the constructor
    public variable simulation

    # A callback for when the domain is changed
    public variable domainCallback ""

    # A callback for when the domain is changed
    public variable directorCallback ""

     #################################################################
    ####                     public methods                      ####

    # Get the selected director
    method getDirector {} 

    # Get the selected domain
    method getDomain {}

    # Set the domain. Mainly useful for initialization
    method setDomain {domain}
    
    # Notify that a director has been selected
    method _selectDirector {director}
    
    # Notify that a domain has been selected
    method _selectDomain {}
    
    #################################################################
    ####                 private variables                       ####


}

########################################################################
#### constructor
#
body ::tycho::PtDomainPanel::constructor {args} {

    # Initialize options
    eval itk_initialize $args

    # Create the widget containing the parameters
    itk_component add main {
	::tycho::LabeledGrid $itk_interior.main \
		-labelforeground blue
    } {
	keep -background -cursor -font
    }
    pack $itk_component(main) -expand yes

    # Add the main parameters to it. Give it a nice bounding box
    $itk_component(main) group main \
	    -rowspan 4 \
	    -columnspan 2 \
	    -style boxed \
	    -childstyle simple \
	    -label "Execution"

    set domains [$domainLibrary domains]
    $itk_component(main) add optionmenu main.domain \
	    -label "Domain" \
	    -entries $domains \
	    -width 14 \
	    -initial [lindex $domains 0] \
	    -command "$this _selectDomain"

    $itk_component(main) add optionmenu main.director \
	    -label "Director"

    # Update the director
    _selectDomain
}

########################################################################
#### getDirector
#
# Get the current director
#
body ::tycho::PtDomainPanel::getDirector {} {
    # puts !![$itk_component(main) get main.director]
    return [$itk_component(main) get main.director]
}

########################################################################
#### getDomain
#
# Get the current domain
#
body ::tycho::PtDomainPanel::getDomain {} {
    # puts !![$itk_component(main) get main.domain]
    return [$itk_component(main) get main.domain]
}


########################################################################
#### _selectDomain
#
# Notify that the domain has been selected
#
body ::tycho::PtDomainPanel::_selectDomain {} {
    set domain [$itk_component(main) get main.domain]
    # puts "Selected domain $domain"

    # Tell the simulation
    $simulation setDomain $domain
    if { $domainCallback != "" } {
	uplevel #0 $domainCallback
    }

    # Screw around with the director option menu
    set menu [[$itk_component(main) component main.director] cget -menu]
    if { [$menu index last] != "none" } {
	# Remove entries
	for {set i [$menu index last]} {$i >= 0} {incr i -1} {
	    $menu delete $i
	}
    }
    # Add new entries
    set directors [$domainLibrary directors $domain]
    foreach d $directors {
	set name [$d getAttribute "name"]
	$menu add command \
		-label $name \
		-command [list $this _selectDirector $name]
    }
    # Initialize with the first director on the list
    _selectDirector [[lindex $directors 0] getAttribute "name"]
}

########################################################################
#### _selectDirector
#
# Notify that a director has been selected
#
body ::tycho::PtDomainPanel::_selectDirector {director} {
    # set director [$itk_component(main) get main.director]
    # puts "Selected director $director"

    # This method is rather different than the last one, as here
    # we have to update the option menu. This is because the
    # LabeledGrid widget does not provide us with a way to
    # change the entries in the option menus
    if { [$itk_component(main) get main.director] != $director } {
	$itk_component(main) assign main.director $director
    }

    # Now tell the simulation
    # $simulation setDirector $director
    if { $directorCallback != "" } {
	uplevel #0 $directorCallback
    }
}
