##########################################################################
# Definition of Axis object for the slate
#
# @Author: Farhana Sheikh, John Reekie
#
# @Version: $Id$
#
# Copyright (c) %Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
##########################################################################


########################################################################
#### Axis
#
# An axis for graphs and stuff.
#
# This class defines an axis object that can be used when creating
# graphs, tables, and other such things.
# The user must give the x and y coordinates (in pixels) of the 
# ruler base for positioning on the slate.  Options include specifying 
# the length of the axis in pixels, the number of significant
# digits to use in labelling the axis, the labelling style (ie whether
# every increment should be labelled, or just the end points or no
# labels), orientation of the axis (horizontal or vertical), and the
# length of the tick marks in pixels.  The beginning and end of the 
# axis can also be specified using the -from and -to options. 
#
# FIXME: Needs lots more features. (We're working on it...)
# 
# <p>
# Here is an example on how to use it:
# <tcl><pre>
# ::tycho::slate .s
# pack .s
# # Create the axis
# set axis [.s create Axis 50 50 -length 100 -from 0.0 -to 100 -digits 1]
# # Move the axis
# $axis coords 10 100
# # Change the length
# $axis configure -length 50
#
class ::tycho::Axis {
    inherit ::tycho::Picture

    proc construct {id tags canvas x0 y0 args}
    proc destruct  {id canvas}


    ###################################################################
    ####                            options                        ####

    # The number of significant digits to display
    common digits

    # The low value on the axis
    common from

    # The length of the axis in pixels.
    common length

    # The length of the tick marks in pixels
    common ticklength

    # The high value on the axis
    common to


    ###################################################################
    ####                         public procs                      ####

    # Get or set the (base) coordinates of the axis.
    proc coords {id canvas args}

    # Option update
    proc digits {id canvas val} {
	set digits($id) $val
	redraw $id $canvas
    }

    proc from {id canvas val} {
	set from($id) $val
	redraw $id $canvas
    }

    proc length {id canvas val} {
	set length($id) $val
	redraw $id $canvas
    }

    proc ticklength {id canvas val} {
	set ticklength($id) $val
	redraw $id $canvas
    }

    proc to {id canvas val} {
	set to($id) $val
	redraw $id $canvas
    }

    ###################################################################
    ####                         protected variables               ####

    # The font to use for the tick labels
    protected common tickfont

    # The rule baseline
    protected common baseline

    ###################################################################
    ####                         private procs                     ####
  
    # Redraw myself
    private proc redraw {id canvas}

    # Redraw the ticks and labels on the axis. Requires the base coordinate.
    private proc redrawTicks {id canvas x0 y0}

}

array set Axis [array get Picture]

set Axis(coords) ::tycho::Axis::coords


#######################################################################
#### construct
#
body ::tycho::Axis::construct {id tags canvas x0 y0 args} {
    # Initialize the options
    set defaultoptions {-digits 0 -length 200 -from 0 -ticklength 6 -to 100}

    foreach {option value} [concat $defaultoptions $args] {
	set [string trimleft $option -]($id) $value
    }

    # Get and remember the font for the ticks
    if { ! [::info exists tickfont] } {
	set tickfont [.tychoFonts findFont {helvetica 9 medium r}]
    }

    # Create the ruler baseline
    set baseline($id) [$canvas create line \
	    $x0 $y0 [expr $x0+$length($id)] $y0 \
	    -tags $tags]

    # Draw the ticks and the labels
    redrawTicks $id $canvas $x0 $y0
}


#######################################################################
#### coords
# Get or set the (base) coordinates of the axis.
#
body ::tycho::Axis::coords {id canvas args} {

    # If no arguments specified then we return the current 
    # coordinates of the base of the axis otherwise move
    # the axis to the new coordinates
    if { $args == "" } {
	return [lrange [$canvas coords $baseline($id)] 0 1]
    } else {
	assign x y [$canvas coords $baseline($id)]
	assign a b $args

	# Do the move. FIXME: should this call the slate?
	$canvas move $id [expr $a - $x] [expr $b - $y]
    }
}


########################################################################
#### redraw
# Redraw myself
#
body ::tycho::Axis::redraw {id canvas} {
  
    # Get the base coordinates
    assign x0 y0 [$canvas coords $baseline($id)]
    
    # Redraw ticks and labels
    redrawTicks $id $canvas $x0 $y0
    
    # Move the baseline
    $canvas coords $baseline($id) $x0 $y0 [expr $x0+$length($id)] $y0
}

#######################################################################
#### redrawTicks
# Redraw the ticks and the labels. Requires the base coordinate.
#
body ::tycho::Axis::redrawTicks {id canvas x0 y0} {

    # Test the range -- assume that if -from is not less than -to, that
    # this is temporary and will be fixed by the next option.
    if { $from($id) >= $to($id) } {
	return
    }

    # Get the unique tags
    set tags [$canvas gettags $baseline($id)]

    # Delete the ticks and labels
    $canvas delete $id.tick $id.label
    
    # Find label width -- HACK!
    set t [$canvas create text 0 0 -text [format %.$digits($id)f $from($id)]]
    set labelwidth [::rectWidth [$canvas bbox $t]]
    $canvas delete $t

    # Calculate axis increment locations
    set increment [::axisIncrement $from($id) $to($id) $length($id) \
	    $labelwidth 10]
    set axisValues [::rangeValues $from($id) $to($id) $increment]
    set axisLocations [::mapRange $from($id) $to($id) $axisValues \
	    $x0 [expr $x0 + $length($id)]]

    # Create the tick lines and text labels
    set ticktags [concat $tags $id.tick]
    set labeltags [concat $tags $id.label]

    foreach x $axisLocations v $axisValues {
	$canvas create line $x $y0 $x [expr $y0-$ticklength($id)] \
		-tags $ticktags
	$canvas create text $x [expr $y0-$ticklength($id)] \
 		-text [format %.$digits($id)f $v] \
 		-font $tickfont -anchor sw \
		-tags $labeltags
    }
}



