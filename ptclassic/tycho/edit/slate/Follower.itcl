##########################################################################
# Version: $Id$
# Author: H. John Reekie
#
# Copyright (c) %Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#                                                         COPYRIGHTENDKEY
##########################################################################


## Follower
#
# The simplest interactor: follow the mouse.
#
class ::tycho::Follower {
    inherit ::tycho::Interactor

    ## constructor
    #
    constructor {{s {}} {c {}} args} {
	set slate $s
	set canvas $c

	eval configure $args
    }


    ###################################################################
    ####                         public methods                    ####

    # Bind the interactor to a picture or tag
    method bind {t args} {}

    ## Remove the binding of an interactor to a picture or tag
    method unbind {t} {}


    ###################################################################
    ####                        protected methods                  ####

    # Attach the interactor to the current picture
    protected method activate {t x y} {}

    # Remove the interactor from the current picture
    protected method deactivate {} {}
}


## activate target x y
#
body ::tycho::Follower::activate {t x y} {

    # Remember the tag/object, for use in deactivate
    set tag $t

    # Set the target. The client can modify its options later
    # with -activatecommand if desired. If the target argument is
    # in fact a tag, get the current picture from the slate.
    if { [isObject $t] } {
	target $t
    } else {
	target [current]

	#
	# It is possible with the Tk canvas (version 4.0 to click on
	# an item, and, by the time the canvas is asked for the current
	# item, for that to become void. (Don't ask me why this happens,
	# I just know that it does.) To work around this, check whether
	# the target is null, and if it is, just return.
	#
	# if { $target == "" } {
	#		return
	# }
    }

    # Set up the bindings. Note: the bindings are set to the tag,
    # not to the current object.
    foreach b $button {
	$slate bind $tag \
		[eventcode Motion -button $b ] \
		[list @scope [info class] "$this drag %x %y; update idletasks"]
	$slate bind $tag \
		[eventcode Release -button $b ] \
		[list @scope [info class] "$this release; $this deactivate"]
    }

    # If there's a proxy, tell it about the current target
    if { $proxy != "" } {
	$proxy target $target
    }

    # Execute the user-specified activation command
    execute $activatecommand $x $y

    # Start the interaction sequence
    click $x $y
}


## bind target
#
body ::tycho::Follower::bind {t args} {
    foreach b $button {
	$slate bind $t \
		[eventcode Press -button $b ] \
		[list @scope [info class] "$this activate $t %x %y"]
    }
}


## deactivate
#
body ::tycho::Follower::deactivate {} {
    # Remove bindings from the current tag
    foreach b $button {
	$slate bind $tag \
		[eventcode Motion -button $b] {}
	$slate bind $tag \
		[eventcode Release -button $b] {}
    }

    # Execute the user-specified de-activation command
    if { $deactivatecommand != "" } {
	uplevel #0 apply [list $deactivatecommand] $target
    }
}

## unbind target
#
body ::tycho::Follower::unbind {t} {
    foreach b $button {
	$slate bind $t \
		[eventcode Press -button $b] {}
    }
}
