##########################################################################
# Version: $Id$
# Author: H. John Reekie
#
# Copyright (c) %Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#                                                         COPYRIGHTENDKEY
##########################################################################


## Follower
#
# The simplest interactor: behaviour follow the mouse.
#
class ::tycho::Follower {
    inherit ::tycho::Interactor

    #####
    #
    public variable tag ""


    ## constructor
    #
    constructor {{s {}} {c {}} args} {
	set slate $s
	set canvas $c

	eval configure $args
    }


    ## bind target
    #
    method bind {t args} {
	$slate bind $t \
		[eventcode Press -button $button ] \
		"$this activate $t %x %y"
    }


    ## unbind target
    #
    method unbind {t} {
	$slate bind $t \
		[eventcode Press -button $button ] {}
    }


    ## activate target x y
    #
    method activate {t x y} {

	#
	# Set the target. The client can modify its options later
	# with -activatecommand if desired. If the target argument is
	# in fact a tag, get the current picture from the slate.
	#
	if { [isObject $t] } {
	    set tag $t
	    configure -target $t
	} else {
	    set tag $t
	    configure -target [$slate find withtag current]

	    #
	    # It is possible with the Tk canvas (version 4.0 to click on
	    # an item, and, by the time the canvas is asked for the current
	    # item, for that to become void. (Don't ask me why this happens,
	    # I just know that it does.) To work around this, check whether
	    # the target is null, and if it is, just return.
	    #
	    if { $target == "" } {
		return
	    }
	}

	#
	# Set up the bindings. Note: the bindings are set to the tag,
	# not to the target object.
	# 
	$slate bind $tag \
		[eventcode Motion -button $button ] \
		"$this drag %x %y; update idletasks"

	$slate bind $tag \
		[eventcode Release -button $button ] \
		"$this release; $this deactivate"

	#
	# Execute the user-specified activation command
	#
	if { $activatecommand != "" } {
	    uplevel #0 $activatecommand
	}

	#
	# Start the interaction sequence
	#
	click $x $y
    }


    ## deactivate
    #
    method deactivate {} {
	$slate bind $tag \
		[eventcode Motion  -button $button ] {}
	$slate bind $tag \
		[eventcode Release -button $button ] {}

	set tag ""
	set target ""

	#
	# Execute the user-specified de-activation command
	#
	if { $deactivatecommand != "" } {
	    uplevel #0 $deactivatecommand
	}
    }
}
