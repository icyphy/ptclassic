#########################################################################
# @Version: $Id$
# @Author: John Reekie
#
# @Copyright (c) 1996 The Regents of the University of California.
# All rights reserved.
#  
# Permission is	hereby granted,	without	written	agreement and without
# license or royalty fees, to use, copy, modify, and distribute	this
# software and its documentation for any purpose, provided that	the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO	EVENT SHALL THE	UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT,	SPECIAL, INCIDENTAL, OR	CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN	ADVISED	OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES	OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.	THE SOFTWARE
# PROVIDED HEREUNDER IS	ON AN "AS IS" BASIS, AND THE UNIVERSITY	OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT,	UPDATES,
# ENHANCEMENTS,	OR MODIFICATIONS.
#							  COPYRIGHTENDKEY
##########################################################################

# Explicitly load the superclass. I don't really know why this is
# needed, but the common arrays get upset otherwise.
namespace ::tycho {
    if { [::info classes Picture] == "" } {
        uplevel #0 {source $tychoslate/Picture.itcl}
    }
}

##########################################################################
## LabelledItem
#
# An item with a label attached to it, and optional graphics drawn in it.
# This class is the abstract superclass of the LabelledOval, 
# LabelledRect, and LabelledFrame items.
#
# <p><b>Options</b>
#
# <dl>
# <dt><dd>
# <dl>
# <dt><b>-anchor</b>
# <dd>The anchor position of the text label relative to the region
# occupied by the item. The anchor can be any of the compass points --
# <i>n</i>, <i>s</i>, <i>e</i>, <i>w</i>, <i>ne</i>, <i>se</i>,
# <i>nw</i>, <i>sw</i> -- and <i>c</i> or <i>center</i>. If it is
# <i>c</i> or <i>center</i> and there are graphics drawn on the item,
# the label is drawn underneath the item (as though the anchor was
# <i>s</i>).
#
# <dt><b>-graphics</b>
# <dd>The graphics to draw on the item. This option consists of zero or
# more item specs, where an item spec is the item type, coordinates, and
# options. The coordinates are specified as a percentage of the item
# size. Item specs are separates by newlines or semi-colons.
#
# <dt><b>-text</b>
# <dd>The label of the item. If there are graphics also displayed, the
# label is placed outside the item; if not, the label is displayed
# outside the item.  By default, this option is "", which means that
# nothing is displayed.
#
# </dl></dl>
#
# <p><b>Bugs</b>: (none)
#
# <p><b>Enhancements</b>: (none)
#
# <p><b>Links</b>
# 
# <ul>
# <li><a href="../internals/howtoread.html">Reading <i>ComplexItem</i>
# documentation</a>.
# <li><a href="../internals/items.html">Complex item classes</a>.
# </ul>
#
class ::tycho::LabelledItem {
    inherit ::tycho::Picture

    ###################################################################
    ####                            options                        ####

    # The anchor position of the label. Defaults to center
    common _anchor

    # The graphics to draw on the item
    common _graphics

    # The text in the label
    common _text

    ###################################################################
    ####                     option update procs                   ####

    # Update the *-anchor* option
    proc _anchor {id canvas slate anchor}
    
    # Update the *-graphics* option
    proc _graphics {id canvas slate graphics}

    # Update the *-text* option
    proc _text {id canvas slate text}

    ###################################################################
    ####                         protected variables               ####

    # The item with the text label
    common textitem

    # The virtual "method" table
    common methodtable

    # Default values of this item's options
    common optiondefault

    ###################################################################
    ####                       class initialization                ####

    #### Set method table
    array set methodtable [array get ::tycho::Picture::methodtable]

    set methodtable(_anchor)   ::tycho::LabelledItem::_anchor
    set methodtable(_graphics) ::tycho::LabelledItem::_graphics
    set methodtable(_text)     ::tycho::LabelledItem::_text

    #### Set option defaults
    array set optiondefault [array get ::tycho::Picture::optiondefault]

    set optiondefault(-anchor)		"center"
    set optiondefault(-graphics)	""
    set optiondefault(-text)		""
}

##########################################################################
## -anchor option configuration
#
body ::tycho::LabelledItem::_anchor {id canvas slate anchor} {
    set _anchor($id) $anchor
    
    # If there are no graphics, place inside the item, else place
    # outside the item
    if { $_text($id) != "" } {
        eval $canvas coords $textitem($id) [$slate aspect $id $anchor]
        if { $_graphics($id) == "" } {
            $canvas itemconfigure $textitem($id) -anchor $anchor
        } else {
            if { $anchor == "center" || $anchor == "c" } {
                set anchor "s"
                eval $canvas coords $textitem($id) [$slate aspect $id s]
            }
            $canvas itemconfigure $textitem($id) \
                    -anchor [::tycho::Shape::compass $anchor "ud"]
        }
    }
}

##########################################################################
## -graphics option configuration
#
# Draw the specified items specified using coordinates in
# percent of the parent item's size. <i>Do not specify tags.</i>
#
body ::tycho::LabelledItem::_graphics {id canvas slate graphics} {
    set _graphics($id) $graphics
    $slate delete graphics.$id

    # If graphics are empty, do nothing
    if { $graphics == "" } {
        return
    }

    # Draw each item at full scale
    set tags [concat graphics.$id [$canvas gettags $primary($id)]]
    foreach item [split $graphics ";\n"] {    	
    	eval $slate create $item [list -tags $tags]
    }

    # Move and scale them to fit into this item
    assign x0 y0 x1 y1 [$slate coords $id]
    $slate move graphics.$id $x0 $y0
    $slate scale graphics.$id $x0 $y0 \
    		[expr ($x1-$x0)/100.0] \
    		[expr ($y1-$y0)/100.0]
    
    # Move the label outside the item if necessary
    if { $graphics != "" && $_text($id) != "" } {
    	 _anchor $id $canvas $slate $_anchor($id)
    }
}

##########################################################################
## -text option configuration
#
body ::tycho::LabelledItem::_text {id canvas slate text} {
    assign x0 y0 x1 y1 [$canvas coords $primary($id)]
    set tags [$canvas gettags $primary($id)]

    if { $text != "" } {
        if { $_text($id) == "" || ! [::info exists textitem($id)] } {
            set textitem($id) [$canvas create text \
                    [expr ($x0+$x1)/2] [expr ($y0+$y1)/2] \
                    -text $_text($id) -tags $tags]
            _anchor $id $canvas $slate $_anchor($id)
        }
        $canvas itemconfigure $textitem($id) -text $text
    } else {
        catch {$canvas delete $textitem($id)}
    }
    set _text($id) $text
}


