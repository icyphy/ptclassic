# Definition of an editor for editing source code in various languages.
#
# Author: Edward A. Lee
#
# Version: $Id$
#
# Copyright (c) 1990-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

#######################################################################
#### EditProgram
# This class defines a window that provides an emacs-like editor
# specialized for editing program files. It colorizes the code, identifying
# comments, automatically indents the code, and fills blocks of comments.
#
class ::tycho::EditProgram {
    inherit ::tycho::Edit

    ###################################################################
    ####                     public methods                        ####

    #### revert
    # Revert to previously saved version and recolorize.
    method revert {}

    constructor {args} {}
    destructor {}

    ###################################################################
    ####                  protected methods                        ####

    #### textWidget
    # Return the name of the type of text widget to use.
    method textWidget {} {return ::tycho::EditProgramText}
}

###################################################################
#
body ::tycho::EditProgram::constructor {args} {
    
    eval itk_initialize $args

    # Add to the format menu commands to comment and uncomment
    # the regions defined by the selection.
    $itk_component(formatMenu) add separator
    
    $itk_component(formatMenu) add command \
	    -label "Comment Out Region" \
	    -underline 0 \
	    -command "$itk_component(text) commentSelection"
    
    $itk_component(formatMenu) add command \
	    -label "Uncomment Region" \
	    -underline 0 \
	    -command "$itk_component(text) uncommentSelection"
    
    # Add to the format menu a command to recolorize.
    $itk_component(formatMenu) add separator
    
    $itk_component(formatMenu) add command \
	    -label "Recolorize" \
	    -underline 0 \
	    -command "$itk_component(text) parse"
    
    $itk_component(formatMenu) add command \
	    -label "Indent Line" \
	    -accelerator "Tab" \
	    -underline 0 \
	    -command "$itk_component(text) indentLine"
    
    $itk_component(formatMenu) add command \
	    -label "Indent Region" \
	    -accelerator "Esc C-\\" \
	    -underline 1 \
	    -command "$itk_component(text) indentSelection"
    
    $itk_component(formatMenu) add command \
	    -label "Tab" \
	    -accelerator "C-q Tab" \
	    -underline 0 \
	    -command "$itk_component(text) insertString insert {\t}"

    # Read contents from the specified file, unless the name is "NoName".
    # This needs to be repeated from the baseclass because the -file
    # option will not have been processed by the time the base class
    # constructor is executed.
    if {$file != {NoName}} {
	set savereadonly [$itk_component(text) cget -readonly]
	$itk_component(text) configure -readonly 0
	$itk_component(text) readFile $file
	markUnmodified
	$itk_component(text) configure -readonly $savereadonly
    }
}

#####################################################################
#### revert
# Override the base-class revert to recolorize.
#
body ::tycho::EditProgram::revert {} {
    Edit::revert
    $itk_component(text) parse
}

