# Definition of a Tcl context-sensitive editor.
#
# @Author: Edward A. Lee
#
# @Version: $Id$
#
# @Copyright (c) 1995-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

#######################################################################
#### EditTcl
# This class defines a window that provides an emacs-like editor
# specialized for editing Tcl files. It colorizes the code, identifying
# comments and procedure definitions, supports hyperlinks to procedures
# that can be auto-loaded, automatically indents the code, and fills
# blocks of comments.  It also provides a command for evaluating
# a region of Tcl code.
#
class ::tycho::EditTcl {
    inherit ::tycho::EditProgram

    ###################################################################
    ####                     public methods                        ####

    # Evaluate a region in the global context.
    method evaluate {}

    # Open a help window.
    method help {}

    constructor {args} {}
    destructor {}

    ###################################################################
    ####                  protected methods                        ####

    # Return the name of the type of text widget to use (EditTclText).
    protected method textWidget {} {return ::tycho::EditTclText}
}

###################################################################
#
body ::tycho::EditTcl::constructor {args} {
    
    eval itk_initialize $args
    
    # Add to the format menu a command to recolorize.
    $itk_component(formatMenu) add separator
        
    $itk_component(formatMenu) add command \
	    -label "Show Links" \
	    -underline 1 \
	    -command "$this component text busy tagLinks"
}

#####################################################################
#### evaluate
# Evaluate the contents of the text window as Tcl commands
# in the global context.  Return the result of the evaluation.
#
body ::tycho::EditTcl::evaluate {} {
    return [$itk_component(text) evaluate]
}

###################################################################
#### help
# Open a help window.
#
body ::tycho::EditTcl::help {} {
    global ::TYCHO
    ::tycho::File::openContext \
	    $TYCHO/editors/textedit/doc/usersGuides/EditTclHelp.html
}
