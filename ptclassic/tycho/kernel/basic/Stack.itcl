# A stack data structure.
#
# $Id$
# Authors: Edward A. Lee
#
# Copyright (c) 1990-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
##########################################################################

##########################################################################
#### Stack class.
# This is a simple stack data structure with methods to push and pop.
# Data stored on the stack is any arbitrary Tcl value.
#
class ::tycho::Stack {

    constructor {args} {}

    # Reinitialize the stack
    method clear {}

    # Pop data from the stack
    method pop {}

    # Push data onto the stack
    method push {value}

    # The list used to implement the stack.
    protected variable data {}
}

#####################################################################
#### constructor
#
body ::tycho::Stack::constructor {args} {}

#####################################################################
#### clear
# Clear the stack.
#
body ::tycho::Stack::clear {} {
    set data {}
}

#####################################################################
#### pop
# Pop the stack.  If there is nothing on the stack, return an
# empty string.
#
body ::tycho::Stack::pop {} {
    if {[llength $data] > 0} {
	set retval [lindex $data 0]
	set data [lreplace $data 0 0]
puts "$this: popping $retval"
	return $retval
    } {
	return {}
    }
}

#####################################################################
#### push
# Push the stack.
#
body ::tycho::Stack::push {value} {
    set data [linsert $data 0 $value]
puts "$this: pushing $value"
}
