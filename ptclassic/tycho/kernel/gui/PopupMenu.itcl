# Definition of a popup menu widget
# 
# @Author: John Reekie
#
# @Version: @(#)PopupMenu.itcl	1.11 06/29/98
# 
# @Copyright (c) 1995-1998 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################

#######################################################################
#### PopupMenu
# This class defines a popup menu widget. The method overrides
# those in the MenuSupport class so that, if no menu name is
# specified, "top" is used.
#
class ::tycho::PopupMenu {
    inherit ::tycho::MenuSupport

    constructor {args} {}
    destructor {}

    ###################################################################
    ####                            options                        ####

    # The command to call before posting the menu
    itk_option define -command command Command {}

    ###################################################################
    ####                         public methods                    ####

    # Add a menu entry to a menu
    method add {type tag  {inMenu {}} args}

    # Add a command menu entry to a menu
    method command {tag inMenu args}

    # Clear a menu
    method clear {{menu top}}

    # Get an option of a menu
    method menucget {menu {option {}}}

    # Set options of a menu
    method menuconfigure {menu args}

    # "Post" the popup
    method post {x y}

    # Add a separator to a menu
    method separator {tag {inMenu top}}
}


#######################################################################
#### constructor
#
body ::tycho::PopupMenu::constructor {args} {
    itk_component add top {
	menu $itk_interior.top -tearoff 0
    } {
	keep -font -activebackground -cursor -activeforeground \
		-background -foreground
    }

    # Record its "path"
    set _menupath(top) $itk_component(top)
    set _menuentries($itk_component(top)) {}
    set _tag($_menupath(top)) top

    eval itk_initialize $args
}

###################################################################
###################################################################
####                      public methods                       ####


#####################################################################
#### add
#
body ::tycho::PopupMenu::add {type tag {inMenu {}} args} {
    if { $inMenu == "" } {
        set inMenu "top"
    } elseif [string match {-*} $inMenu] {
	set args [linsert $args 0 $inMenu]
	set inMenu "top"
    }
    eval chain [list $type $tag $inMenu] $args
}

#####################################################################
#### clear
#
body ::tycho::PopupMenu::clear {{menu top}} {
    chain $menu
}

#####################################################################
#### command
#
body ::tycho::PopupMenu::command {tag inMenu args} {
    if [string match {-*} $inMenu] {
	set args [linsert $args 0 $inMenu]
	set inMenu "top"
    }
    eval chain [list $tag $inMenu] $args
}

#####################################################################
#### menucget
# Get a configuration option of a menu.
#
body ::tycho::PopupMenu::menucget {tag {option {}}} {
    if { $option == "" } {
	set option $tag
	set tag "top"
    }
    chain $tag $option
}

#####################################################################
#### menuconfigure
# Get or configure options of a menu.
#
body ::tycho::PopupMenu::menuconfigure {menu args} {
    if [string match {-*} $menu] {
	set args [linsert $args 0 $menu]
	set menu "top"
    }
    eval chain [list $menu] $args
}

#####################################################################
#### post
# Post the popup.
#
body ::tycho::PopupMenu::post {x y} {
    if { $itk_option(-command) != "" } {
	uplevel #0 $itk_option(-command)
    }
    tk_popup $itk_component(top) $x $y
}

#####################################################################
#### separator
#
body ::tycho::PopupMenu::separator {tag {inMenu top}} {
    chain $tag $inMenu
}
