##########################################################################
# Definition of the abstract view class
# 
# Author: Farhana Sheikh
# Version: $Id$
# 
# Copyright (c)  The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
#                                                COPYRIGHTENDKEY

# KNOWN BUGS:
#

if {[info class ::tycho::View] != ""} {
    delete class ::tycho::View
}

##########################################################################
#### View
# This class defines a View mega-widget that all graphical and textual
# displays can inherit from.  The View can contain multiple subviews and
# the View class provides methods to manage these views.  Thus we
# can embed a number of different representations of data in a single 
# window.  This is only an abstract class.
#
# FIXME: Fill in the documentation here
#
# A Help menu contains pointers to key Tycho documentation
# <p>
# Here is an example:
# <tcl><pre>
# tycho::View .v
# pack .v
# wm deiconify .
# </pre></tcl>

class ::tycho::View {
    inherit itk::Widget

    constructor {args} {}
    destructor {}

    #####################################################################
    ####                         options                             ####
    
  
    #####################################################################
    ####                        public methods                       ####

    # methods to manipulate subviews
    public method addSubview {subviewName}
    public method removeSubview {subviewName}
    
    # methods to manipulate my menus in my displayer
    public method insertInDisplay {}
    public method addMyMenus {}
    public method enableMyMenus {}
    public method disableMyMenus {}


    #####################################################################
    ####                       private variables                     ####

    private variable mySubviewList {} 
    private variable myMenuList {}
    public variable myDisplayer
}

# ------------------------------------------------------------------
#                        CONSTRUCTOR
# ------------------------------------------------------------------
body ::tycho::View::constructor {args} {

    # Get displayer for view
    set myDisplayer [winfo parent $itk_component(hull)]
    eval itk_initialize $args
}

# ------------------------------------------------------------------
#                        DESTRUCTOR
# ------------------------------------------------------------------
body ::tycho::View::destructor {} {
}

# ------------------------------------------------------------------
#                             OPTIONS
# ------------------------------------------------------------------


# -------------------------------------------------------------------
#                        PUBLIC METHODS
# -------------------------------------------------------------------

# -------------------------------------------------------------------
# METHOD: addSubview
#
# ARGUMENTS:
# subviewName: name of the subview to add
#
# Adds a subview to the main view
# -------------------------------------------------------------------
body ::tycho::View::addSubview {subviewName} {
}

# -------------------------------------------------------------------
# METHOD: removeSubview
#
# ARGUMENTS:
# subviewName: name of the subview to remove
#
# Removes a subview from the main view
# -------------------------------------------------------------------
body ::tycho::View::removeSubview {subviewName} {
}

# -------------------------------------------------------------------
# METHOD: insertInDisplay
#
# Insert view in the display
# -------------------------------------------------------------------
body ::tycho::View::insertInDisplay {} {
    
   # insert the view into the displayer
   $myDisplayer setView $itk_component(hull)
}

# -------------------------------------------------------------------
# METHOD: addMyMenus {displayerName}
#
# Add menus specific to this view
# This method should be redefined for views that inherit from this class
# -------------------------------------------------------------------
body ::tycho::View::addMyMenus {} {

    # Derived classes should add appropriate menus and menu items here 
}
