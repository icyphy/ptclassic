# Run All the Tycho Tests
#
# @Author: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

# Automatically generated by tycho/makefile
set top $TYCHO

# Create a widget that will stop tycho from exiting"
set htmltestmsg [::tycho::htmlmessage "Running All Tests"]

set alltestslist [list \
	[file join kernel test alltests.itcl] \
	[file join editors textedit test alltests.itcl] \
	[file join editors visedit test alltests.itcl] \
	[file join editors slate test alltests.itcl]]

if { $ptolemyfeature(ptcl) || $ptolemyfeature(pitcl)} {
    puts "Ptolemy seems to be present, so we will run the Ptolemy tests"
    lappend alltestslist \
	    [file join typt kernel test alltests.itcl] \
	    [file join typt editors test alltests.itcl]
}
puts $alltestslist
cd $top
foreach alltest $alltestslist {
    puts "Now sourcing $alltest"
    cd [file join $top [file dirname $alltest]]
    if [catch {source [file tail $alltest]} errmsg] {
	puts $errmsg
	doneTests
    }
}

$htmltestmsg invoke ok

if {![info exists reallyExit]} {set reallyExit 1}
doneTests
