# Test suite for RevControl
#
# @Author: Christopher Hylands
#
# @Version: @(#)testRevControl.itcl	1.14 03/16/98
#
# @Copyright (c) 1996-1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

# Make sure that the required packages are loaded
package require tycho.util.tytest
package require tycho.kernel.gui

proc testRevControl {versionControlSystem} {
    if { "$versionControlSystem" == "SCCS" } {
	set testdir sccstst
	set testfile [file join $testdir sccs.itcl]
    } else {
	set testdir rcstst
	set testfile [file join $testdir rcs.itcl]
    }
    file delete -force $testdir
    file mkdir $testdir
    set fd [open $testfile w]
    puts $fd "# This is a test file for the Tycho $versionControlSystem system"
    # Generate percentWpercent so that SCCS does not munge this for us
    # when we check in the file.
    puts $fd [format "# Version: %sW%s %sG%s" % % % %]
    puts $fd [format "# Copyright: %sQ%s" % %]

    close $fd

    #set wname [::tycho::autoName .view]
    #::tycho::Displayer $wname
    set myEditView [::tycho::view Edit -file $testfile]
    #$wname centerOnScreen
    set myRevControl [::tycho::RevControl::setup $myEditView $myEditView]
    #puts "myEditView: $myEditView myRevControl$myRevControl"
    ::tycho::safeUpdate $myEditView

    if {"$versionControlSystem" == "SCCS" } {
	# Press the Yes(SCCS) button
	$myRevControl invoke sccs
    } else {
	# Press the Yes(RCS) button
	$myRevControl invoke rcs
    }

    # Press the 'Checkout' button
    $myEditView.revcontrol invoke checkout
    ::tycho::safeUpdate $myEditView.revcontrol

    # This is a proc, not a test body, so it is not executed in the global
    # scope, so we need to declare TY_TEST_MODAL as global
    global TY_TEST_MODAL
    # This script is executed inside Dialog::wait by getComment
    set TY_TEST_MODAL {
	{
	    %0 insert body "This is a message"
	    update idletasks
	    after 500
	    %0 ok
	}
    }

    # Press the 'Checkin' button
    $myEditView.revcontrol invoke checkin
    ::tycho::safeUpdate $myEditView.revcontrol

    # Press the 'Checkout' button
    $myEditView.revcontrol invoke checkout
    ::tycho::safeUpdate $myEditView.revcontrol

    # Press the 'History' button
    # $myEditView.revcontrol invoke history
    $myEditView.revcontrol component historypanel open
    ::tycho::safeUpdate $myEditView.revcontrol

    # Press the 'unedit' button
    $myEditView.revcontrol invoke unedit
    ::tycho::safeUpdate $myEditView.revcontrol

    # Press the 'esc' button
    $myEditView.revcontrol invoke cancel

    # Remove the test file windows when we are done
    global duration
    after $duration delete object [$myEditView displayer]
}

test SCCS-1.1 {test out sccs} {
    testRevControl SCCS
    list {Done}
} {Done}

test RCS-1.1 {test out sccs} {
    testRevControl RCS
    list {Done}
} {Done}
