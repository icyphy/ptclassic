# Test suite for toolbars
#
# @Authors: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

if {[string compare test [info procs test]] == 1} then { 
    source [file join $TYCHO kernel test testDefs.tcl]
} {}

#set VERBOSE 1

############################################################################
# Test ToolBar
test ToolBar-1.1 {Test out buttons} {
   catch {delete object .t}
   ::tycho::ToolBar .t
   .t button foo -text Foo -command {set invokeResults "Foo!"}
   .t button bar -text Bar -command {set invokeResults "Bar!"}
   .t entry location Location {The location entry contains this text} {puts}
   pack .t
   wm deiconify .

   # Invoke some buttons
   set retval1 [list [.t invoke foo] [.t invoke bar]]
   update idletasks

   # Disable one button
   .t disable foo
   update idletasks

   set retval2 [list [.t invoke foo] [.t invoke bar]]

   # Is this a bug?  If a button is disabled, can I still invoke it?
   .t disable foo
   .t disable bar
   .t button bif -text Bif -command {set invokeResults "Bif!"}
   update idletasks

   set retval3 [list [.t invoke foo] [.t invoke bar] [.t invoke bif]]

   # Try running entry methods on buttons
   set retval4 [list [.t clear foo] [.t get bar]]

   set retval5 [catch {.t insert foo "This is a foo"}]
   list $retval1 $retval2 $retval3 $retval4 $retval5
} {{Foo! Bar!} {Foo! Bar!} {Foo! Bar! Bif!} {{} {}} 1}

test ToolBar-2.1 {Test out entries} {
   catch {delete object .t}
   ::tycho::ToolBar .t
   .t entry location Location {The location entry contains this text} {puts}
   .t entry location2 Location2 {The other location entry contains this text} \
           {puts}
   pack .t
   wm deiconify .

   # Mess with the location entry
   set retval1 [list [.t get location] [.t get location2]]
   .t clear location
   update idletasks
   # Location1 should be empty
   set retval2 [list [.t get location] [.t get location2]]
   .t clear 
   set retval3 [list [.t get location] [.t get location2]]
   update idletasks

   .t insert location {New text for the location entry}
   set retval4 [list [.t get location] [.t get location2]]
   update idletasks

   list $retval1 $retval2 $retval3 $retval4
} {{{The location entry contains this text} {The other location entry contains this text}} {{} {The other location entry contains this text}} {{} {}} {{New text for the location entry} {}}}
