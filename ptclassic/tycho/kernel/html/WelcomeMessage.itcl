# Welcome Message window.
#
# $Id$
# Author: Edward A. Lee
#
# Copyright (c) 1990-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
##########################################################################

# The following silliness is need so that the hypertext links in the
# welcome window work.
if {[::info classes ::tycho::HTML] == {}} {
    auto_load ::tycho::HTML
}

##########################################################################
#### welcomeMessage
# For convenience, a procedure to create a Tycho welcome message.
#
proc ::tycho::welcomeMessage {} {
    if [winfo exists .welcome] {
	.welcome raiseWindow
    } {
	# FIXME: Get version and executable information.
	uplevel #0 [list WelcomeMessage .welcome \
		-version 0.1 \
		-executable {} \
		-persistent 0]
	.welcome centerOnScreen
    }
}

# COMPATIBILITY procedures.  The following procedures emulate the behavior
# of similarly named procedures in pigi, the predecessor to Tycho.
#
proc ptkStartupMessage {version executable} {
    if [winfo exists .welcome] {
	.welcome raiseWindow
    } {
	WelcomeMessage [autoName .welcome] \
		-version $version \
		-executable $executable \
		-persistent 0
	.welcome centerOnScreen
    }
}

##########################################################################
#### WelcomeMessage
# Display the Ptolemy startup message.
#
class ::tycho::WelcomeMessage {
    inherit ::tycho::Message

    #### -version option
    # Indicates the version of the executable that we are running.
    itk_option define -version version Version ""

    #### -executable option
    # Indicates the actual executable file that we are running.
    itk_option define -executable executable Executable ""

    #### -persistent option
    # Indicates whether the window should destroy itself after a timeout.
    itk_option define -persistent persistent Persistent 1

    constructor {args} {}

    # Indicator of whether the Ptolemy gif image has been created.
    private variable ptolemygifexists 0
}

##########################################################################
#### constructor
#
body ::tycho::WelcomeMessage::constructor {args} {

    global TYCHO
    # An option -palette 3/3/2 below restricts the palette,
    # but it is better to restrict it in the source.
    if {!$ptolemygifexists} {
	image create photo ptolemygif \
		-file $TYCHO/kernel/tychologo.gif
    }
    configure -image ptolemygif

    # Pack the copyright button.
    addButton copyright -text "Copyright" -command \
	    "::File::openContext $TYCHO/copyright"

    # Pack the introduction button.
    addButton intro -text "Introduction" -command \
	    "::File::openContext $TYCHO/kernel/doc/introduction.html"

    # Process any unevaluated arguments.
    eval itk_initialize $args

    # Arrange for destruction, if appropriate.
    if {!$itk_option(-persistent)} {
	after 40000 [list catch [list delete object $this]]
    }

    # Construct the HTML message that forms the welcome message.
    append html "<center>"
    append html "<color value=firebrick><h1>Welcome to Tycho</h1></color>"
    if {$itk_option(-version) != {}} {
	append html "Version: $itk_option(-version)"
    }
    if {$itk_option(-executable) != {}} {
	append html \
		{<p>Ptolemy executable you are running:<br>} \
		$itk_option(-executable)
    }
    append html "<p>" \
	    "Copyright \251 1990-1996, " \
	    {Regents of the University of California<br>} \
	    {- All rights reserved -<br>} \
	    "<a href=$TYCHO/copyright>See the copyright notice, " \
	    {limitation of liability,<br>} \
	    {and disclaimer of warranty provisions</a>}

    append html "<h1><a href=$TYCHO/kernel/doc/introduction.html>" \
	    {Introduction to Tycho</a></h1>}

    configure -html $html
}

