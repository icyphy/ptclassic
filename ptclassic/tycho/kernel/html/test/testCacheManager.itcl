# Test suite for Exec class, this uses graphics, so it must be run with tycho -e
#
# @Authors: Kevin Chang
#
# @Version: @(#)testCacheManager.itcl	1.4 03/23/98 
#
# @Copyright (c) 1996-1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

# Make sure that the require packages are loaded
package require tycho.util.tytest
package require tycho.kernel.html

# The following tests need to be sequential...
test cache-1 {Get a cache file name, and write into it.} {
    ::tycho::cache initialize
    set url "newformat://a.b.c/index.tyc"
    set cachefile [::tycho::cache tmpCacheName $url]
    set date {Monday 1-2-3}
    set size 12345
    set contenttype "vrml/slow"
    set cacheid [::open $cachefile w+]
    foreach i {This is a test} {
        ::puts $cacheid $i
    }
    ::close $cacheid
    ::tycho::cache update $url \
            $date $size $contenttype $cachefile
} {}

test cache-2 {Get back the cache info about the url} {
    set url "newformat://a.b.c/index.tyc"
    set exists [::tycho::cache exists $url]
    set date [::tycho::cache getdate $url]
    set contenttype [::tycho::cache getcontenttype $url]
    set cachefile [::tycho::cache getcachefile $url]
    set size [::tycho::cache getsize $url]
    list $exists $date $contenttype $size
} {1\
        {Monday 1-2-3}\
        vrml/slow\
        12345}

test cache-3 {Check the integrity of the cache file} {
    set url "newformat://a.b.c/index.tyc"
    set cachefile [::tycho::cache getcachefile $url]
    set fileid [::open $cachefile r]
    set line {}
    while {![eof $fileid]} {
        append line "[gets $fileid] "
    }
    list $line
} {{This is a test  }}

test cache-4 {Check the same status} {
    set url "newformat://a.b.c/index.tyc"
    set cachefile [::tycho::cache tmpCacheName $url]
    set date {Monday 1-2-3}
    set size 12345
    set contenttype "vrml/slow"

    set ret1 [::tycho::cache same $url $date $size $contenttype]
    set ret2 [::tycho::cache same $url $date 55555 $contenttype]
    
    list $ret1 $ret2
} {1 0}

test cache-5 {Check whether initialize/exists will keep concurrency} {
    # Synchronize index and cache directory (keep 1:1 correspondence)
    ::tycho::cache initialize

    set url "newformat://a.b.c/index.tyc"
    set cachefile [::tycho::cache getcachefile $url]
    ::tycho::cache remove $url

    # Resynchronize
    ::tycho::cache initialize
    set exists [::tycho::cache exists $url]
    set cachefile [::tycho::cache getcachefile $url]
    list $cachefile $exists
} {{} 0}




