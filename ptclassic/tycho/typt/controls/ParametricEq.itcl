# A control sub-panel with three tone control sliders.
#
# @Author: John Reekie and Sunil Bhave
#
# @Version: @(#)ParametricEq.itcl	1.3	04/29/98
#
# @Copyright (c) 1996-1998 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################


#######################################################################
#### ParametricEq
# A small panel that contains three sliders for parametric
# equalisation -- frequency, bandwidth, and gain -- and two
# entry fields for the range of the frequency control. The
# frequency range can be accessed and set through the *-from_ and *-to*
# options. The names of the stars controlled can be set by the
# *-stars* option -- this must be set before calling the control
# panel add{} method. The default is *{left right}*.
#
class ::tycho::ParametricEq {
    inherit ::tycho::ControlSubpanel

    constructor {args} {}
    destructor {}
    
    ###################################################################
    ####                            options                       ####

    # The lower frequency limit
    itk_option define -from from From 100
    
    # The upper frequency limit
    itk_option define -to to To 10000

    # The stars to control
    itk_option define -stars stars Stars {left right}

    ###################################################################
    ####                         public methods                    ####

    # Request the widget to connect its controls
    method requestConnect {}

    ###################################################################
    ####                       protected methods                   ####

    # Update the frequency range
    protected method _range {from to}
}

#######################################################################
#### -from option configuration
#
configbody ::tycho::ParametricEq::from {
    _range $itk_option(-from) $itk_option(-to)
}

#######################################################################
#### -to option configuration
#
configbody ::tycho::ParametricEq::to {
    _range $itk_option(-from) $itk_option(-to)
}

#######################################################################
#### constructor
#
body ::tycho::ParametricEq::constructor {args} {
    # Create the entry boxes for frequency limits
    itk_component add entries {
        frame $itk_interior.entries
    } {}
    pack $itk_component(entries) -side left -anchor nw
    
    itk_component add high {
        entry $itk_component(entries).high -width 5
    } {}
    pack $itk_component(high) -side top
    
    itk_component add low {
        entry $itk_component(entries).low -width 5
    } {}
    pack $itk_component(low) -side top
    
    # Create the bindings to update the frequency slider ranges
    bind $itk_component(high) <Return> \
            "$this configure -to \[$itk_component(high) get\]"
    
    bind $itk_component(low) <Return> \
            "$this configure -from \[$itk_component(low) get\]"
    
    # Create a frame so we can have nice reliefs
    itk_component add frame {
        frame $itk_interior.frame \
                -borderwidth 2 \
                -relief sunken
    }
    pack $itk_component(frame) -side left
    
    # Create the bank of sliders for low, mid, and high gain
    foreach {tag init opts} {
        freq 100 {-label Freq}
        bw 1     {-label BW -from 0.1 -to 4 -resolution 0.1 -digits 1}
        gain 0   {-label "Gain" -from -10 -to 10 -resolution 1 -digits 0}
    } {
        itk_component add $tag {
            eval ::tycho::Slider $itk_interior.$tag $opts
        } {
            keep -cursor -background
        }
        $itk_component($tag) set $init
        pack $itk_component($tag) -side left -in $itk_component(frame)
    }
    
    # Initialise options.
    eval itk_initialize $args
    
    # Call method to update frequency slider
    _range $itk_option(-from) $itk_option(-to)
}

######################################################################
#### requestConnect
#
# Make the connection to the stars given by *-stars*.
#
body ::tycho::ParametricEq::requestConnect {} {
    foreach star $itk_option(-stars) {
        connect freq $star.freq
        connect bw   $star.bw   10.0
        connect gain $star.gain 10.0
    }
}

#####################################################################
#### _range 
# Update the widget for a new frequency range
#
# FIXME: Really want a logarithmic frequency scale.
#
body ::tycho::ParametricEq::_range {from to} {
    set resolution [expr ($to - $from) / 100]
    set resolution [::tycho::axisRoundUp $resolution]
    if { $resolution < 1 } {
        set digits [llength [lindex [split $resolution "."] 1]]
    } else {
        set digits 0
    }

    # Adjust the range to within limits. This _should_
    # change the number of digits, but noone will notice...
    set from [::tycho::roundTo $from $resolution]
    set to   [::tycho::roundTo $to   $resolution]

    set itk_option(-from) $from
    set itk_option(-to)   $to

    $itk_component(low) delete 0 end
    $itk_component(low) insert 0 [format %.${digits}f $from]

    $itk_component(high) delete 0 end
    $itk_component(high) insert 0 [format %.${digits}f $to]

    $itk_component(freq) configure \
            -from $from \
            -to $to \
            -resolution $resolution \
            -digits $digits
}

