# A viewer and editor window for a octtools palette
#
# @Author: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1996-%Q% The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################

#######################################################################
#### EditPalette
# A palette is an octtools facet that contains other sub-facets.
# In Ptolemy, a facet is a directory with a .pal suffix.
# <p>
# Here is an example of how to use the EditPalette, this example
# requires Ptolemy be installed locally, and could take a few minutes
# to bring up an editor
# <tcl><pre>
#     ::tycho::view EditPalette -facet $PTOLEMY/src/domains/cgc/demo/sounds.pal
# </pre></tcl>
#
class ::tycho::EditPalette {
    inherit ::tycho::EditForest

    ###################################################################
    ####                            options                        ####

    # Specify the name of the Oct facet associated with the data being edited.
    itk_option define -facet facet File ""

    constructor {args} {}
    destructor {}
    
    ###################################################################
    ####                         public methods                    ####

    # Open a help window.
    method help {}

    ###################################################################
    ####                   protected methods                       ####

    # Return the name of the class of graphics widget to use.
    protected method graphicsWidget {} {return ::tycho::EditPaletteWidget}

    # Initialize the menu/status/tool bars
    protected method initialize {{menubar {}} {statusbar {}} {toolbar {}}}
}

#######################################################################
#### -facet configuration
# Use oct2ptcl to convert a facet from Oct to Ptcl format.
# If you configure this option after construction, you must invoke
# <code>reload</code> to view the new facet.
#
configbody ::tycho::EditPalette::facet {
    set facet $itk_option(-facet)
    if {$facet != "" } {
	set facet [::tycho::expandPath $facet]
	set facetTmpFile [::tycho::tmpFileName [file tail $facet] .fst]
        set recurse 0
	ptolemyMkFacetGraph [list [list $facet]] $facetTmpFile $recurse $facet

	configure -file $facetTmpFile
    }
}

#######################################################################
#### constructor
#
body ::tycho::EditPalette::constructor {args} {
    eval itk_initialize $args
}

    ###################################################################
    ###################################################################
    ####                      public methods                       ####

#######################################################################
#### help
# Open a help window.
#
body ::tycho::EditPalette::help {} {
    hyperJump [file join \$TYCHO editors visedit doc \
	    usersGuides EditPaletteHelp.html] {}
}

####################################################################
####################################################################
####                    protected methods                       ####

#####################################################################
#### initialize
# Initialize the menu, status, and toolbars associated with this widget.
# The root (view) class sets up the menubar methods in it's initialize
# via the chain command, which should always be the first command in
# this method.
# 
# This method is called by it's displayer when attachView is called (usually
# in ::tycho::view
#
body ::tycho::EditPalette::initialize \
        {{menubar {}} {statusbar {}} {toolbar {}}} {
    chain $menubar $statusbar $toolbar

    if {$menubar != {}} {
        $menubar addMenu special -label Special -underline 0
        $menubar command showptcl special \
		-label "Show Ptcl" -underline 0 \
                -command "::tycho::view EditPtcl -facet $itk_option(-facet)"

        #menubar add "Retarget" Special -underline 0 \
        #        -command "::tycho::view Retarget -edit $this -toolbar 1"
    }

}
