# Interface to the Glimpse search engine.
#
# @Author: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1996 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################

catch {delete class Glimpse}
#######################################################################
#### options
#

#######################################################################
#### Glimpse
# Description of class.
#
# <p>
# Here is an example of how to use the Glimpse:
# <tcl><pre>
#     ::tycho::Glimpse .x ...
# </pre></tcl>
#
class ::tycho::Glimpse {
    inherit ::tycho::EntryQuery

    constructor {args} {}
    destructor {}
    
    ###################################################################
    ####                            options                        ####

    # One line description of findcommand option; listed in alphabetical order
    itk_option define -findcommand findcommand Findcommand ""

    ###################################################################
    ####                         public methods                    ####

    # Call glimpse on the pattern and produce an index browser with the results
    method glimpseSearch {}

    # One line description of the method
    method NameB {}

    ###################################################################
    ####                      public procs                         ####

    # One line description procedure; listed in alphabetical order
    proc NameA {anyargs} {}

    ###################################################################
    ####                   protected methods                       ####

    # One line description of the method; listed in alphabetical order
    protected method methodName {}

    ###################################################################
    ####                   protected variables                     ####

    # Comments come before the variable declaration; variables listed
    # in alphabetical order
    protected variable variableName


    ###################################################################
    ####                   private methods                         ####

    # One line description; listed in alphabetical order
   #private method NameA {}

    ###################################################################
    ####                   private variables                       ####

    # A comment before one or a group of private variables;
    # alphabetical order unimportant
    private variable variableName1
    private variable variableName2

    #private common variableName
}

#######################################################################
#### -findcommand configuration
# Description of findcommand option.
#
configbody ::tycho::Glimpse::findcommand {
}


#######################################################################
#### constructor
#
body ::tycho::Glimpse::constructor {args} {

    global TYCHO
    configure -queries {
	{pattern {Search pattern:} {}}
	{glimpse_index {Glimpse Index} {$TYCHO .glimpse_index}}
    }

    eval itk_initialize $args

   
    # If the findcommand option has not been set, set the default now.
    # This has to be done in the constructor rather than in the class
    # definition (as a default) because "$this" is known here.
    if {$itk_option(-findcommand) == {}} {
	configure -findcommand "$this glimpseSearch"
    }

    $itk_component(bbox) buttonconfigure ok \
	    -text {Find <Ret>} \
	    -command "$this execCommand -findcommand"
}


#######################################################################
#### destructor
#
body ::tycho::Glimpse::destructor {} {
}


    ###################################################################
    ###################################################################
    ####                      public methods                       ####

#####################################################################
#### glimpseSearch
# Use the glimpse command to generate an index.
# Note that glimpse is not shipped with Tycho,
# see http://glimpse.cs.arizona.edu
#
body tycho::Glimpse::glimpseSearch {} {
    global TYCHO
    set pattern [get pattern]
    set glimpse_index [get glimpse_index]
    if {! [file exists [eval file join $glimpse_index]]} {
        error "[eval file join $glimpse_index] does not exist.\n\
                If this is the Tycho glimpse file, and if you have glimpse\n\
                installed, then you need to run\
                (cd $TYCHO; make glimpse).\n\
                If you do not have glimpse, you can obtain it from\
                http://glimpse.cs.arizona.edu"
    } 
    # Open the temporary index file, write the header.
    set glimpseIndexFile [::tycho::tmpFileName glimpse .idx]
    set fd [open $glimpseIndexFile w]
    puts $fd "# <h1>This is a Tycho index file.  Use tycho to view it.</h1>\
            <nothtml"
    puts $fd "{Glimpse $pattern}\n{"

    # Unix only? exec glimpse and get the output:
    set glimpseIndexDir [file dirname [eval file join $glimpse_index]]
    set glimpseOut [exec glimpse -n -H $glimpseIndexDir $pattern]
    set listGlimpseOut [split $glimpseOut '\\\n']
    foreach glimpseItem $listGlimpseOut {
        puts $glimpseItem
        regsub {^.*/tycho/(.*)} $glimpseItem {$TYCHO/\1} shortGlimpseItem
        regexp {(^[^ :]*): ([0-9]*):(.*)} $shortGlimpseItem dummy \
                filename linenum patternline

        puts $fd "{[list "$filename $patternline"] $filename {line $linenum}}"
    }
    puts $fd "}\n# >"
    close $fd

    set nm [::tycho::autoName .index]
    ::tycho::IndexBrowser $nm \
            -file $glimpseIndexFile \
            -width 100
    $nm centerOnScreen

    # Remove the temporary index file
    tkwait window $nm
    ::tycho::rm -f $glimpseIndexFile
}


#####################################################################
#### NameB
# Description.
#
body ::tycho::Glimpse::NameB {} {
}

    ###################################################################
    ###################################################################
    ####                      public procedures                    ####

#######################################################################
#### NameA
# Description.
#
body ::tycho::Glimpse::NameA {anyargs} {
}


    ###################################################################
    ###################################################################
    ####                      protected methods                    ####

#######################################################################
#### MethodName
# Description.
#
body ::tycho::Glimpse::methodName {} {
}

    ###################################################################
    ###################################################################
    ####                      private methods                      ####

#######################################################################
#### NameA
# Description.
#
#body ::tycho::Glimpse::NameA {} {
#}


