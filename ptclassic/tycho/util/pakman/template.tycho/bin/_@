#! /bin/sh
# Command-line program for the %Package% utility \
    exec itclsh "$0" "$@"

# %percentW%percent %percentG%percent
# Author: %author%

# If the %PKG%_LIBRARY variable is set, add it to the auto_path
if [info exists env(%PKG%_LIBRARY)] {
    if { [lsearch -exact $auto_path $env(%PKG%_LIBRARY)] }  {
	lappend auto_path $env(%PKG%_LIBRARY)
    }
}

# Require the %Package% package. If this fails, try with the
# TCL_PACKAGES variable.
set ok 0
if [catch {package require %package%}] {
    if [info exists env(TCL_PACKAGES)] {
	if { [lsearch -exact $auto_path $env(TCL_PACKAGES)] == -1 }  {
	    lappend auto_path $env(TCL_PACKAGES)
	    if ![catch {package require %package%}] {
		set ok 1
	    }
	}
    }
} else {
    set ok 1
}

# If that didn't work, try the TYCHO environment variable.
set err ""
if !$ok {
    if ![info exists env(TYCHO)] {
	if [info exists env(PTOLEMY)] {
	    # TYCHO is not set, but PTOLEMY is.
	    if [file exists [file join $env(PTOLEMY) tycho]] {
		set env(TYCHO) [file join $env(PTOLEMY) tycho]
	    }
	} 
    }
    if [info exists env(TYCHO)] {
	if { [lsearch -exact $auto_path $env(TYCHO)] == -1 }  {
	    lappend auto_path $env(TYCHO)
	    if ![catch {package require %package%} err] {
		set ok 1
	    }
	}
    }
}
if !$ok {
    puts "Cannot find \"%Package%\".\
	    Error was:\n--start--\n$err\n--end--\n\
	    The auto_path variable lists the directories that were searched.\n\
	    auto_path = $auto_path\n\
	    You can:\n\
	    1. Install %Package% in a subdirectory of your Tcl library\n\
	    2. Install %Package% in the directory given by the TCL_PACKAGES \
	    variable.\n\
	    3. Set the %PKG%_LIBRARY variable to point to the \
	    %pkg% directory\n\
	    4. Set the TYCHO variable to point to your \
	    Tycho installation\n"
    exit
}

# Print startup sig
puts "%Package%, version %version%"

# Run the main procedure
eval %pkg% $argv

# Done
