#! /bin/sh
# Command-line program for the tycho.util.tytest utility, shell-only version \
    exec itclsh "$0" "$@"

# $Id$
# Author: Christopher Hylands

# If the TYTEST_LIBRARY variable is set, add it to the auto_path
if [info exists env(TYTEST_LIBRARY)] {
    if { [lsearch -exact $auto_path $env(TYTEST_LIBRARY)] }  {
	lappend auto_path $env(TYTEST_LIBRARY)
    }
}

# Require the tycho.util.tytest package. If this fails, try with the
# TCL_PACKAGES variable.
set ok 0
if [catch {package require tycho.util.tytest}] {
    if [info exists env(TCL_PACKAGES)] {
	if { [lsearch -exact $auto_path $env(TCL_PACKAGES)] == -1 }  {
	    lappend auto_path $env(TCL_PACKAGES)
	    if ![catch {package require tycho.util.tytest}] {
		set ok 1
	    }
	}
    }
} else {
    set ok 1
}

# If that didn't work, try the TYCHO environment variable.
if !$ok {
    if ![info exists env(TYCHO)] {
	if [info exists env(PTOLEMY)] {
	    # TYCHO is not set, but PTOLEMY is.
	    if [file exists [file join $env(PTOLEMY) tycho]] {
		set env(TYCHO) [file join $env(PTOLEMY) tycho]
	    }
	} 
    }
    if [info exists env(TYCHO)] {
	if { [lsearch -exact $auto_path $env(TYCHO)] == -1 }  {
	    lappend auto_path $env(TYCHO)
	    if ![catch {package require tycho.util.tytest}] {
		set ok 1
	    }
	}
    }
}
if !$ok {
    puts "Cannot find \"tycho.util.tytest\". You can\n\
	    1. Install tycho.util.tytest in a subdirectory of your Tcl library\n\
	    2. Install tycho.util.tytest in the directory given by the TCL_PACKAGES \
	    variable.\n\
	    3. Set the TYTEST_LIBRARY variable to point to the \
	    tytest directory\n\
	    4. Set the TYCHO variable to point to your \
	    Tycho installation\n"
    exit
}


# Source each of the files passed on the command line
# FIXME: Need options?
if { $argv == "" } {
    puts "Usage: tytest <file> <file>..."
    exit
}

set cwd [pwd]
foreach file $argv {
    # Reset the directory in case anyone messes with it
    cd $cwd
	
    # Source the file
    uplevel #0 "source $file"
}

# Done
catch {doneTests}

# Done
exit
