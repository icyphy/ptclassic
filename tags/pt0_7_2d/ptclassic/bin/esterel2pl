#! /bin/sh
#
# Master script for generating Ptolemy star definitions from Esterel programs.
# This is preliminary.  It assumes the Esterel compiler is called esterel
# and is in your path.
#
# Author: Edward A. Lee
# Version: @(#)esterel2pl	1.6   01/28/99
#
# Copyright (c) 1990-1999 The Regents of the University of California.
# All rights reserved.
# See the file $PTOLEMY/copyright for copyright notice,
# limitation of liability, and disclaimer of warranty provisions.
#
# This command takes two or more arguments:
#   - The first argument must be the Ptolemy domain name (e.g. DE)
#   - One or more esterel files (the names must have the extension .strl)
#   - Optionally, a "-B base" option, where "base" is the name of
#     to use when consolidating several esterel modules.  This will become
#     the name of the star.
#   - One or more include files, which must have extensions .h, .c, or .cc.
# If not base name is specified, and there is only one esterel file, then
# the stem of its name is used.  Otherwise, the name "esterel" is used.
# The command looks for an intermediate form file with name "base.lc", where
# base is the specified base name. If this file does not exist, or
# if the file "base.strl" is newer than "base.lc", then it invokes
# the Esterel compiler with the -Klc option to create the file "base.lc".
# This will also have the side effect of creating the file "base.c".
# It then parses the .lc file and generates a star definition
# for the appropriate domain in Ptolemy.  This star can be dynamically
# linked into Ptolemy. It will include all the .h, .c, and .cc files specified
# on the command line to esterel2pl, and also, of course, the "base.c" file
# generated by the esterel compiler.

PTOLEMY=${PTOLEMY:-/users/ptolemy}
if [ ! -d "$PTOLEMY" ]; then
	echo "$0: '$PTOLEMY' does not exist, try setting \$PTOLEMY. "
	exit
fi 
if [ -z "$PTARCH" ]; then
	PTARCH=`$PTOLEMY/bin/ptarch`
fi

TCL_LIBRARY=$PTOLEMY/tcltk/tcl/lib/tcl
$PTOLEMY/tcltk/tcl.$PTARCH/bin/itclsh $PTOLEMY/lib/tcl/esterel2pl.tcl ${1+"$@"}
