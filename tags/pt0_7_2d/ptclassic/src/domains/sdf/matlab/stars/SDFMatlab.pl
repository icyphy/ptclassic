defstar {
	name { Matlab }
	domain { SDF }
	desc {
Base star for Matlab interface stars in the SDF domain.
	}
	version { @(#)SDFMatlab.pl	1.37	04/08/97 }
	author { Brian L. Evans }
	acknowledge { Steve L. Eddins, The MathWorks Inc., Natick, MA }
	copyright {
Copyright (c) 1995-1997 The Regents of the University of California.
All rights reserved.
See the file $PTOLEMY/copyright for copyright notice,
limitation of liability, and disclaimer of warranty provisions.
	}
	location { SDF Matlab library }
	htmldoc {
<a name="Matlab interface"></a>
<a name="Eddins, S."></a>
All instances of Matlab stars share one Matlab process.
A Matlab kernel is started during the begin phase if a kernel has not
yet been started, i.e., if only one instance of this base star exists.
The Unix command executed to start Matlab is simply "matlab".
If "matlab" is not on your path as defined by your .cshrc file,
then this star should fail gracefully when fired.
When Ptolemy exits, Ptolemy will kill the Matlab kernel.
<p>
The <i>ScriptDirectory</i> state specifies where to find customized Matlab
scripts and establishes a default directory for writing output files.
If <i>ScriptDirectory</i> is not empty, then the star will tell Matlab
to change directories to this directory before the Matlab command
defined by this star is evaluated.
This allows custom scripts to be written without changing the value
of Matlab's path.
If you are writing values to sub-directory using Matlab commands, then
it is best to specify a path name for the <i>ScriptDirectory</i>
to ensure that the Matlab command will write to the same sub-directory
each time the Matlab command defined by this star is evaluated.
<p>
The <i>DeleteOldFigures</i> setting allows the user to control whether
or not the Matlab figures generated by this star (if any) will be deleted
when the star's destructor method is called.
<p>
In the current implementation, the Matlab command can be a concatenation
of several Matlab statements.
A trailing semicolon is added when missing to all Matlab commands in order
to suppress output of the last statement in the command.
All textual output produced by the Matlab command is captured in a buffer
local to the star.
	}
	defstate {
		name { ScriptDirectory }
		type { string }
		default { "" }
		desc {
An optional directory specifying where to find any custom Matlab files.
You may use tilde characters and environment variables in the directory name.
}
	}
	defstate {
		name { DeleteOldFigures }
		type { int }
		default { YES }
		desc {
If this state is YES or TRUE, then old figures generated by Matlab
will be deleted whenever the destructor for this star is run, e.g.
when the run panel in the graphical interface is closed.
}
	}

	hinclude { "MatlabPtIfc.h" }

	protected {
		MatlabPtIfc* matlabInterface;
	}

	constructor {
		matlabInterface = 0;
	}

	destructor {
		delete matlabInterface;
	}

	begin {
		if ( matlabInterface == 0 ) {
		    matlabInterface = new MatlabPtIfc;
		}
		if ( ! matlabInterface->MatlabIsRunning() ) {
		    if ( ! matlabInterface->StartMatlab() ) {
			Error::abortRun( *this,
					 matlabInterface->GetErrorString() );
			return;
		    }
		}

		const char* scriptDir = ScriptDirectory;
		matlabInterface->SetDeleteFigures( int(DeleteOldFigures) );
		matlabInterface->SetScriptDirectory( scriptDir );
		matlabInterface->SetFigureHandle( fullName() );
	}
}
