# Sample make.template file for custom pigiRpc with user supplied stars
# Version identification:
# @(#)make.template	1.17	06/04/96
#
# Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
# 
# Programmer: Christopher Hylands

# This is an example of a make.template to build your own copy of pigiRpc,
# with some combination of your own stars and standard stars.
#
# IMPORTANT: do not edit this file if its name is "makefile".  Edit
# make.template instead.  If there is no makefile, you can make it
# by typing
#	make -f make.template makefile
# makefile is just a copy of make.template with dependencies added.
# If you see the message
#
# makefile remade -- you must rerun make.
#
# Don't worry; this is standard.  Just rerun make.
# Whenever you add or delete an #include line in one of your files,
# type "make depend" to regenerate the dependencies in the makefile.
#
#
# It is assumed that your PTOLEMY environment variable is defined and
# points to the root of the Ptolemy tree.  This makefile uses GNU make
# extensions.
#
# How to build your own pigiRpc with your own stars
#
# 1) Build a vanilla pigiRpc.  pigiRpc depends on .o files under 
# $PTOLEMY/obj.$PTARCH, so you must do a vanilla build.  You should read
# the installation instructions, and then do:
#	cd $PTOLEMY; make install
#
# 2) Edit this file as $PTOLEMY/src/pigiExample/make.template.  Add your
# stars to LOCAL_OBJS and PL_SRCS
#
# 3) cd to $PTOLEMY/obj.$PTARCH/pigiExample and type 'make depend' to update
# the makefile from the make.template
#
# 4) While still in in $PTOLEMY/obj.$PTARCH/pigiExample, type 'make'
#
# 5) If you built your pigiRpc with SDFMyStar.o, you can test your
# pigiRpc by starting up with: 
# pigi -rpc $PTOLEMY/obj.$PTARCH/pigiExample/pigiRpc $PTOLEMY/src/pigiExample/init.pal
# and then run the 'wave' universe.
#
# 6) If you want your pigiRpc to be the default pigiRpc, you can 
# install it in $PTOLEMY/bin.$PTARCH, but this will wipe out the whatever
# pigiRpc is in that directory

#############################################################################
# You probably need not edit this section
# root of source tree
ROOT =		../..
# Path (absolute or relative) to the object directory root
OBJDIR =	..
# VPATH points to the "real" source directory
VPATH =		$(ROOT)/src/pigiExample

# get configuration info
CONFIG =	$(ROOT)/mk/config-$(PTARCH).mk
include $(CONFIG)

#############################################################################
# Most of your editing will occur in this section

# Feel free to change the VERSION to something meaningful
VERSION =	"pigiExample Demonstration"

# Star objects in this directory.  Add your own here.
# You probably don't want the toy SDFMyStar star in your binary
LOCAL_OBJS +=	SDFMyStar.o

# Names of star sources that are written in Ptolemy preprocessor language.
# (If you also have stars or other object files written the old-fashioned
# way, no problem -- any .o file in OBJS with no matching .pl file below
# will be built from a .cc file).
PL_SRCS =	SDFMyStar.pl

# Name of the domain that your star(s) goes in
DOMAIN  = SDF

# Include files needed to build your star(s)
INCL =	-I$(ROOT)/src/domains/sdf/kernel -I$(KERNDIR)

#############################################################################
# You probably need not change anything below here.

# If $PTOLEMY/src/pigiExample/override.mk exists, then we 
# include its contents in this file.  This allows us to easily
# make changes.  For example, rather than editing this file, we could
# create an override.mk file that set the VERSION, LOCAL_OBJS, and PL_SRCS
# variables
-include $(VPATH)/override.mk

# If override.mk did not set BASENAME and PIGI, then we do that now.
ifndef BASENAME
ifndef PIGI
	ALLBINARIES =	1
	BASENAME =	pigiRpc
endif
endif

# pigiRpc requires TK and OCT.  $PTOLEMY/mk/ptbin.mk and $PTOLEMY/mk/stars.mk
# read these makefile variables
TK=1
OCT=1

INCL += -I$(ROOT)/src/pigilib $(PTCOMPAT_INCSPEC)

SRCS =		pigiMain.cc

PT_DEPEND +=	pigiMain.o $(LOCAL_OBJS)

ADD_OBJS =	palettes.$(PIGI).o $(LOCAL_OBJS)

PIGI_OBJS +=	pigiMain.o $(ADD_OBJS) 

# common.mk wants this, otherwise we get multiple targets for $(LIBDIR)/$(LIB)
# However, we are not using common.mk so we'll leave this commented out 
#LIB = dummy

# 'make clean' should remove these derived files
KRUFT = $(wildcard palettes.*.c) version.c *_linklog

# ptbin.mk contains the rules that are necessary to build various binaries
include $(ROOT)/mk/ptbin.mk

# $(PIGI) is the full blown version, with all domains
# $(PIGI).ptiny contains just sdf and de
# $(PIGI).ptrim contains sdf, de, cgc and a few other small domains
all: $(PIGI) $(PIGI).ptiny $(PIGI).ptrim

# Can't use echo -n on hppa, see the hppa echo man page.
# First we substitute 'pal:' for 'pal '
# Then we substitute \$$PTOLEMY for PTOLEMY
palettes.$(PIGI).c: $(PT_DEPEND)
	echo "char* defaultPalettes(){ return \"$(subst PTOLEMY,\$$PTOLEMY,$(subst pal ,pal:,$(sort $(PALETTES)))):./user.pal:./init.pal\";}" > palettes.$(PIGI).c
	$(CC) -c palettes.$(PIGI).c	

sources: make.template $(PL_SRCS)

# Include rules to build stars
include $(ROOT)/mk/userstars.mk

# Matlab settings
include $(ROOT)/mk/matlab.mk

# Mathematica settings
include $(ROOT)/mk/mathematica.mk

# common.mk contains rules common to makefiles that compile files.
# However, since we are including userstars.mk above, we don't include it
#include $(ROOT)/mk/common.mk

# Don't add anything after the next line; makedepend will zap it.
# DO NOT DELETE THIS LINE -- make depend depends on it.

