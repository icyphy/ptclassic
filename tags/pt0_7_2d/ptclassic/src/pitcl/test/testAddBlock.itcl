# Test suite for the ::pitcl::addBlock command.
#
# @Author: Edward A. Lee
#
# @Version: @(#)testAddBlock.itcl	1.4   04/04/97
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

if {[string compare test [info procs test]] == 1} then { 
    source $TYCHO/kernel/test/testDefs.tcl
} {}

# Uncomment this to get a full report, or set in your Tcl shell window.
# set VERBOSE 1

# Set the following to avoid endless calls to exit.
set reallyExit 0

######################################################################
#### setup
# Create an empty universe.

test addBlock-0 {create a test universe for addBlock} {
    ::pitcl::addUniverse x SDF
} {}

######################################################################
#### addBlock

test addBlock-1 {create a simple block with the same name as the universe} {
    ::pitcl::addBlock x Ramp
    ::pitcl::blocks -fullname .x
} {.x.x}

test addBlock-2 {create a block within a galaxy using relative naming} {
    namespace ::pitcl {
        defGalaxy y SDF {
            addBlock z Ramp
            galaxyPort out z.output
        }
        blocks y
    }
} {z}

test addBlock-3 {create a block within a galaxy instance using absolute naming} {
    namespace ::pitcl {
        # Try to confuse absolute naming by changing the current universe.
        # NOTE: If the domain of this new universe is DE, then SDF master
        # galaxy "y" is no longer visible.
        addUniverse .z SDF
        addBlock .x.w y
        blocks -fullname -deep .x
    }
} {.x.x .x.w.z}

test addBlock-4 {try to add a block that already exists} {
    catch {::pitcl::addBlock .x.x Ramp} msg
    list $msg
} "{Block x already exists in .x}"

test addBlock-5 {create a block within a master galaxy using absolute naming} {
    namespace ::pitcl {
        # Try to confuse absolute naming by changing the current universe.
        currentGalaxy .z
        addBlock y.y Xgraph
        blocks -fullname -deep y
    }
} {y.z y.y}

test addBlock-6 {create a block within a new galaxy using abosolute naming} {
    namespace ::pitcl {
        defGalaxy yy SDF {
            addBlock yy.z Ramp
        }
        blocks yy
    }
} {z}

doneTests
