##########################################################################
# @Version: @(#)Repeater.itcl	1.21 07/29/98
# @Author: H. John Reekie
#
# @Copyright (c) 1996-1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
##########################################################################


#######################################################################
## Repeater
#
# An interactor that repeatedly invokes a command while the mouse
# button is held down. As with all interactor callbacks, the called
# command has the current coordinates passed to it, so that the
# command can modify its action according to the current position
# within the item.
#
# <b>Caveat</b>: the command is still called repeatedly even if the mouse
# is moved outside the item while the mouse is held down. This
# interactor should perhaps have another option that controls whether
# this happens or not.
#
# <p><b>Options</b>
#
# See also: <a href="Interactor.html">Interactor</a>.
#
# <dl>
# <dt><dd>
# <dl>
# <dt><b>-command</b>
# <dd>The script that is executed repeatedly as long as the
# mouse button is held down. Each time, the current mouse
# coordinates are appended to the command.
#
# <dt><b>-delay</b>
# <dd>The time delay between the first and second clicks.
#
# <dt><b>-interval</b>
# <dd>The time interval between executions of the script.
#
# </dl></dl>
#
# <p><b>Bugs</b>
#
# (None.)
#
# <p><b>Enhancements</b>
#
# <ol>
# <li> (None)
# </ol>
#
# <p><b>Links</b>
# 
# <ul>
# <li><a href="../internals/interactors.html">How interactors work</a>.
# <li><a href="../internals/index.html">Programmer's guide</a>
# <li><a href="index.html">Class documentation index</a>
# </ul>
#
class ::tycho::Repeater {
    inherit ::tycho::Interactor

    constructor {{s {}} {c {}} args} {
	set slate $s
	set canvas $c

	eval $this configure $args
    }
    destructor {}
    
    
    ###################################################################
    ####                            options                        ####

    # The command to execute repeatedly.
    public variable command ""

    # The time delay between first and second execution.
    public variable delay 400

    # The time interval between executions.
    public variable interval 100


    ###################################################################
    ####                         public methods                    ####

    # Attach the interactor to the current item
    method activate {t x y args}

    # Remove the interactor from the current item
    method deactivate {args}

    # Record a mouse movement
    method motion {x y}

    # Reinvoke the activation command
    method reactivate {x y}


    ###################################################################
    ####                   protected methods                       ####


    ###################################################################
    ####                       private variables                   ####

    # The id of the "after" script, so it can be cancelled
    private variable afterid

    # The current mouse position
    private variable currentX
    private variable currentY
}

#######################################################################
#### activate target x y
#
# Attach the interactor to the current item. After setting up bindings 
# for the motion and release events, the *-command* script is executed,
# and a delayed call to reactivate{} set up for *-delay* milliseconds 
# later.
#
body ::tycho::Repeater::activate {t x y args} {
    # Set the target. If the target argument is
    # in fact a tag, get the current item from the slate.
    target [$slate find withtag current]
    
    # Set up the bindings.
    $slate bind $target \
	    [eval ::tycho::Interactor::event Release $args] \
	    "$this deactivate"
    $slate bind $target \
	    [eval ::tycho::Interactor::event Motion $args] \
	    "$this motion %x %y"
    
    # Execute the user-specified command
    if { $command != "" } {
        uplevel #0 $command $x $y
    }

    # Set up the delayed call to reactivate{}. Use catch in case
    # something catastrophic happens and the interactor has disappeared.
    set currentX $x
    set currentY $y
    set afterid [after $delay \
	    [list catch \
	    [list $this reactivate $currentX $currentY]]]
}

#######################################################################
#### deactivate
#
# Remove this interactor from the current item. This removes
# the mouse bindings, cancels the delayed command, and clears the target.
#
body ::tycho::Repeater::deactivate {args} {
    # Cancel the delayed event
    after cancel $afterid
    set afterid ""

    # Clear the target 
    set target ""

    # Remove the binding
    $slate bind $target \
	    [eval ::tycho::Interactor::event Release $args] {}
}

#######################################################################
#### motion
#
# Record a change in mouse position.
#
body ::tycho::Repeater::motion {x y} {
    set currentX $x
    set currentY $y
}

#######################################################################
#### reactivate
#
# Reinvoke the interactor's activation command, and set up to
# call this again after the time specified by the *-interval* option.
#
body ::tycho::Repeater::reactivate {x y} {
    # Execute the user-specified command
    if { $command != "" } {
        uplevel #0 $command $x $y
    }
    # Set up another delayed call
    set afterid [after $interval \
	    [list catch \
	    [list $this reactivate $currentX $currentY]]]
}

