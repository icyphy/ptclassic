# Test suite for toolbars
#
# @Author: Christopher Hylands
#
# @Version: @(#)testToolBar.itcl	1.8 04/29/98
#
# @Copyright (c) 1997-1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

# Make sure that the required packages are loaded
package require tycho.util.tytest
package require tycho.kernel.gui

#set VERBOSE 1

############################################################################
#### ToolBar-1.1
# Test ToolBar
test ToolBar-1.1 {Test out buttons} {
   catch {delete object [$editor displayer]}
   set editor [::tycho::view Edit -toolbar 1]

   $editor toolbar button foo -text Foo -command {set invokeResults "Foo!"}
   $editor toolbar button bar -text Bar -command {set invokeResults "Bar!"}
   $editor toolbar entry location Location \
	   {The location entry contains this text} {puts}

   # Invoke some buttons
   set retval1 [list [$editor toolbar invoke foo] [$editor toolbar invoke bar]]
   update idletasks

   # Disable one button
   $editor toolbar disable foo
   update idletasks

   set retval2 [list [$editor toolbar invoke foo] [$editor toolbar invoke bar]]

   # Is this a bug?  If a button is disabled, can I still invoke it?
   $editor toolbar disable foo
   $editor toolbar disable bar
   $editor toolbar button bif -text Bif -command {set invokeResults "Bif!"}
   update idletasks

   set retval3 [list [$editor toolbar invoke foo] \
	   [$editor toolbar invoke bar] [$editor toolbar invoke bif]]

   # Try running entry methods on buttons
   set retval4 [list [$editor toolbar clear foo] [$editor toolbar get bar]]

   # Try updating the button with insert, which is an error
   catch {$editor toolbar insert foo "This is a foo"} retval5

   # Use the parent buttonconfigure method to change the text
   $editor toolbar buttonconfigure foo -text "New foo text"

   set retval6 [$editor toolbar buttoncget foo -text]

   catch {delete object [$editor displayer]}

   list $retval1 $retval2 $retval3 $retval4 $retval5 $retval6
} {{Foo! Bar!} {Foo! Bar!} {Foo! Bar! Bif!} {{} {}} {can't read "tagsinsert(foo)": no such element in array} {New foo text}}


############################################################################
#### ToolBar-2.1
#
test ToolBar-2.1 {Test out entries} {
   catch {delete object [$editor displayer]}
   set editor [::tycho::view Edit -toolbar 1]
   $editor toolbar entry location Location \
	   {The location entry contains this text} {puts}
   $editor toolbar entry location2 Location2 \
	   {The other location entry contains this text} \
           {puts}

   # Mess with the location entry
   set retval1 [list [$editor toolbar get location] \
	   [$editor toolbar get location2]]
   $editor toolbar clear location
   update idletasks
   # Location1 should be empty
   set retval2 [list [$editor toolbar get location] \
	   [$editor toolbar get location2]]
   $editor toolbar clear 
   set retval3 [list [$editor toolbar get location] [$editor toolbar get location2]]
   update idletasks

   $editor toolbar insert location {New text for the location entry}
   set retval4 [list [$editor toolbar get location] \
	   [$editor toolbar get location2]]
   update idletasks
   catch {delete object [$editor displayer]}

   list $retval1 $retval2 $retval3 $retval4
} {{{The location entry contains this text} {The other location entry contains this text}} {{} {The other location entry contains this text}} {{} {}} {{New text for the location entry} {}}}


############################################################################
#### ToolBar-2.1
#
test ToolBar-3.1 {Test out entryforeground, entrybackground} {
   catch {delete object [$editor displayer]}
   set editor [::tycho::view Edit -toolbar 1]

   $editor toolbar configure \
	   -entryforeground red \
	   -entrybackground blue \
	   -entryfont fixed
   $editor toolbar entry location Location \
	   {The location entry contains this text} {puts}
   list [$editor toolbar cget -entryforeground] \
           [$editor toolbar cget -entrybackground] \
           [$editor toolbar cget -entryfont]
} {red blue fixed}

# Delete the last ToolBar
catch {delete object [$editor displayer]}
