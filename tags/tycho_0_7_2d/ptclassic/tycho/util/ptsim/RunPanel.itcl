# The superclass for panels that can be packed into a RunWindow.
#
# @Author: John Reekie
#
# @Version: @(#)RunPanel.itcl	1.2 04/29/98
#
# @Copyright (c) 1996-1998 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################


#######################################################################
#### RunPanel
# A superclass for control panels that can be packed into
# an instance of RunWindow. This class provides a graphical
# widget for these sub-panels and a simple way of connecting
# embedded control widgets into the control panels.
#
# To create a sub-panel sub-class, just:
# <ol>
# <li>In the constructor, create any graphical elements needed,
# such as sliders and buttons.
# <li>Implement the requestConnect{} method. This method will be
# called by the RunWindow{} at the appropriate time. The method
# should call the method connect{} to connect connect
# control widgets to callback names.
# </ol>
#
class ::tycho::RunPanel {
    inherit ::tycho::TWidget

    constructor {args} {}
    destructor {}
    
    ###################################################################
    ####                            options                        ####

    # The name of the run window
    itk_option define -runwindow runWindow RunWindow ""

    ###################################################################
    ####                         public methods                    ####

    # Request the widget to connect its controls
    method requestConnect {}

    ###################################################################
    ####                   protected methods                       ####

    # Connect a component to a control
    protected method connect {component control {scale {}} {offset {}}}
}

#######################################################################
#### constructor
#
body ::tycho::RunPanel::constructor {args} {
    # Initialize options
    eval itk_initialize $args
}


    ###################################################################
    ###################################################################
    ####                      public methods                       ####

#######################################################################
#### connect
#
# Connect a component to a control in the run window
#
body ::tycho::RunPanel::connect \
	{component control {scale {}} {offset {}}} {
    $itk_option(-controlpanel) connect \
            $itk_component($component) $control $scale $offset
}

#######################################################################
#### requestConnect
#
# Connect all controls to the run window. Subclasses must
# override and include calls to the connect{} protected method.
#
body ::tycho::RunPanel::requestConnect {} {
    ;# By default, do nothing
}
