#! /bin/csh -f
# script to make directories and links for an architecture
# $Id$

if (! $?PTARCH ) then
	echo The environment variable PTARCH must be set.
	exit 1
endif

# optmkdir -- make a directory if it does not exist
alias optmkdir \
'if ( ! -d \!:1 ) echo making directory $cwd/\!:1 ; if ( ! -d \!:1 ) mkdir \!:1'

# optlink -- make a symbolic link if it does not exist, from a file in a
# different directory to the same name in this directory.  args: dir filename

alias optlink \
'if ( ! -e \!:2 ) echo making link \!:1/\!:2 ; if ( ! -e \!:2 ) ln -s \!:1/\!:2 .'

# optdifflink -- make a symbolic link if it does not exist, with a different
# name

alias optdifflink \
'if ( ! -e \!:2 ) echo `pwd`: making link \!:1 \!:2 ; if ( ! -e \!:2 ) ln -s \!:1 \!:2 '

# Quiet versions of pushd and popd.
alias pushd 'pushd \!* > /dev/null'
alias popd 'popd \!* > /dev/null'

# Make the top-level directories
optmkdir bin.$PTARCH
optmkdir lib.$PTARCH
optmkdir obj.$PTARCH
optmkdir octtools
optmkdir octtools/include
optmkdir octtools/lib.$PTARCH
optmkdir octtools/bin.$PTARCH

cd bin.$PTARCH
optdifflink ../octtools/bin.$PTARCH/attache attache
optdifflink ../octtools/bin.$PTARCH/installColors installColors
optdifflink ../octtools/bin.$PTARCH/masters masters
optdifflink ../octtools/bin.$PTARCH/oct2ps oct2ps
optdifflink ../octtools/bin.$PTARCH/oct2tim oct2tim
optdifflink ../octtools/bin.$PTARCH/octfix octfix
optdifflink ../octtools/bin.$PTARCH/octls octls
optdifflink ../octtools/bin.$PTARCH/octredomain octredomain
optdifflink ../octtools/bin.$PTARCH/vem vem
cd ..

# Now, make stuff under obj.$PTARCH
# Don't _ever_ cd .., because if the user has built a tree with mkPtolemyTree
# then they might be down inside a master tree that they don't have
# write permission too, and when the cd .., they will be somewhere in the
# master tree
cd $PTOLEMY/obj.$PTARCH
optlink ../src makefile

# interp used to be in the line below, as of 0.5.1, it is no longer.
foreach x (domains ptcl pitcl kernel tysh pigiRpc pigilib ptlang pxgraph ptklib octtools pigiExample)
	optmkdir $x
	cd $x
	optlink ../../src/$x makefile
	if (-r ../../src/$x/make.template) then
		optlink ../../src/$x make.template
	endif
	cd $PTOLEMY/obj.$PTARCH
end


foreach x (filters utils)
	optmkdir $x
	cd $x
	optlink ../../src/$x makefile
	cd $PTOLEMY/obj.$PTARCH
end

# Make subdirectories of filters
cd filters
foreach x (optfir wfir)
	optmkdir $x
	cd $x
	optlink ../../../src/filters/$x make.template
	optlink ../../../src/filters/$x makefile
	cd $PTOLEMY/obj.$PTARCH/filters
end
cd $PTOLEMY/obj.$PTARCH

cd utils
foreach x (libptdsp libexttools libgslider libptmatlab libptmathematica \
		ptplay ptvhdlsim rman-2.5a6 tkman-1.8b5)
	optmkdir $x
	cd $x
	optlink ../../../src/utils/$x makefile
	if (-r ../../../src/utils/$x/make.template) then
		optlink ../../../src/utils/$x make.template
	endif
	cd $PTOLEMY/obj.$PTARCH/utils
end
cd $PTOLEMY/obj.$PTARCH

# Make posix thread and PN directories.
# Currently specific to SunOS, Solaris an HPUX, but we create the directories
# anyway, so that make install_gthreads gives a good error message
#if ($PTARCH =~ sun?* || $PTARCH =~ sol?* || $PTARCH =~ hppa?* ) then

	mkarch thread thread/posix
	mkarch domains/pn{,/kernel,/stars}
#endif

# Make link for pxgraph bitmaps
cd pxgraph
optlink ../../src/pxgraph bitmaps
cd $PTOLEMY/obj.$PTARCH

# EXPDOMAINS: experimental domains
# EXPEXTRAS: non-standard sub-directories of experimental domains
# EXPSUBEXTRAS: sub-dirs of non-standard sub-dirs of experimental domains
# Experimental domains not included: capsim cgdsp3

set EXPDOMAINS=(c50 cg56 cgc fsm vhdlb vhdl mdsdf hof sr)
set EXPEXTRAS=(c50/targets cg56/targets)

set ALLDOMAINS=(sdf ddf de bdf cg $EXPDOMAINS)

# If the tst directory is present, then populate it
if ( -d ../src/tst ) then
	optmkdir tst
	cd tst
	optlink ../../src/tst makefile
	optlink ../../src/tst makefile.tst
	optlink ../../src/tst makefile.tst2
	foreach x ($ALLDOMAINS pn)
		optmkdir $x
		cd $x
		optlink ../../../src/tst/$x makefile
		if ( -d ../../../src/tst/$x/stars) then
			optmkdir stars
			cd stars
			optlink ../../../../src/tst/$x/stars make.template
			optlink ../../../../src/tst/$x/stars makefile
			cd ..
		endif
		cd $PTOLEMY/obj.$PTARCH/tst
	end

	# Build any non domain tests
	set NONDOMAINTSTS=(incLink)
	foreach x ($NONDOMAINTSTS)
		optmkdir $x
		cd $x
		optlink ../../../src/tst/$x make.template
		optlink ../../../src/tst/$x makefile
		cd $PTOLEMY/obj.$PTARCH/tst
	end

	cd $PTOLEMY/obj.$PTARCH
endif

cd domains
foreach x ($ALLDOMAINS)
	optmkdir $x
	cd $x
	optlink ../../../src/domains/$x makefile
	foreach y (kernel stars)
		optmkdir $y
		cd $y
		optlink ../../../../src/domains/$x/$y make.template
		optlink ../../../../src/domains/$x/$y makefile
		cd $PTOLEMY/obj.$PTARCH/domains/$x
	end
	cd $PTOLEMY/obj.$PTARCH/domains
end

# At this point, we are in $PTOLEMY/obj.$PTARCH/domains.

# create extra directories under domain-specific directories
# everything must have one slash (be two levels down)

foreach x (cg/targets sdf/image sdf/targets \
	sdf/loopScheduler sdf/tcltk de/tcltk cg/parScheduler \
	cg/dlScheduler cg/HuScheduler cg/dcScheduler \
	cg/macroScheduler cg/ddfScheduler cgc/targets cgc/tcltk cgc/vis \
	c50/dsp cg56/dsp \
	sdf/atm sdf/contrib sdf/dsp sdf/dfm sdf/image \
	sdf/matrix sdf/matlab sdf/vis \
	cgc/dsp cgc/rtlib \
	vhdl/targets vhdl/tcltk \
	mdsdf/tcltk de/atm cg/hierScheduler $EXPEXTRAS )
	optmkdir $x
	cd $x
	optlink ../../../../src/domains/$x make.template
	optlink ../../../../src/domains/$x makefile
	cd $PTOLEMY/obj.$PTARCH/domains
end

cd $PTOLEMY/obj.$PTARCH/domains

# create extra subsub dirs in each domain
# everything must have two slashes (be three levels down)

foreach x ( c50/dsp/stars cg56/dsp/stars \
	sdf/atm/kernel sdf/atm/stars sdf/contrib/kernel sdf/contrib/stars \
	sdf/dsp/stars sdf/image/stars sdf/tcltk/stars \
	sdf/dfm/stars sdf/matrix/stars sdf/matlab/stars sdf/vis/stars \
	mdsdf/tcltk/stars \
	de/atm/stars \
	de/tcltk/stars \
	vhdl/tcltk/targets \
	cgc/dsp/stars \
	cgc/targets/uniproc cgc/targets/multiproc cgc/targets/NOWam \
	cgc/tcltk/stars cgc/tcltk/targets cgc/vis/stars cgc/vis/targets \
	cgc/vis/tcltk cgc/vis/devel \
	)
	optmkdir $x
	cd $x
	optlink ../../../../../src/domains/$x make.template
	optlink ../../../../../src/domains/$x makefile
	cd $PTOLEMY/obj.$PTARCH/domains
end

# directories that are deep
foreach x ( cgc/targets/NOWam/NOWam cgc/targets/NOWam/libudpam \
	cgc/vis/tcltk/stars )
	optmkdir $x
	cd $x
	optlink ../../../../../../src/domains/$x make.template
	optlink ../../../../../../src/domains/$x makefile
	cd $PTOLEMY/obj.$PTARCH/domains
end

# Start of octtools section
cd $PTOLEMY/obj.$PTARCH/octtools

foreach x (include vem-bin.mk vem-lib.mk)
	optlink ../../src/octtools	$x
end

foreach x ( Packages Xpackages attache vem)
	optmkdir $x
	cd $x
	#optlink ../../../src/octtools/$x make.template
	optlink ../../../src/octtools/$x makefile
	cd $PTOLEMY/obj.$PTARCH/octtools
end

foreach x ( installColors masters octfix octls oct2ps oct2tim octredomain)
	optmkdir $x
	cd $x
	optlink ../../../src/octtools/$x make.template
	optlink ../../../src/octtools/$x makefile
	cd $PTOLEMY/obj.$PTARCH/octtools
end

# If tkoct directory exists, then make dirs and do links
if ( -d $PTOLEMY/src/octtools/tkoct ) then
	optmkdir tkoct
	cd tkoct
	optlink ../../../src/octtools/tkoct makefile
	foreach x (oct2ptcl tkgraph tkoct top)
		optmkdir $x
		cd $x
		optlink ../../../../src/octtools/tkoct/$x make.template
		optlink ../../../../src/octtools/tkoct/$x makefile
		cd $PTOLEMY/obj.$PTARCH/octtools/tkoct
	end
	cd $PTOLEMY/obj.$PTARCH/octtools
endif

cd Packages

foreach x (  avl cp da errtrap fang fc gu harpoon kd lel list nle oct \
	octmm oh options pep port pq region st symbolic symlib tap th timer \
	tr uprintf utility vov vulcan)
	optmkdir $x
	cd $x
	optlink ../../../../src/octtools/Packages/$x make.template
	optlink ../../../../src/octtools/Packages/$x makefile
	cd $PTOLEMY/obj.$PTARCH/octtools/Packages
end

cd $PTOLEMY/obj.$PTARCH/octtools/Xpackages
foreach x (Maxport Table Tgl dds fb iv rpc ts xg xpa)
	optmkdir $x
	cd $x
	optlink ../../../../src/octtools/Xpackages/$x make.template
	optlink ../../../../src/octtools/Xpackages/$x makefile
	cd ..
end

cd $PTOLEMY/obj.$PTARCH/octtools/vem
optlink ../../../src/octtools/vem include
optlink ../../../src/octtools/vem bitmaps
foreach x (bags buffers dialogs dispatch doc drawing drs lib main \
	options patterns physical properties rpc schematic select strings \
	symbolic utility windows)
	optmkdir $x
	cd $x
	optlink ../../../../src/octtools/vem/$x make.template
	optlink ../../../../src/octtools/vem/$x makefile
	cd $PTOLEMY/obj.$PTARCH/octtools/vem
end

cd lib
foreach x (Vem checkoff.bm checkoffhi.bm checkon.bm checkonhi.bm \
	folder.bm hisetDot hisetMark hiunsetDot hiunsetMark \
	newcell.bm other.bm physical.bm schematic.bm setDot setMark \
	symbolic.bm unsetDot unsetMark vem.bindings) 
	optlink ../../../../src/octtools/vem/lib $x
end

cd $PTOLEMY/obj.$PTARCH
# End of octtools section

# This is for the makefile
cd $PTOLEMY
touch $PTOLEMY/obj.$PTARCH
