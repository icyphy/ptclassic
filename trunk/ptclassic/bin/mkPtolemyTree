#!/bin/sh
#
# This shell script invokes a Tcl script to make a personal Ptolemy
# development tree. See "mkPtolemyTree.tcl" for more information.
#
# Copyright (c) 1995-1997 The Regents of the University of California.
# All Rights Reserved.
# See $PTOLEMY/copyright for the complete copyright notice.
#
# Programmer: Matt Tavis
# Version: @(#)mkPtolemyTree	1.7 02/03/99
#
# Usage: mkPtolemyTree <override file> <absolute path of tree root>
#
# The override file is a set of make directives.  By convention, the
# override file is named "override.mk".  The override file gets copied
# into the new tree.  Note that the final sub-directory in the absolute
# path name must not already exist.  It will be created by the script.
#
# A sample override.mk file that will build a VHDL only pigi is below.
# To use this file, remove the leading comment symbols '#' and copy
# the three lines into a file named ~/override.mk
# --start--
# VHDL=1
# DEFAULT_DOMAIN=VHDL
# VERSION_DESC="VHDL only"
# --end--
#
# For a complete list of domains that can be included, see $PTOLEMY/mk/ptbin.mk
#
# Chapter 1 of the Ptolemy Programmer's manual has full documentation
# for mkPtolemyTree
#
PTOLEMY=${PTOLEMY:-~/ptolemy}
if [ ! -f $PTOLEMY/bin/ptarch ]; then
    echo 'mkPtolemyTree: $PTOLEMY/bin/ptarch does not exist,'
    echo "(\$PTOLEMY = $PTOLEMY)"
    echo ' Perhaps you need to set $PTOLEMY to the master Ptolemy tree,'
    echo ' which might be located at /users/ptolemy or /users/ptdesign'
    exit 3
fi
PTARCH=`$PTOLEMY/bin/ptarch`
mkPtolemyTreescript=$PTOLEMY/bin/mkPtolemyTree.tcl
ptolemytcl=$PTOLEMY/tcltk/tcl.$PTARCH/bin/itclsh
exec $ptolemytcl $mkPtolemyTreescript "$@"
