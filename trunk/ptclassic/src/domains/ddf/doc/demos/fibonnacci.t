.\" $Id$
.NA fibonnacci
.SD
Demonstrates the Self star.
.DE
.SV 1.1 "September 29, 1990"
.AL "E. A. Lee"
.LD
.ES
.IE "Self"
This demo shows what the
.c Self
star does and how to implement a recursion construct using the
.c Self
star.
The fibonnacci sequence is generated by a recursion construct.
Even though this is a very inefficient way, it is a good example
of how to realize a recursion construct, which has been a
difficult problem in dataflow paradigm.
.pp
A recursion galaxy is defined by a wormhole of DDF domain and
named "fib".  In the recursion galaxy, 
The incoming data is tested whether it is 0 or 1.
If it is 0 or 1, the
.c FloatThresh
star produces FALSE boolean to the
.c Switch 
and the
.c Select
stars. Then, the 
.c Select
star routes the
.c FloatDC
star (value 1) to the output.  In case the incoming data is greater
than 1, the output is the sum of two fibonnacci numbers which
are less than the incoming data by one and by two respectively.
The incoming data is decremented by one twice after the
trueOutput of the
.c Switch
star.  Each decremented data is now fed into the 
.c Self
star which is similar to a recursive function call.
Once fired, the
.c Self
star dynamically creates a cloned galaxy of the original recursion
galaxy "fib".  Since the original galaxy is searched by name, it can
be several levels up from the
.c Self
star (
.c Self
star has a state called \fIrecurGal\fR which indicates the name of the
original galaxy).  The 
.c Self
star also creates its own scheduler and works with the cloned galaxy.
The dynamically created galaxy and scheduler are destroyed after
the completion of the recursive computation.
Since the depth of the recursion is data dependent, all scheduling
decision is made at runtime.
After the recursive calculation, the outputs from the
.c Self
stars are summed and selected to the output.
Note that this demo takes very long : do not run more than 10 times.
It is because it takes long to create a cloned galaxy at runtime and the
number of creation is exponentially growing with the number of
runs.
.SA
Switch,
Select,
Self.
.ES


