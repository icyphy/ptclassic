#ifndef _<T>State_h
#define _<T>State_h 1

#include "State.h"
#include "KnownState.h"

/**************************************************************************
Version identification:
$Id$

 Copyright (c) 1990 The Regents of the University of California.
                       All Rights Reserved.

 Programmer:  I. Kuroda and J. T. Buck
 Date of creation: 6/15/89
 Revisions:

 State with <C> type

**************************************************************************/

///////////////////////////////////////////
// class  <T>State
///////////////////////////////////////////


class <T>State : public State
{
public:
        // constructor
        <T>State() { val = 0;}

        // parses initValue to set value
        void initialize();

        // the type
        char* type(); // { return "<T>";}

        // the value as a string
	StringList currentValue();

        // assignment from a <C>
        <C> operator=(<C> rvalue) { return val = rvalue;}

        // casting to a <C>
        operator <C>() { return val;}

	State* clone (); //  {return new <T>State;}

private:
	// Evaluate expression  in string
	ParseToken evalExpression(Tokenizer& lexer);
	ParseToken evalTerm(Tokenizer& lexer);
	ParseToken evalFactor(Tokenizer& lexer);

	friend class <T>ArrayState;

	<C> val;
};	


#endif
