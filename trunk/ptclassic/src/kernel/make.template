# Makefile for Ptolemy library and main module for interpreter
# Version identification:
# $Id$
# Copyright (c) 1990 The Regents of the University of California.
#                       All Rights Reserved.
# Date of creation: 3/19/90
#
# If this file's name is "make.template" and there is no makefile in
# this directory, do
#	cp make.template makefile
#	make depend
# This will add the dependencies to the makefile.

VPATH = ../../src/kernel
GPPFLAGS = -g
GNU = g++
GNULIB = /usr/gnu/lib
GNUINCLUDE = $(GNULIB)/g++-include
# need gcc, not cc, to build gnulib3a
CC = gcc

# Rule for compiling with g++
.SUFFIXES: .cc
.cc.o:
	$(GNU) $(GPPFLAGS) -c  $<

# Root of Ptolemy directory
ROOT=../..

# Where to install the libraries
DESTDIR=$(ROOT)/lib.$(ARCH)

# Where to install the help file(s).  This MUST be an absolute path
# or the (help) interpreter command will not work.
HELPDIR=~ptolemy/lib

# Library name
LIB=libptolemy.a

# Library sources
LIBCCSRCS=Animate.cc Architecture.cc AutoForkNode.cc \
 Block.cc Code.cc Connect.cc ComplexArrayState.cc ComplexState.cc \
 DataStruct.cc Display.cc Domain.cc Error.cc \
 Fraction.cc Galaxy.cc GalIter.cc Geodesic.cc Histogram.cc InterpGalaxy.cc \
 InterpUniverse.cc Interpreter.cc Linker.cc KnownBlock.cc NamedObj.cc \
 Packet.cc Particle.cc PriorityQueue.cc Scheduler.cc Star.cc StringList.cc \
 Tokenizer.cc Universe.cc UserOutput.cc Wormhole.cc WormConnect.cc \
 checkConnect.cc expandPath.cc \
 FloatArrayState.cc FloatState.cc IntArrayState.cc IntState.cc \
 KnownState.cc State.cc StringState.cc \
 FloatVecData.cc IntVecData.cc ImageData.cc
LIBCSRCS=gnulib3a.c

LIBSRCS = $(LIBCCSRCS) $(LIBCSRCS)
# All sources.
SRCS=$(LIBSRCS) interpmain.cc

# Header files
HDRS= Animate.h Architecture.h Attribute.h AutoForkNode.h \
 Block.h CircularBuffer.h Code.h ComplexSubset.h Connect.h \
 DataStruct.h Display.h Domain.h Error.h Fraction.h Galaxy.h \
 GalIter.h Geodesic.h Histogram.h InterpGalaxy.h \
 InterpUniverse.h Interpreter.h KnownBlock.h Linker.h Linker.sysdep.h \
 NamedObj.h Output.h Packet.h Particle.h ParticleQueue.h ParticleStack.h \
 Plasma.h PriorityQueue.h Scheduler.h Star.h StringList.h Tokenizer.h \
 Universe.h UserOutput.h WormConnect.h Wormhole.h \
 dataType.h miscFuncs.h type.h isa.h \
 ComplexArrayState.h ComplexState.h FloatState.h FloatArrayState.h \
 IntArrayState.h IntState.h KnownState.h State.h StringState.h \
 FloatVecData.h IntVecData.h ImageData.h

# Library objects
LIBOBJS=$(LIBCCSRCS:.cc=.o) $(LIBCSRCS:.c=.o)

all:	makefile $(LIB) interpmain.o

$(LIB):	$(LIBOBJS)
	rm -f $(LIB)
	ar cq $(LIB) $(LIBOBJS)
	ranlib $(LIB)

# "make install" puts things in the official place
install:	makefile $(DESTDIR)/$(LIB) $(DESTDIR)/interpmain.o

$(DESTDIR)/$(LIB):	$(LIB)
		rm -f $(DESTDIR)/$(LIB)
		cp $(LIB) $(DESTDIR)
		ranlib $(DESTDIR)/$(LIB)

$(DESTDIR)/interpmain.o:	interpmain.o
		rm -f $(DESTDIR)/interpmain.o
		cp interpmain.o $(DESTDIR)

# "make clean" removes .o files and other cruft
clean:
		rm -f *.o core *~ *.bak *#

# "make sources" will do SCCS get on anything where SCCS file is newer.
sources:	$(SRCS) $(HDRS) make.template XDomain.ccP

UI=/usr/include
depend:
		cd $(VPATH); \
		g++ -MM $(SRCS) | cat make.template - > makefile.n; \
		mv -f makefile.n makefile

makefile:	make.template
		cd $(VPATH); make -f make.template sources depend
		if [ ! -f makefile ]; then ln -s $(VPATH)/makefile makefile; fi
		@echo makefile remade -- you must rerun make.
		exit 1

# Need to define LIBDIR for the interpreter
Interpreter.o:	Interpreter.cc
		$(GNU) $(GPPFLAGS) -DHELPDIR=\"$(HELPDIR)\" -c $(VPATH)/Interpreter.cc

# Commands to make some sources from templates

FloatState.h FloatState.cc : ScalarState.hP ScalarState.ccP
	cd $(VPATH); genclass -2 Float val double val ScalarState;\
	sed 's/"Float"/"FLOAT"/' Float.double.ScalarState.h > FloatState.h;\
	sed 's/"Float"/"FLOAT"/;s/"double"/"float"/' Float.double.ScalarState.cc > FloatState.cc;\
	rm Float.double.ScalarState.h;\
	rm Float.double.ScalarState.cc

IntState.h IntState.cc : ScalarState.hP ScalarState.ccP
	cd $(VPATH); genclass -2 Int val int val ScalarState;\
	sed 's/"Int"/"INT"/' Int.int.ScalarState.h > IntState.h;\
	sed 's/"Int"/"INT"/' Int.int.ScalarState.cc > IntState.cc;\
	rm Int.int.ScalarState.h;\
	rm Int.int.ScalarState.cc


FloatArrayState.h FloatArrayState.cc : ArrayState.hP ArrayState.ccP
	cd $(VPATH); genclass -2 Float val double val ArrayState; \
	mv Float.double.ArrayState.h FloatArrayState.h; \
	sed 's/"FloatARRAY/"FLOATARRAY/' \
		Float.double.ArrayState.cc > FloatArrayState.cc; \
	rm Float.double.ArrayState.cc

IntArrayState.h IntArrayState.cc : ArrayState.hP ArrayState.ccP
	cd $(VPATH); genclass -2 Int val int val ArrayState; \
	mv Int.int.ArrayState.h IntArrayState.h; \
	sed 's/"IntARRAY/"INTARRAY/' Int.int.ArrayState.cc > IntArrayState.cc; \
	rm Int.int.ArrayState.cc

# Don't add anything after the next line; makedepend will zap it.
# DO NOT DELETE THIS LINE -- make depend depends on it.

