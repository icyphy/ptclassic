# Makefile for Ptolemy graphical interface edg 5/23/90
# Version identification:
# $Id$
#
# Copyright (c) 1989 The Regents of the University of California.
#			All Rights Reserved.
# Originally written by: E. Goei
# Date of creation: 5/23/90
# Current version by J. Buck
#
# If this file's name is "make.template" and there is no makefile in
# this directory, do
#	cp make.template makefile
#	make depend
# This will add the dependencies to the makefile.
#
# root of source tree
ROOT	      = ../..
# VPATH points to the "real" source directory
VPATH         = $(ROOT)/src/pigiRpc
# Octtools root directory
OCTTOOLS      = $(ROOT)/octtools

# C compiler variables
CFLAGS        = -g -I$(OCTTOOLS)/include

# Rule for making .o file from .c file (the Gnu-make default rule breaks
# on Vaxes running older versions of Ultrix)
.c.o:
	$(CC) $(CFLAGS) -c $<

# C++ compiler variables
GXX	      = g++
GPPFLAGS      = -g -I$(ROOT)/src/kernel
GNULIB	      = /usr/gnu/lib
GNUINCLUDE    = $(GNULIB)/g++-include

# Linker variables
LINKER        = $(GNULIB)/gcc-ld
LINKOPTS      = -S
LDIR          = $(ROOT)/lib.$(ARCH)
LDFLAGS	      = $(LINKOPTS) -e start -dc -dp -Bstatic /lib/crt0.o \
		-L$(OCTTOOLS)/lib.$(ARCH) -L$(LDIR) -u_UserMain
LIBS	      = -lsdf -lddf -lde -lthor -lptolemy \
		-lg++ -loh -lrpc -llist -ltr -lutility -lst -lerrtrap \
		-luprintf -lport -lX11 -lm $(GNULIB)/gcc-gnulib -lc

HDRS	      = compile.h \
		edit.h \
		err.h \
		exec.h \
		kernelCalls.h \
		main.h \
		local.h \
		paramStructs.h \
		util.h \
		vemInterface.h \
		ganttIfc.h \
		octIfc.h \
		icon.h \
		misc.h \
		options.h \
		mkTerm.h \
		mkIcon.h \
		palette.h \
		octMacros.h

LIBCSRCS      = main.c \
		util.c \
		compile.c \
		paramStructs.c \
		vemInterface.c \
		edit.c \
		exec.c \
		err.c \
		ganttIfc.c \
		octIfc.c \
		icon.c \
		misc.c \
		mkTerm.c \
		mkIcon.c \
		palette.c \
		xfunctions.c \
		options.c


LIBCPPSRCS    = kernelCalls.cc XError.cc pigiLoader.cc


LIBSRCS = $(LIBCSRCS) $(LIBCPPSRCS)

SRCS = 	$(LIBSRCS) defpalettes.c
LIBOBJS = $(LIBCSRCS:.c=.o) $(LIBCPPSRCS:.cc=.o)

# Star definitions
SDF=../domains/sdf/stars
DDF=../domains/ddf/stars
DE =../domains/de/stars
Thor=../domains/thor/stars

SDFSRC=$(ROOT)/src/domains/sdf/stars
DDFSRC=$(ROOT)/src/domains/ddf/stars
DESRC =$(ROOT)/src/domains/de/stars
ThorSRC=$(ROOT)/src/domains/thor/stars

# include files for star names.  These define the symbols SDFSTARS, DESTARS,
# DDFSTARS, and ThorSTARS.

include $(SDFSRC)/sdfstars.mk
include $(DESRC)/destars.mk
include $(DDFSRC)/ddfstars.mk
include $(ThorSRC)/thorstars.mk

all:	makefile libpigi.a pigiRpc

libpigi.a:	$(LIBOBJS)
	rm -f libpigi.a
	ar cq libpigi.a $(LIBOBJS)
	ranlib libpigi.a

ALLSTARS=$(SDFSTARS) $(DESTARS) $(DDFSTARS) $(ThorSTARS)

pigiRpc:	defpalettes.o libpigi.a $(LDIR)/libptolemy.a \
		$(LDIR)/libsdf.a $(LDIR)/libddf.a $(LDIR)/libde.a \
		$(ALLSTARS)
	$(LINKER) $(LDFLAGS) defpalettes.o $(ALLSTARS) libpigi.a $(LIBS) -o pigiRpc

DESTLIB = $(ROOT)/lib.$(ARCH)/libpigi.a
DESTBIN = $(ROOT)/bin.$(ARCH)/pigiRpc

$(DESTLIB):	libpigi.a
		@echo Installing pigi library
		rm -f $(DESTLIB)
		cp libpigi.a $(DESTLIB)
		ranlib $(DESTLIB)

$(DESTBIN):	pigiRpc
		@echo Installing pigiRpc
		rm -f $(DESTBIN)
		cp pigiRpc $(DESTBIN)

install: makefile $(DESTLIB) $(DESTBIN)

# "make clean" removes .o files and other cruft
clean:
		rm -f *.o core *~ *.bak *#

# "make sources" will do SCCS get on anything where SCCS file is newer.
sources:	$(SRCS) $(HDRS) make.template

UI=/usr/include
depend:	
		makedepend -I$(GNUINCLUDE) -I$(ROOT)/src/kernel \
			   -I$(OCTTOOLS)/include $(SRCS)
# Get rid of Sun-specific system files
		sed -e 's?$(UI)/vm/faultcode.h??' \
		    -e 's?$(UI)/sys/fcntlcom.h??' makefile > makefile.n
		mv -f makefile.n makefile

makefile:	make.template
		cd $(VPATH); rm -f makefile; cp make.template makefile; \
		make -f make.template sources depend
		if [ ! -f makefile ]; then ln -s $(VPATH)/makefile makefile; fi
		@echo makefile remade -- you must rerun make.
		exit 1

# tags files for vi and emacs
tags:	$(SRCS)
	ctags $(SRCS)

TAGS:	$(SRCS)
	etags $(SRCS)

# Rule for compiling with g++
.SUFFIXES: .cc
.cc.o:
	$(GXX) $(GPPFLAGS) -c  $<

# print out source file names
printsrcs:;	@echo "$(SRCS)"
printhdrs:;  @echo "$(HDRS)"
printfiles:; @echo "$(SRCS) $(HDRS) $(MAKEFILE) $(MISCFILES)"

# Don't add anything after the next line; makedepend will zap it.
# DO NOT DELETE THIS LINE -- make depend depends on it.

