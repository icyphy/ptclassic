# Test suite for predicates in pitcl.
#
# @Author: Edward A. Lee
#
# @Version: @(#)testPredicates.itcl	1.5   04/04/97
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

if {[string compare test [info procs test]] == 1} then { 
    source $TYCHO/kernel/test/testDefs.tcl
} {}

# Uncomment this to get a full report, or set in your Tcl shell window.
# set VERBOSE 1

# Set the following to avoid endless calls to exit.
set reallyExit 0

######################################################################
#### setup
# Create a hierarchical universe x with galaxy x.y and populate with blocks.

test predicates-0 {create a test universe} {
    namespace ::pitcl {
        defWormhole ymw SDF DE {} {
            addBlock z PulseGen
            galaxyPort out z.output
        }
        defGalaxy zm SDF {
            addBlock e XMgraph
            galaxyPort in e.input
        }
        addUniverse x SDF
        addBlock y ymw
        addBlock b Const
        addBlock c Add
        addBlock z zm
        connect .x.y.out .x.c.input
        connect .x.b.output .x.c.input
        connect .x.c.output .x.z.in
    }
} {}

######################################################################
#### connect

test predicates-1 {Check isWormhole} {
    ::pitcl::isWormhole .x.y
} {1}

test predicates-2 {isWormhole on a star} {
    ::pitcl::isWormhole .x.b
} {0}

test predicates-3 {isWormhole on a galaxy} {
    ::pitcl::isWormhole .x.z
} {0}

test predicates-4 {isGalaxy on a galaxy} {
    ::pitcl::isGalaxy .x.z
} {1}

test predicates-5 {isGalaxy on a star} {
    ::pitcl::isGalaxy .x.b
} {0}

test predicates-6 {isGalaxy on a wormhole} {
    ::pitcl::isGalaxy .x.y
} {0}

test predicates-7 {isMultiPort on a simple port} {
    ::pitcl::isMultiPort .x.b.output
} {0}

test predicates-8 {isMultiPort on a star multi port} {
    ::pitcl::isMultiPort .x.z.e.input
} {1}

test predicates-9 {isMultiPort on a port within a star multi port} {
    ::pitcl::isMultiPort .x.z.e.input#1
} {0}

test predicates-10 {isMultiPort on a galaxy multi port} {
    ::pitcl::isMultiPort .x.z.in
} {1}

test predicates-11 {isMultiPort on a galaxy simple port} {
    ::pitcl::isMultiPort .x.y.out
} {0}

doneTests
