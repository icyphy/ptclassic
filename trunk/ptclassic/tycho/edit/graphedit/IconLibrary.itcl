##########################################################################
# Version: @(#)Index.itcl	1.13 02/25/97
# Author: John Reekie
#
# Copyright (c) 1996-1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#                                                         COPYRIGHTENDKEY
##########################################################################


##########################################################################
#### IconIndex
#
# The _IconIndex_ model is a model for a library of "icons" for
# dataflow graphs and such.
class ::tycho::IconIndex {
    inherit ::tycho::Model

    constructor {args} {}
    destructor {}
    
    #################################################################
    ####                        options                          ####


    #################################################################
    ####                     public methods                      ####

    # Assign new data to en existing icon
    method assign {name data}
    
    # Get the children of an icon
    method children {type name}
    
    # Add an icon to the array
    method icon {name data args}
    
    # Get the attributes of an icon
    method iconattrs {name}

    # Get an attribute or attributes of an icon
    method iconcget {name attribute}

    # Configure the icon with one or more attributes
    method iconconfigure {name args}
    
    # Delete an icon
    method icondelete {name}

    # Add a nested icon to the array
    method iconin {context name data args}
    
    # Test if an icon is present
    method exists {name}

    # Return an icon
    method get {name}

    # Get the root entries
    method roots {type}
    
    #################################################################
    ####                  protected methods                      ####
    
    # Evaluate code in this object's context
    protected method evalInSpecificContext {args} {eval $args}
}

########################################################################
#### constructor
#
body ::tycho::IconIndex::constructor {args} {	
    # By default, use a period as separator
    configure -separator "."

    # Evaluate options
    eval configure $args

    # The icon entity type
    defineEntityType icon -valued 1

    # The port entity type
    defineEntityType port -valued 1
}

########################################################################
#### assign
#
# Assign new data to an existing icon. Flag an error if the icon
# does not exist. Return the inverse command.
#
body ::tycho::IconIndex::assign {name value} {
    _verify icon $name
    _assign icon $name $value
}

########################################################################
#### children
#
# Return the children of an icon.
#
body ::tycho::IconIndex::children {type name} {
    _children type $name
}

########################################################################
#### icon
#
# Add a new icon to the array. Flag an error if the icon
# already exists. Additional arguments are the initial values
# of icon attributes. Return the inverse command.
#
body ::tycho::IconIndex::icon {name value args} {
    _verifynot icon $name
    _entity icon {} $name [concat [list $value] $args]
}

########################################################################
#### iconattrs
#
# Return a list containing the attributes of the icon as a flat
# attribute-value list.
#
body ::tycho::IconIndex::iconattrs {name} {
    _verify icon $name
    _attributes icon $name
}

########################################################################
#### iconcget
#
# Get an attribute of a data icon. Flag an error if the icon
# does not exist or the attribute does not.
#
body ::tycho::IconIndex::iconcget {name attribute} {
    _verify icon $name
    _cget icon $name $attribute
}

########################################################################
#### iconconfigure
#
# Configure the given icon and return the inverse command.  The
# argument list is a flat list of attribute-value pairs.
# Flag an error if the icon does not exist.
# 
body ::tycho::IconIndex::iconconfigure {name args} {
    _verify icon $name
    _configure icon $name $args
}

########################################################################
#### icondelete
#
# Delete an icon. Flag an error if the icon does not exist.
# Return the inverse command.
#
body ::tycho::IconIndex::icondelete {name} {
    _verify icon $name
    _delete icon $name
}

########################################################################
#### iconin
#
# Add a new nested icon to the array. Flag an error if the icon
# already exists. Additional arguments are the initial values
# of icon attributes. Return the inverse command.
#
body ::tycho::IconIndex::iconin {context name value args} {
    _verifynotin icon $context $name
    _entity icon $context $name [concat [list $value] $args]
}

########################################################################
#### exists
#
# Returns true if the icon exists, else false.
#
body ::tycho::IconIndex::exists {name} {
    _exists icon $name
}

########################################################################
#### get
#
# Get the value of an icon. Flag an error if the icon does
# not exist.
#
body ::tycho::IconIndex::get {name} {
    _verify icon $name
    _get icon $name
}

########################################################################
#### roots
#
# Return the root entries.
#
body ::tycho::IconIndex::roots {type} {
    _roots $type
}

