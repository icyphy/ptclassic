#########################################################################
# @Version: $Id$
# @Author: John Reekie
#
# @Copyright (c) 1997-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
##########################################################################


# Explicitly load the superclass. I don't really know why this is
# needed, but the common arrays get upset otherwise.
::tycho::slateLoadSuper SmartLine

##########################################################################
## Net
#
# A Net is a descendent of SmartLine, that adds application-specific
# behaviour.
#
# <p><a name="#options"></a><b>Options</b>
#
# <ul>
#
# <li><b>-fromaspact</b>:
# The aspect of the source item being connected to.
#
# <li><b>-toaspact</b>:
# The aspect of the target item being connected to.
#
# </ul>
#
# <p><b>Bugs</b>: (none)
#
# <p><b>Example</b>:
#
# <p><b>Enhancements</b>: (none)
#
# <p><b>Links</b>
# 
# <ul>
# <li><a href="../slate/doc/internals/howtoread.html">Reading <i>ComplexItem</i>
# documentation</a>.
# <li><a href="../slate/doc/internals/items.html">Complex item classes</a>.
# </ul>
#
class ::tycho::Net {
    inherit ::tycho::SmartLine

    ###################################################################
    ####                         public procs                      ####

    # Update the *-fromaspect* option
    proc _fromaspect {id canvas slate fromaspect}

    # Update the *-toaspect* option
    proc _toaspect {id canvas slate toaspect}

    # Create a new item
    proc construct {id canvas slate tags x y args}

    ###################################################################
    ####                         private variables                 ####

    # The virtual "method" table
    private common methodtable

    # Default values of this item's options
    private common optiondefault

    ###################################################################
    ####                       class initialization                ####

    #### Set method table
    array set methodtable [array get ::tycho::SmartLine::methodtable]

    set methodtable(_fromaspect) ::tycho::Net::_fromaspect
    set methodtable(_toaspect)   ::tycho::Net::_toaspect
    set methodtable(construct)   ::tycho::Net::construct

    #### Set option defaults
    array set optiondefault [array get ::tycho::SmartLine::optiondefault]

    set optiondefault(-fromaspect) "terminal"
    set optiondefault(-toaspect)   "terminal"

    # FIXME: For testing wide lines. Remoave after 4 April 1998.
    set optiondefault(-capstyle) projecting
}

##########################################################################
## -fromaspect option configuration
#
body ::tycho::Net::_fromaspect {id canvas slate fromaspect} {
    set option(fromaspect$id) $fromaspect
}

##########################################################################
## -toaspect option configuration
#
body ::tycho::Net::_toaspect {id canvas slate toaspect} {
    set option(toaspect$id) $toaspect
}

##########################################################################
#### construct
#
body ::tycho::Net::construct {id canvas slate tags x y args} {
    ::tycho::getalloptions options args

    # Initialize the options
    foreach {opt val} [concat [array get optiondefault] $options] {
        set option([string trimleft $opt -]$id) $val
    }

    # Call superclass conctructor
    eval [list ::tycho::SmartLine::_construct \
	    $id $canvas $slate $tags $x $y] \
	    $args
}
