
#
# @Author: John Reekie
#
# @Version: $Id$
#
# @Copyright (c) 1996- The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################


#######################################################################
#### PtButtonPanel
#
# A <i>PtButtonPanel</i> is a class that displays a set of buttons
# for controlling a simulation.
#
class ::tycho::PtButtonPanel {
    inherit ::tycho::View

    constructor {args} {}
    destructor {}
    
    ###################################################################
    ####                            options                        ####

    # The simulation object
    public variable simulation ""

    ###################################################################
    ####                         public methods                    ####

    # Test if we're paused
    method isPaused {}

    # Pause the simulation
    method pause {}

    # Resume the simulation
    method resume {}

    # Toggle the pause state
    method togglePause {}

    # Start the simulation
    method start {}

    # Stop the simulation
    method stop {}

    ###################################################################
    ####                     private variables                     ####

    # The paused flag
    private variable _isPaused false

    ###################################################################
    ####                   class initialization                    ####

    # Create the icon images
    image create photo goIcon \
	    -file [file join $env(PTII_LIBRARY) img go.gif]
    image create photo pauseIcon \
	    -file [file join $env(PTII_LIBRARY) img pause.gif]
    image create photo stopIcon \
	    -file [file join $env(PTII_LIBRARY) img stop.gif]

}

#######################################################################
#### constructor
#
body ::tycho::PtButtonPanel::constructor {args} {
    # Use a button box to hold the buttons
    itk_component add bbox {
        ::tycho::ButtonBox $itk_interior.bbox -ringwidth 0
    } {
	keep -background -cursor -font -padx -pady
    }
    pack $itk_component(bbox) -side bottom -expand no -padx 2 -pady 4

    # Initialize args
    eval itk_initialize $args

    # Now that we have the -orient option set, add the buttons
    $itk_component(bbox) add start -image goIcon \
	    -borderwidth 1 -width 28 -command "$this start"
    $itk_component(bbox) add pause -image pauseIcon \
	    -borderwidth 1 -width 28 -command "$this togglePause"
    $itk_component(bbox) add stop -image stopIcon \
	    -borderwidth 1 -width 28 -command "$this stop"

    # Set the default button appearance
    stop
}


    ###################################################################
    ###################################################################
    ####                      public methods                       ####

#######################################################################
#### isPaused
#
# Test if we're paused.
#
body ::tycho::PtButtonPanel::isPaused {} {
    return $_isPaused
}

#######################################################################
#### pause
#
# Pause the simulation.
#
body ::tycho::PtButtonPanel::pause {} {
    # Call the simulation
    if { $simulation != "" } {
	$simulation pause
    }

    # Change button states
    set bbox $itk_component(bbox)
    $bbox buttonconfigure pause  -relief sunken -state normal
    $bbox buttonconfigure start  -relief raised -state normal
    ### $bbox buttonconfigure stop   -relief raised -state normal

    set _isPaused 1
    putStatus "Paused"
}

#######################################################################
#### resume
#
# Resume the simulation.
#
body ::tycho::PtButtonPanel::resume {} {
    # Call the simulation
    if { $simulation != "" } {
	$simulation resume
    }

    # Change button states
    set bbox $itk_component(bbox)
    $bbox buttonconfigure start  -relief sunken -state disabled
    $bbox buttonconfigure pause  -relief raised -state normal
    #### $bbox buttonconfigure stop   -relief raised -state normal

    set _isPaused 0
    putStatus "Running"
}

#######################################################################
#### start
#
# Start the simulation.
#
body ::tycho::PtButtonPanel::start {} {
    puts "PtButtonPanel::start \"$simulation\""

    # Call the simulation
    if { $simulation != "" } {
	$simulation start
    }

    # Change button states
    set bbox $itk_component(bbox)
    $bbox buttonconfigure start  -relief sunken -state disabled
    $bbox buttonconfigure pause  -relief raised -state normal 
    $bbox buttonconfigure stop   -relief raised -state normal

    set _isPaused 0
    putStatus "Running"
}

#######################################################################
#### stop
#
# Stop the simulation.
#
body ::tycho::PtButtonPanel::stop {} {
    # Call the simulation
    if { $simulation != "" } {
	$simulation stop
    }

    # Change button states
    set bbox $itk_component(bbox)
    $bbox buttonconfigure start  -relief raised -state normal
    $bbox buttonconfigure pause  -relief raised -state disabled 
    $bbox buttonconfigure stop   -relief sunken -state disabled

    set _isPaused 0
    putStatus "Stopped"
}

#######################################################################
#### togglePause
#
# Toggle the pause state
#
body ::tycho::PtButtonPanel::togglePause {} {
    if [isPaused] {
	resume
    } else {
	pause
    }
}
