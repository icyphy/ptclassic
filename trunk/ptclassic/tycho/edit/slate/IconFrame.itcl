#########################################################################
# @Version: $Id$
# @Author: H. John Reekie
#
# @Copyright (c) 1996-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
##########################################################################


# Explicitly load the superclass. I don't really know why this is
# needed, but the common arrays get upset otherwise.
namespace ::tycho {
    if { [::info classes Connectible] == "" } {
	uplevel #0 {source $tychoslate/Connectible.itcl}
    }
    if { [::info classes LabeledFrame] == "" } {
	uplevel #0 {source $tychoslate/LabeledFrame.itcl}
    }
}

########################################################################
## IconFrame
#
# <i>IconFrame</i> is a Frame with connecting terminals on it, intended
# for use as an icon in block diagrams and the like. It has just two
# coordinates, which are the _x_ and _y_ coordinates of its anchor point.
# Currently, the anchor point can only be in the center of the icon.
# 
# <p><b>Options</b>:
# 
# _IconFrame_ has all options of <a href="Connectible.html">Connectible</a>
# and <a href="LabeledFrame">LabeledFrame</a>. In addition, is the options:
#
# <ul>
# <li><b>-height</b>
# The height of the icon frame, in pixels.
# <li><b>-width</b>
# The width of the icon frame, in pixels.
#
# </ul>
# 
# <p><b>Components</b>
#
# _IconFrame_ has all components of <a href="Connectible.html">Connectible</a>
# and <a href="LabeledFrame">LabeledFrame</a>.
# 
# <p><b>Bugs</b>: (none)
# 
# <p><b>Example</b>: Create an icon:
# <tcl quiet><pre>
#   source $tycho/editors/slate/doc/internals/newslate.itcl
#   .t.s create IconFrame 100 100 &#92
#       -inputs {0 50 50 0} &#92
#       -outputs 2 &#92
#       -color green &#92
#       -graphics {line 20 20 80 80} &#92
#       -tags moveable &#92
#       -intype {Terminal -type input -style blob -fill red} &#92
#       -outtype {Terminal -type output -style doublearrow -fill blue}
# </pre></tcl>
# 
# <p><b>Enhancements</b>: Would a <b>-anchor</b> option be useful?
#
# <p><b>Links</b>
# 
# <ul>
# <li><a href="../internals/howtoread.html">Reading <i>ComplexItem</i>
# documentation</a>.
# <li><a href="../internals/items.html">Complex item classes</a>.
# </ul>
#
class ::tycho::IconFrame {
    inherit ::tycho::Connectible

    ###################################################################
    ####                         public procs                      ####

    # Update the *-height* option
    proc _height {id canvas slate height}

    # Update the *-width* option
    proc _width {id canvas slate width}

    # Create a new item
    proc construct {id canvas slate tags x y args}

    # Get or set the coordinates of the IconFrame's icon
    proc coords {id canvas slate args}
    
    # Draw a highlight around the frame
    proc highlight {id canvas slate args}
    
    ###################################################################
    ####                           protected procs                 ####

    # Update the coordinates
    proc _coords {id canvas slate x y}
    
   ###################################################################
    ####                         protected variables               ####

    # All methods are looked up through a table
    common methodtable

    # All options have a default value
    common optiondefault

    ###################################################################
    ####                       class initialization                ####

    #### Set method table
    array set methodtable [array get ::tycho::Connectible::methodtable]
    array set methodtable [@scope ::tycho::LabeledFrame array get methodtable]

    set methodtable(_height)   ::tycho::IconFrame::_height
    set methodtable(_width)    ::tycho::IconFrame::_width

    set methodtable(construct)   ::tycho::IconFrame::construct
    set methodtable(coords)      ::tycho::IconFrame::coords
    set methodtable(highlight)   ::tycho::IconFrame::highlight

    #### Set option defaults
    array set optiondefault [array get ::tycho::Connectible::optiondefault]
    array set optiondefault [@scope ::tycho::LabeledFrame \
            array get optiondefault]
    set optiondefault(-height) 40
    set optiondefault(-text)   "NoName"
    set optiondefault(-width)  60
}

##########################################################################
## -height option configuration
#
body ::tycho::IconFrame::_height {id canvas slate height} {
    set option(height$id) $height
    eval _coords $id $canvas $slate [coords $id $canvas $slate]
}

##########################################################################
## -width option configuration
#
body ::tycho::IconFrame::_width {id canvas slate width} {
    set option(width$id) $width
    eval _coords $id $canvas $slate [coords $id $canvas $slate]
}

##########################################################################
#### _coords
#
body ::tycho::IconFrame::_coords {id canvas slate x y} {
    # Alter the coordinates of the frame
    set coords [eval ::tycho::Rectangle::stretch $x $y $x $y \
        [expr $option(width$id)/2] [expr $option(height$id)/2]]
    eval ::tycho::Frame::coords $id $canvas $slate $coords

    # Move the inputs and outputs
    eval ::tycho::Connectible::coords $id $canvas $slate $coords
}

##########################################################################
#### construct
#
body ::tycho::IconFrame::construct {id canvas slate tags x y args} {
    # Initialize the options
    foreach {opt val} [concat [array get optiondefault] $args] {
	set option([string trimleft $opt -]$id) $val
    }

    # Figure out the coordinates of the bounding Frame
    set coords [::tycho::Rectangle::stretch $x $y $x $y \
        [expr $option(width$id)/2] [expr $option(height$id)/2]]

    # Create the Frame.
    eval ::tycho::LabeledFrame::_construct \
	    $id $canvas $slate [list $tags] $coords

    # Create the input and output ports
    # ::tycho::Connectible::_inputs  $id $canvas $slate $option(inputs$id)
    # ::tycho::Connectible::_outputs $id $canvas $slate $option(outputs$id)
}

##########################################################################
#### coords
#
body ::tycho::IconFrame::coords {id canvas slate args} {
    # No args: just return coordinates
    if { $args == "" } {
        ::tycho::assign x0 y0 x1 y1 [$canvas coords $primary($id)]
        return [list [expr ($x0+$x1)/2] [expr ($y0+$y1)/2]]
    }

    # Alter the coordinates of the frame
    eval _coords $id $canvas $slate $args
}

##########################################################################
#### highlight
#
# Draw a highlight around the main icon. This is so the highlight
# appears around the icon, not around the outside of the terminals,
# which looks a bit rough.
#
body ::tycho::IconFrame::highlight {id canvas slate args} {
    eval $canvas create rectangle [$canvas bbox $primary($id)] $args
    $slate lower highlight.$id $id
}
