#########################################################################
# @Version: $Id$
# @Author: John Reekie
#
# @Copyright (c) 1996 The Regents of the University of California.
# All rights reserved.
#  
# Permission is	hereby granted,	without	written	agreement and without
# license or royalty fees, to use, copy, modify, and distribute	this
# software and its documentation for any purpose, provided that	the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO	EVENT SHALL THE	UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT,	SPECIAL, INCIDENTAL, OR	CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN	ADVISED	OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES	OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.	THE SOFTWARE
# PROVIDED HEREUNDER IS	ON AN "AS IS" BASIS, AND THE UNIVERSITY	OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT,	UPDATES,
# ENHANCEMENTS,	OR MODIFICATIONS.
#							  COPYRIGHTENDKEY
##########################################################################


# Explicitly load the superclass. I don't really know why this is
# needed, but the common arrays get upset otherwise.
namespace ::tycho {
    if { [::info classes LabelledItem] == "" } {
		uplevel #0 {source $tychoslate/LabelledItem.itcl}
    }
}

##########################################################################
## LabelledFrame
#
# <i>LabelledFrame</i> is a frame with a text label and graphics.
# In all other respects, it can be treated like any other rectangle item.
# At present, the graphics do not take account of the width
# of the 3D border.
#
# <p><b>Options</b>
#
# <dl>
# <dt><dd>
# <dl>
#
# <dt><b>-anchor</b>
# <dd>See <a href="LabelledItem.html">LabelledItem</a>.
#
# <dt><b>-borderwidth</b>
# <dd>See <a href="Frame.html">Frame</a>
#
# <dt><b>-color</b>
# <dd>See <a href="Frame.html">Frame</a>
#
# <dt><b>-graphics</b>
# <dd>See <a href="LabelledItem.html">LabelledItem</a>.
#
# <dt><b>-relief</b>
# <dd>See <a href="Frame.html">Frame</a>
#
# <dt><b>-text</b>
# <dd>See <a href="LabelledItem.html">LabelledItem</a>.
#
# </dl></dl>
#
# <p><b>Bugs</b>: (none)
#
# <p><b>Example</b>: Create a labelled rectangle:
# <tcl quiet><pre>
#  source $tycho/editors/slate/doc/internals/newslate.itcl
#  $slate create LabelledFrame 40 40 100 80 -color green &#92
#          -text Foo -tags moveable &#92
#          -graphics "Frame 25 25 75 75 -color green -relief sunken"
# </pre></tcl>
#
# <p><b>Enhancements</b>: (none)
#
# <p><b>Links</b>
# 
# <ul>
# <li><a href="../internals/howtoread.html">Reading <i>ComplexItem</i>
# documentation</a>.
# <li><a href="../internals/items.html">Complex item classes</a>.
# </ul>
#
#
# <a href="../internals/howtoread.html">Reading <i>Picture</i> documentation</a>.
#
class ::tycho::LabelledFrame {
    inherit ::tycho::LabelledItem

    # Create a new item
    proc construct {id canvas slate tags x0 y0 x1 y1 args}

    ###################################################################
    ####                         public procs                      ####

    # Set or get the item's coordinates
    proc coords {id canvas slate args}
    
    ###################################################################
    ####                         protected variables               ####

    # The virtual "method" table
    common methodtable

    # Default values of this item's options
    common optiondefault

    # Labelled frames are rectangular in shape
    common shape "rectangle"

    ###################################################################
    ####                       class initialization                ####

    #### Set method table
    array set methodtable [array get ::tycho::Frame::methodtable]
    array set methodtable [array get ::tycho::LabelledItem::methodtable]

    set methodtable(construct) ::tycho::LabelledFrame::construct
    set methodtable(coords)    ::tycho::LabelledFrame::coords

    #### Set option defaults
    array set optiondefault [array get ::tycho::Frame::optiondefault]
    array set optiondefault [array get ::tycho::LabelledItem::optiondefault]
}

##########################################################################
#### construct
#
body ::tycho::LabelledFrame::construct {id canvas slate tags x0 y0 x1 y1 args} {
    # Initialize the options
    foreach {option value} [concat [array get optiondefault] $args] {
        set _[string trimleft $option -]($id) $value
    }

    # Create the Frame
    eval ::tycho::Frame::construct \
    	$id $canvas $slate [list $tags] $x0 $y0 $x1 $y1 $args

    # Create the graphics and text label -- do not change the order!
    _text     $id $canvas $slate $_text($id)
    _graphics $id $canvas $slate $_graphics($id)
}

##########################################################################
#### coords
#
# Set or read the frame's coordinates
#
body ::tycho::LabelledFrame::coords {id canvas slate args} {
    # No args: just return coordinates
    if { $args == "" } {
        return [$canvas coords $primary($id)]
    }

    # Move the frame itself
    eval ::tycho::Frame::coords $id $canvas $slate $args

    # Move and scale the text and graphics FIXME: Inefficient
    _graphics $id $canvas $slate $_graphics($id)
    _anchor   $id $canvas $slate $_anchor($id)
}
