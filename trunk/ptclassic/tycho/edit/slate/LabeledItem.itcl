#########################################################################
# @Version: @(#)LabeledItem.itcl	1.23 07/29/98
# @Author: John Reekie
#
# @Copyright (c) 1996-1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
##########################################################################


##########################################################################
## LabeledItem
#
# An item with a label attached to it, and optional graphics drawn in it.
# This class is the abstract superclass of the LabeledOval, 
# LabeledRect, and LabeledFrame items.
#
# <p><a name="LabeledItem class Options"></a><b>Options</b>
#
# <ul>
# <li><b>-font</b>:
# The font to use for the label. Currently, this must be a valid X font.
#
# <li><b>-graphics</b>:
# The graphics to draw on the item. This option consists of zero or
# more item specs, where an item spec is the item type, coordinates, and
# options. The coordinates are specified as a percentage of the item
# size. Item specs are separates by newlines or semi-colons.
#
# <li><b>-text</b>:
# The label of the item. If there are graphics also displayed, the
# label is placed outside the item; if not, the label is displayed
# outside the item.  By default, this option is "", which means that
# nothing is displayed.
#
# <li><b>-textanchor</b>:
# The anchor position of the text label relative to the region
# occupied by the item. The anchor can be any of the compass points --
# <i>n</i>, <i>s</i>, <i>e</i>, <i>w</i>, <i>ne</i>, <i>se</i>,
# <i>nw</i>, <i>sw</i> -- and <i>c</i> or <i>center</i>. If it is
# <i>c</i> or <i>center</i> and there are graphics drawn on the item,
# the label is drawn underneath the item (as though the anchor was
# <i>s</i>).
#
# </ul>
#
# <p><b>Components</b>
#
# <ul>
# <li><b>label</b>:
# The editable text label.
# </ul>
#
# <p><b>Bugs</b>
#
# If there are graphics and the text anchor is "e" or "w," the label
# is displayed inside the icon not outside.
#
# <p><b>Enhancements</b>
#
# <ul>
# <li>There are four possible positions for the label (on the left and right
# sides, near the top and bottom of that edge) that cannot be specified.
# <li>A *-scaling* option is needed with values none, x, y, min, and max.
# </ul>
#
# <p><b>Links</b>
# 
# <ul>
# <li><a href="../internals/howtoread.html">Reading <i>ComplexItem</i>
# documentation</a>.
# <li><a href="../internals/items.html">Complex item classes</a>.
# </ul>
#
class ::tycho::LabeledItem {
    inherit ::tycho::ComplexItem

    ###################################################################
    ####                            options                        ####

    # Update the *-font* option
    proc _font {id canvas slate font}

    # Update the *-graphics* option
    proc _graphics {id canvas slate graphics args}

    # Update the *-text* option
    proc _text {id canvas slate text}

    # Update the *-textanchor* option
    proc _textanchor {id canvas slate textanchor args}
    
    ###################################################################
    ####                           protected procs                 ####

    # Update the text and graphics after a change in coordinates
    protected proc coords {id canvas slate a0 b0 a1 b1 x0 y0 x1 y1}

    ###################################################################
    ####                           private variables               ####

    # The virtual "method" table
    private common methodtable

    # Default values of this item's options
    private common optiondefault
}   

###################################################################
####                       class initialization                ####
namespace eval ::tycho::LabeledItem {
    #### Set method table
    array set methodtable [array get ::tycho::ComplexItem::methodtable]

    set methodtable(_font)       ::tycho::LabeledItem::_font
    set methodtable(_graphics)   ::tycho::LabeledItem::_graphics
    set methodtable(_text)       ::tycho::LabeledItem::_text
    set methodtable(_textanchor) ::tycho::LabeledItem::_textanchor

    #### Set option defaults
    array set optiondefault [array get ::tycho::ComplexItem::optiondefault]

    set optiondefault(-font) \
	    -adobe-helvetica-medium-r-normal-*-*-120-75-75-*-*-iso8859-*
    set optiondefault(-graphics)   ""
    set optiondefault(-text)	   ""
    set optiondefault(-textanchor) "center"
}


##########################################################################
## -font option configuration
#
body ::tycho::LabeledItem::_font {id canvas slate font} {
    set option(font$id) $font
    $canvas itemconfigure $component(label$id) -font $font
}

##########################################################################
## -graphics option configuration
#
# Draw the specified items specified using coordinates in
# percent of the parent item's size. <i>Do not specify tags.</i>
# Optional arguments are the new coordinates of the item's region
# which will be used to scale the graphics. If not supplied, the
# slate's region{} method will be used.
# Non-rectangular (or oval) sub-classes will need to override.
#
body ::tycho::LabeledItem::_graphics {id canvas slate graphics args} {
    set option(graphics$id) $graphics

    # Delete existing graphics
    $slate delete graphics.$id

    # If graphics are empty, do nothing
    if { $graphics == "" } {
        return
    }

    # Get my hierarchy tags
    set htags [$canvas gettags $primary($id)]

    # Draw each item at full scale
    set tags [concat graphics.$id [$canvas gettags $primary($id)]]
    foreach spec [split $graphics ";\n"] {
	if { [string trim $spec " \t"] != "" } {
	    eval [list $slate createchild* $id $htags graphics.$id] $spec
	}
    }

    # Move and scale them to fit into this item
    if { $args == "" } {
	set args [$slate region $id]
    }
    ::tycho::assign x0 y0 x1 y1 $args
    $slate move graphics.$id $x0 $y0
    $slate scale graphics.$id $x0 $y0 \
    		[expr ($x1-$x0)/100.0] \
    		[expr ($y1-$y0)/100.0]
    
    # Move the label outside the item if necessary
    if { $graphics != "" && $option(text$id) != "" } {
    	 _textanchor $id $canvas $slate $option(textanchor$id)
    }
}

##########################################################################
## -text option configuration
#
body ::tycho::LabeledItem::_text {id canvas slate text} {
    if { $text != "" } {
        if { ! [::info exists component(label$id)] } {
	    ::tycho::assign x0 y0 x1 y1 [$canvas coords $primary($id)]
	    set component(label$id) [$canvas create text \
                    [expr ($x0+$x1)/2] \
		    [expr ($y0+$y1)/2] \
                    -text $text \
		    -font $option(font$id) \
		    -tags  [$canvas gettags $primary($id)]]
            _textanchor $id $canvas $slate $option(textanchor$id)
        } else {
	    $canvas itemconfigure $component(label$id) -text $text
	}
    } else {
        catch {$canvas delete $component(label$id)}
    }
    set option(text$id) $text
}

##########################################################################
## -textanchor option configuration
#
# Update the text anchor and the text item's position. Optional
# arguments are the new coordinates of the item's region.
# Non-rectangular (or oval) sub-classes will need to override.
#
body ::tycho::LabeledItem::_textanchor {id canvas slate textanchor args} {
    set option(textanchor$id) $textanchor

    # Only process if there's is a label
    if { $option(text$id) != "" } {
	# Move the label to the anchor point
	if { $args == "" } {
	    set args [$canvas coords $primary($id)]
	}
        eval $canvas coords $component(label$id) \
		[eval ::tycho::Rectangle::feature $args $textanchor]
	    
	# Change the text item anchor. Note that we do this
	# even if the anchor hasn't changed, because the
	# graphics may have been added or deleted.
	# If there are no graphics, place inside the item, else place
	# outside the item
        if { $option(graphics$id) == "" } {
	    # No graphics, so just place inside the item
            $canvas itemconfigure $component(label$id) -anchor $textanchor
        } else {
	    # If there are graphics, place outside the item
            if { $textanchor == "center" || $textanchor == "c" } {
                set textanchor "s"
                eval $canvas coords $component(label$id) \
			[eval ::tycho::Rectangle::feature $args $textanchor]
            } elseif { $textanchor == "e" } {
                set textanchor w
            } elseif { $textanchor == "w" } {
                set textanchor e
            }
            $canvas itemconfigure $component(label$id) \
                    -anchor [::tycho::Shape::compass $textanchor "ud"]
        }
    }
}

##########################################################################
## coords
#
# Update the graphics and text label position after a change in
# coordinates. The old and new coordinates must be supplied as
# arguments so that the graphics can be scaledproperly.
#
body ::tycho::LabeledItem::coords {id canvas slate a0 b0 a1 b1 x0 y0 x1 y1} {
    # Move the text label
    _textanchor $id $canvas $slate $option(textanchor$id) $x0 $y0 $x1 $y1

    # Move and scale the graphics according to old and new coordinates
    $slate move graphics.$id [expr $x0-$a0] [expr $y0-$b0]
    $slate scale graphics.$id $x0 $y0 \
    		[expr double($x1-$x0)/($a1-$a0)] \
    		[expr double($y1-$y0)/($b1-$b0)]
}
