##########################################################################
# Version: $Id$
# Author: H. John Reekie
#
# Copyright (c) %Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#                                                         COPYRIGHTENDKEY
##########################################################################

 
#######################################################################
## Repeater
#
# An interactor that repeatedly invokes a command while the mouse
# button is held down.
#
class ::tycho::Repeater {
    inherit ::tycho::Interactor

    constructor {{s {}} {c {}} args} {
	set slate $s
	set canvas $c

	eval configure $args
    }

    destructor {}
    
    ###################################################################
    ####                            options                        ####

    # The command to execute repeatedly.
    public variable command ""

    # The time delay before next execution. 400 ms by default.
    public variable delay 400

    # The time interval between executions. 100 ms by default.
    public variable interval 100


    ###################################################################
    ####                         public methods                    ####

    # Attach the interactor to the current picture
    method activate {t x y} {}

    # Bind the interactor to a picture or tag
    method bind {t args} {}

    # Remove the interactor from the current picture
    method deactivate {} {}

    # Reinvoke the activation command
    method reactivate {} {}

    ## Remove the binding of an interactor to a picture or tag
    method unbind {t} {}

    ###################################################################
    ####                      protected variables                  ####

    # The id of the "after" script, so it can be cancelled
    protected variable afterid
 }


#######################################################################
#### activate target x y
#
# Activate the interactor.
#
body ::tycho::Repeater::activate {t x y} {
    # Remember the tag/object, for use in deactivate
    set tag $t

    # Set the target. If the target argument is
    # in fact a tag, get the current picture from the slate.
    if { [isObject $t] } {
	target $t
    } else {
	target [$slate find withtag current]
    }

    # Set up the bindings. Note: the bindings are set to the tag,
    # not to the current object.
    foreach b $button {
	$slate bind $tag \
		[eventcode Release -button $b ] \
		"$this deactivate"
    }

    # Execute the user-specified activation command with the
    # target as argument
    if { $command != "" } {
	uplevel #0 apply [list $command] $this $target $x $y
    }

    # Set up the delayed call to reactivate{}. Use catch in case
    # something catastrophic happens and the interactor has disappeared.
    set afterid [after $delay [list catch [list $this reactivate]]]
}


#######################################################################
#### bind
#
body ::tycho::Repeater::bind {t args} {
    foreach b $button {
	$slate bind $t \
		[eventcode Click -button $b] \
		"$this activate $t %x %y"
    }
}


#######################################################################
#### deactivate
#
# Remove this interactor from the current picture. This removes
# the mouse bindings, cancels the delayed command, and clears the target.
#
# FIXME: If the activate gets called again before the next
# call to reactivate, then there'll be two sets of delayed
# calls operating.
#
body ::tycho::Repeater::deactivate {} {
    # Cancel the delayed event
    after cancel $afterid
    set afterid ""

    # Clear the target 
    set target ""

   # Remove the bindings
    foreach b $button {
	$slate bind $tag \
		[eventcode Release -button $b ] \
		{}
    }
}


#######################################################################
#### reactivate
#
# Reinvoke the interactor's activation command, and set up to
# call this again after the time specified by the -interval option.
#
body ::tycho::Repeater::reactivate {} {
    # Execute the user-specified activation command
    if { $command != "" } {
	uplevel #0 apply [list $command] $this $target $x $y
    }

    # Set up another delayed call
    set afterid [after $interval [list catch [list $this reactivate]]]
}


#######################################################################
#### unbind
#
body ::tycho::Repeater::unbind {t} {
    foreach b $button {
	$slate bind $t \
		[eventcode Click -button $b] \
		{}
    }
}
