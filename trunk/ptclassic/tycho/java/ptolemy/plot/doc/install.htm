<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Installing Ptplot</title>
<link href="../../../doc/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1>Installing Ptplot</h1>
Ptplot is distributed in several formats. 
<menu>
 <li>The first format is the usual <a href="#tarorzip">tar file and zip file format.</a>
 <li>The second format is an experimental format using the 
<a href="#installshield">Installshield JShield installer.</a>
</menu>


<h2><a name="tarorzip">Ptplot Installation under Unix or Windows with Cygwin from tar or zip files</a></h2>

Ptplot is shipped with the java files precompiled, so you need not
recompile.  However, if you are using the standalone scripts such as
<CODE>ptplot</CODE>, then you may want to go through the installation
procedure so that the standalone scripts are properly localized.


 <p> If you are using Windows and you want to rebuild Ptplot or
localize the standalone scripts, then you will need to install the
Cygwin toolkit from
<a href="http://sourceware.cygnus.com/cygwin/"><CODE>http://sourceware.cygnus.com/cygwin/</CODE></a>
so that you can run <CODE>/bin/sh</CODE> and <CODE>make</CODE>.
If you are running Windows and do not want to install the Cygwin toolkit,
then see
<a href="#windowswithoutcygwin">Using Ptplot under Windows without Cygwin</a>

 <p>Below are the installation instructions for Unix and Windows
with Cygwin.
<ol>

<li> Be sure that JDK1.2 is installed, and that <CODE>javac</CODE> 
is in your path.

<li> Untar or unzip the Ptplot distribution.

<li> Set the <CODE>PTII</CODE> environment variable to point
to the top of the Ptplot tree.  Under C-shell, one would do:
<pre>
setenv PTII ~/src/ptplot3.1p1
</pre>

<li> cd into the <CODE>PTII</CODE> directory:
<pre>
cd $PTII
</pre>

<li> Run <CODE>configure</CODE>
<pre>
./configure
</pre>


<li> Run make
<pre>
make
</pre>


<li> View the applets by going starting your browser and going to:
<a href="index.htm">ptolemy/plot/doc/index.htm</a>

</ol>

<h2><a name="installshield">Installshield Installer</a></h2>
Ptplot is also available in several self-extracting formats
that were created with the Installshield JShield tool.

 <p>Our use of this tool is still experimental.  If you have problems,
please try the tar or zip files.

 <p>Note that when you run the installer under Windows, Ptplot is
added to your Start menu under Ptolemy -&gt; Ptplot.

<h3>Installshield limitations</h3>

<menu>

<li> When the Installer Applet is run under Windows, the
Installer Window is not listed in the Windows Start Bar.

<li> The File browser does not work very well.  Installshield says
that this is because we are using JDK1.2.  The standalone
applications require JDK1.2 so that they can use Swing.  Note that
the applets can still be run with JDK1.1.x, so we don't require
JDK1.2.

<li> Installing Ptplot in a directory whose pathname has a  space  in it
seem to cause problems with the start up scripts.  


<li> If you choose the Microsoft jvm, which sometimes found at
<CODE>c:\winnt\jview</CODE>, then the format window will not come up.
This is probably because the format window uses Swing facilities that
are not in <CODE>jview</CODE>

<li> Ideally, Ptplot should be installed on machines with JDK1.2.
It is best if you install Java before installing Ptplot.  However 
The Installshield applet installer can download and install a JRE for you.
Usually the JRE that can be downloaded via the Installshield applet installer 
is JDK1.1.7B.  We were able to substitute in the JRE 1.2.2 .exe file
so that under Windows, JRE1.2.2 is properly installed.  However, we
were not able to get this to work under Solaris, it appears that
the JRE1.2.2 installation hangs part way through the installation.
As a result, JRE1.1.7B is the JRE that is optionally downloaded for Sparcs.


<li> The InstallShield installer places the <CODE>ptplot</CODE>,
<CODE>histogram</CODE> and <CODE>pxgraph</CODE> startup scripts
in the toplevel <CODE>ptplot3.1p1</CODE> directory rather than placing
them in <CODE>ptplot3.1p1/bin</CODE>


</menu>

<h2>Notes about building and installing</h2>
<h3>How does configure work?</h3>
<CODE>configure</CODE> is a <CODE>/bin/sh</CODE> script
that determines some information about your environment and
then modifies a few files.

When the <a href="../../../configure"><CODE>configure</CODE></a>
 script is run, it reads in 
<a href="../../../mk/ptII.mk.in"><CODE>mk/ptII.mk.in</CODE></a>
and
<a href="../ptplot.in"><CODE>ptolemy/plot/ptplot.in</CODE></a>

generates 
<a href="../../../mk/ptII.mk.in"><CODE>mk/ptII.mk</CODE></a>
and
<a href="../ptplot">ptolemy/plot/ptplot</a>

 <p>To get help with <CODE>configure</CODE>, try
<pre>
./configure --help
</pre>


 <p> <CODE>configure</CODE> reads in the <CODE>.in</CODE> files
and substitutes strings inside the <CODE>@</CODE>
 <p>For example, <CODE>configure</CODE> reads in
<a href="../ptplot.in"><CODE>ptolemy/plot/ptplot.in</CODE></a>
and
<pre>
PTII_DEFAULT=@PTII_DEFAULT@
PTJAVA_DIR=@PTJAVA_DIR@
</pre>

becomes
<pre>
PTII_DEFAULT=/users/cxh/ptII
PTJAVA_DIR=/usr/java1.1
</pre>



<h3><a name="windowswithoutcygwin">Using Ptplot under Windows without Cygwin</h3>
Below are the instructions for using Ptplot 
if you are under Windows and you do not have the Cygwin and have 
downloaded the tar or zip files.

<ol>
<li> Set the <CODE>PTII</CODE> variable to the top-level
directory of the Ptplot tree.
<pre>
C:\ptplot3.1p1&gt; PTII=c:\ptplot3.1p1
</pre>
<CODE>PTII</CODE> is used by the standalone <CODE>ptplot.bat</CODE>
script and other scripts
<li> Be sure that <code>java</code> is in your path by running
<code>java -version</code>
<li> Added <code>%PTII\bin</code> to your PATH.
<li> Run <code>ptplot.in</code>

</ol>

Usually, it is not necessary to recompile the Ptplot classes, but
below are the instructions for recompiling by hand under Windows without
Cygwin.

<ol>
<li> To compile the Ptplot Java classes, they must be in the directory
ptolemy\plot.
<CODE></CODE>
<pre>
C:\ptplot3.1p1&gt; cd ptolemy\plot
</pre>


<li> set your CLASSPATH to ..\..
<pre>
C:\ptplot3.1p1\ptolemy\plot&gt;set CLASSPATH=..\..
C:\ptplot3.1p1\ptolemy\plot&gt;echo %CLASSPATH%
..\..
</pre>

<li> Remove the old Java files and compile them
<pre>
C:\ptplot3.1p1\ptolemy\plot&gt;del  *.java *\*.java
C:\ptplot3.1p1\ptolemy\plot&gt;javac *.java
</pre>

<li> Run <CODE>ptplot.bat</CODE>, which reads <CODE>%PTII%</CODE>
<pre>
C:\ptplot3.1p1\ptolemy\plot&gt;ptplot.bat
</pre>

</ol>


<h3>Installing Ptplot as an applet</h3>
Ptplot includes several jar files, which are collections of 
Java <CODE>.class</CODE> files
<dl>

<dt> <CODE>plotapplet.jar</CODE>
<dd>  .class files necessary for simple JDK1.1 
browser applets - no pxgraph, no plotml.

<dt> <CODE>pxgraphapplet.jar</CODE>
<dd> .class files necessary for simple JDK1.1 
browser applets with pxgraph classes, no plotml.
Applets that use the <CODE>pxgraphargs</CODE> applet parameter
should use this jar file.

<dt> <CODE>plotmlapplet.jar</CODE>
<dd> .class files necessary for PlotML applets -
includes com/microstar/xml and the plotml code, but does not include pxgraph,
or PlotFrame.

<dt> <CODE>plot.jar</CODE>

<dd> The standard Ptolemy II jar file that includes the
ptolemy/plot/*.class files and the class files in plotml and compat.
Does not include com/microstar/xml or ptolemy/gui.
<CODE>plot.jar</CODE> is used by the Ptolemy II build system.

<dt> <CODE>plotapplication.jar</CODE>

<dd> .class files necessary for standalone applications - includes
com/microstar/xml, ptolemy/gui and the plotml code, but does not
include pxgraph.  If <CODE>plotapplication.jar</CODE> is
present, then it is used by the standalone scripts (<CODE>ptplot</CODE> etc.)

</dl>

The best way to use Ptplot as an applet is to copy the appropriate
<CODE>*applet.jar</CODE> file into the same directory as your applet,
and then to use the <CODE>archive</CODE> applet directive.
For examples of applet html code, see the demonstrations.


<h3>Installing Ptplot as an application</h3>

Under Unix and Windows with the Cygwin toolkit,
 ptplot can be run as three standalone applications:
<menu>
<li> <CODE>ptplot</CODE> - A modern plot application that
with a menubar and such.
<li> <CODE>histogram</CODE> - A histogram plot application
<li> <CODE>pxgraph</CODE> - A plot application that 
is mostly backward compatible with the older X11 <CODE>pxgraph</CODE>
program
</menu>

When configure is run, it substitutes variables inside <CODE>ptplot.in</CODE>
and produced <CODE>ptplot</CODE>.  The <CODE>ptplot</CODE> script
is shared between the standalone applications, <CODE>ptplot</CODE>
determines what name it was called with, and selects the appropriate
class accordingly.

 <p>If the <CODE>ptplot</CODE> script is run,
then <CODE>ptolemy.plot.PlotApplication</CODE> is run

 <p>If the <CODE>ptplot</CODE> script is copied to <CODE>histogram</CODE>,
then <CODE>ptolemy.plot.plotml.HistogramMLApplication</CODE> is run

 <p>If the <CODE>ptplot</CODE> script is copied to <CODE>pxgraph</CODE>,
then <CODE>ptolemy.plot.compat.PxgraphApplication</CODE> is run

 <p>Under Unix, you can use a hard link to create the histogram and 
pxgraph script:
<pre>
ln ptplot histogram
ln ptplot pxgraph
</pre>

 <p>Under Windows, three .bat scripts are provided:
<CODE>ptplot.bat</CODE>, <CODE>histogram.bat</CODE> and 
<CODE>pxgraph.bat</CODE>

<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
</body>
</html>
