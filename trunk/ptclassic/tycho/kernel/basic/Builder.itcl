# Build derived files in Tycho, such as itcl html docs and indexes.
#
# @Author: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################


#######################################################################
#### Builder
# The Builder class builds derived files such as Itcl HTML documentation
# concept and code indexes and the class diagram.
#
# The Builder class is primarily for use on platforms such as the Mac
# that do not have 'make'

# The procs in this class should be named such that similar procs 
# share similar prefixes so that they are grouped together.  For example,
# testAll and testDir.
#
# See the BuilderDialog class for a graphical interface.
#
# FIXME: it would be nice if we could parse makefiles to get variables.
#
# FIXME: No tests as of yet
#
class ::tycho::Builder {
    inherit ::tycho::Uninstantiable

    ###################################################################
    ####                         public procs                      ####

    # Get the latest sources from version control and create tclIndex files.
    proc all {}

    # Do what ever is necessary to Build Tycho.
    proc build {}

    # Do build in subdirectories.
    proc buildSubDirectories {}

    # Create the class diagram. 
    proc classDiagram {}

    # Create a Full Tycho distribution.
    proc distFull {}

    # Return the directory where the distribution is built.
    proc getDistBuildDir {} {return $distbuilddir}

    # Create glimpse files.
    proc glimpse {}

    # Create the concept and code indices.
    proc indices {}

    # Create itcldocs in the subdirectories.
    proc itcldocs {}

    # Build tcl extensions in %TYCHO/obj.$PTARCH.
    proc tclexts {}

    # Run all the Tycho tests.
    proc testAll {}

    # Run all the Tycho tests in a directory
    proc testDir { dir {testfile alltests.itcl}}

    # Create tclIndex files.
    proc tclIndex {}

    ###################################################################
    ####                   protected variables                     ####

    # Location of the directory where the distribution is built
    protected common distbuilddir [file join $TYCHO adm gen-$tycho_version]

    # List of directories that contain Itcl sources.
    protected common itcldirs [list \
	    [file join \$TYCHO kernel] \
	    [file join \$TYCHO editors textedit] \
	    [file join \$TYCHO editors slate] \
	    [file join \$TYCHO editors visedit] \
	    [file join \$TYCHO typt kernel] \
	    [file join \$TYCHO typt editors]]
}

    ###################################################################
    ###################################################################
    ####                      public procs                       ####


#######################################################################
#### all
    # Get the latest sources from version control and create tclIndex files.
#
body ::tycho::Builder::all {} {
    global TYCHO
    set win [::tycho::autoName .allExec]
    ::tycho::Monitor $win \
            -command {make all} \
            -dir $TYCHO \
            -autostart 1 -autodestroy 1
}


#######################################################################
#### build
# Do what ever is necessary to build the documentation, indices and other
# files from Tycho source files.
#
body ::tycho::Builder::build {} {
    global TYCHO
    puts "Running build in $TYCHO"
    #buildSubDirectories
    classDiagram
    itcldocs
    indices
    puts "Running itcldocs again so we get the cross refs"
    itcldocs
}

#######################################################################
#### buildSubDirectories
# Run build in subdirectories.
#
body ::tycho::Builder::buildSubDirectories {} {
    # FIXME: buildSubDirectories is not implemented yet
    error "buildSubDirectories is not implemented yet."
}

#######################################################################
#### classDiagram
# Create the Tycho class diagram.
#
body ::tycho::Builder::classDiagram {} {
    global TYCHO
    puts "Creating [file join $TYCHO doc tychoClasses.dag]"
    update
    if { [info command tychoStandardDAG] == {} } {
	source [file join $TYCHO kernel tychoMakeClassDAG.tcl]
    }
    set savedir [pwd]
    cd [file join $TYCHO doc]

    if [ catch {tychoStandardDAG} errmsg] {
        cd $savedir
        error "errmsg"
    }
    cd $savedir
}

#######################################################################
#### distFull
# Create a Full Tycho distribution for redistribution off-site.
# 
body ::tycho::Builder::distFull {} {
    global TYCHO

    if ![file writable $distbuilddir] {
        error "Cannot build Tycho distribution, the\ndirectory\
                '$distbuilddir' either does not exist or is not writable."
    }
    set win [::tycho::autoName .distFullExec]
    ::tycho::Monitor $win \
            -command {make clean all} \
            -dir $distbuilddir \
            -autostart 1 -autodestroy 1

}

#######################################################################
#### glimpse
# Create glimpse files.
#
body ::tycho::Builder::glimpse {} {
    ::tycho::Glimpse::updateTychoDatabase
}

#######################################################################
#### indices
# Create the concept and code indices.
#
body ::tycho::Builder::indices {} {
    global TYCHO
    if { [info command tychoStandardIndex] == {} } {
	source [file join $TYCHO lib idx tychoMakeIndex.tcl]
    }
    puts "Creating [file join $TYCHO lib idx tycho.idx]"
    update
    set savedir [pwd]
    cd [file join $TYCHO lib idx]
    tychoStandardIndex
    puts "Creating [file join $TYCHO lib idx codeDoc.idx]"
    update
    cd [file join $TYCHO lib idx]
    tychoCodeDocIndex
    cd $savedir
}

#######################################################################
#### itcldocs
# Create itcldocs in the subdirectories.
# See $TYCHO/lib/tydoc/tydoc for more information.
#
body ::tycho::Builder::itcldocs {} {
    global TYCHO
    puts "Running itcldocs"
    set verbose 1
    set generateIndex 1
    set debug 1

    set savedir [pwd]
    foreach itcldir $itcldirs {
	puts "Running itcldocs in $itcldir"
        update

	eval cd $itcldir
	set title "Index of classes in $itcldir"
	set retval [::tycho::HTMLDocSys::generateHTML $verbose $debug \
		$generateIndex $title \
		[glob -nocomplain *.itcl *.tcl]
	if {$retval != ""} {
	    puts $retval
	}
    }
    cd $savedir
}

#######################################################################
#### sources
# Do 'make sources'
#
body ::tycho::Builder::sources {} {
    global TYCHO
    set win [::tycho::autoName .tclextsExec]
    ::tycho::Monitor $win \
            -command {make sources} \
            -dir $TYCHO \
            -autostart 1 -autodestroy 1
}

#######################################################################
#### tclexts
# Build tcl extensions in $TYCHO/obj.$PTARCH.
#
body ::tycho::Builder::tclexts {} {
    global TYCHO
    set win [::tycho::autoName .tclextsExec]
    ::tycho::Monitor $win \
            -command {make tclexts} \
            -dir $TYCHO \
            -autostart 1 -autodestroy 1
}

#######################################################################
#### testAll
# Run all the Tycho tests.
# See $TYCHO/doc/coding/testing.html for more information.
#
body ::tycho::Builder::testAll {} {
    global TYCHO
    set savedir [pwd]
    cd $TYCHO
    source [file join kernel test alltychotests.tcl]
    cd $savedir
}

#######################################################################
#### testDir
# Run all the Tycho tests in a directory
#
body ::tycho::Builder::testDir { dir {testfile alltests.itcl}} {
    global TYCHO
    set savedir [pwd]
    cd $dir
    uplevel #0 source $testfile
    cd $savedir
}

#######################################################################
#### tclIndex
# Create tclIndex
#
body ::tycho::Builder::tclIndex {} {
    # FIXME: tclIndex is not implemented yet
    error "Sorry, not implemented yet"
}
