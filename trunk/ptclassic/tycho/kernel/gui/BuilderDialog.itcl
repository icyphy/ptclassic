# Dialog Box to build derived files in Tycho, such as HTML documentation
#
# @Author: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################


#######################################################################
#### BuilderDialog
# The BuilderDialog brings up a Dialog box that allows the user to
# build Tycho documentation files and indexes.
#
# FIXME: There should be a way to stop a build.
#
# <tcl><pre>
# ::tycho::view BuilderDialog
# </pre></tcl>
#
# BuilderDialog is a graphical front end for the Builder class.
#
class ::tycho::BuilderDialog {
    inherit ::tycho::View

    constructor {args} {}
    
    ###################################################################
    ####                         public methods                    ####

    # Bring up the help file for this widget.
    method help {}

    ###################################################################
    ####                         public procs                      ####

    # Check to see what files need to be built and bring up a dialog
    proc checkFiles {}}

#######################################################################
#### constructor
#
body ::tycho::BuilderDialog::constructor {args} {
    global TYCHO
    displayer configure -title "Tycho Build Manager"

    $myMenubar addMenu Build -underline 0
    $myMenubar add {Full (10 Minutes)} Build -underline 0 \
	    -command ::tycho::Builder::build

    $myMenubar addSeparator Build

    $myMenubar add {Class Diagram Only} Build -underline 0 \
	    -command "$this busy ::tycho::Builder::classDiagram"

    $myMenubar add {Glimpse} Build -underline 0 \
	    -command "$this busy ::tycho::Builder::glimpse"

    $myMenubar add {Itcl HTML Only (4 Minutes)} Build -underline 6 \
	    -command "$this busy ::tycho::Builder::itcldocs"

    $myMenubar add {Indices Only} Build -underline 0 \
	    -command "$this busy ::tycho::Builder::indices"


    $myMenubar addMenu Test -underline 0

    $myMenubar add {All Tests} Test -underline 0 \
	    -command "$this busy ::tycho::Builder::testAll"

    $myMenubar addSeparator Test

    $myMenubar add {Kernel Tests} Test -underline 0 \
	    -command "$this busy ::tycho::Builder::testDir \
            [file join $TYCHO kernel test]"

    $myMenubar add {Text Editor Tests} Test -underline 0 \
	    -command "$this busy ::tycho::Builder::testDir \
            [file join $TYCHO editors textedit test]"

    $myMenubar add {Slate Tests} Test -underline 0 \
	    -command "$this busy ::tycho::Builder::testDir \
            [file join $TYCHO editors slate test]"

    $myMenubar add {Visual Editor Tests} Test -underline 0 \
	    -command "$this busy ::tycho::Builder::testDir \
            [file join $TYCHO editors visedit test]"

    # If Ptolemy is present, the we can run some tests.
    global ptolemyfeature
    if { $ptolemyfeature(pitcl) || $ptolemyfeature(ptcl) } {
        $myMenubar addSeparator Test
        $myMenubar add {Tycho/Ptolemy Kernel Tests} Test -underline 0 \
                -command "$this busy ::tycho::Builder::testDir \
                [file join $TYCHO typt kernel test]"

        $myMenubar add {Tycho/Ptolemy Editor Tests} Test -underline 0 \
                -command "$this busy ::tycho::Builder::testDir \
                [file join $TYCHO typt editors test]"

    }

    # FIXME: Should this be a preference?
    if [file isdirectory [ file join $TYCHO adm ]] {
        $myMenubar addMenu Distribute -underline 0

        $myMenubar add {Full Distribution} Distribute -underline 0 \
                -command "$this busy ::tycho::Builder::distFull"

    }

#### Start FIXME
# FIXME: this code was duplicated from File, we need to rehack view
# so that it has a help menu.    
    $myMenubar addMenu Help -side right -underline 0

    # Help menu contents
    
    $myMenubar command "About Tycho" Help -underline 0 -command \
	    {::tycho::welcomeMessage $TychoBinaryInfo $TychoVersionInfo}
    
    global ::TYCHO
    $myMenubar command "Tycho Home Page" Help -underline 0 -command \
	    {::tycho::File::openContext \
	    [file join $TYCHO doc index.html]}

    $myMenubar command "Guide to [info class] widget" Help -underline 0 \
	    -command "$this help"
    
    $myMenubar command "Concept Index..." Help -underline 8 \
	    -command {::tycho::File::openContext \
	    [file join \$TYCHO lib idx tycho.idx]}
    
    $myMenubar command "Code Index..." Help -underline 0 \
	    -command {set _nmBogosity [::tycho::autoName .index]; \
            ::tycho::IndexBrowser $_nmBogosity \
	    -file [file join \$TYCHO lib idx codeDoc.idx] \
	    -width 80; $_nmBogosity centerOnScreen}
    
    $myMenubar command "Class Diagram" Help -underline 6 -command \
	    {::tycho::File::openContext \
	    [file join \$TYCHO doc tychoClasses.dag]}

    $myMenubar command "Itcl man pages" Help -underline 0 \
	    -command "$this ::tycho::File::openItclHTMLPage"

    # Add the Preferences menu. This is probably the wrong place
    # for it, but it will do until we figure out a good menu to
    # put it in that doesn't keep disappearing...
    $myMenubar command "Preferences..." Help -underline 0 \
	    -command { ::tycho::preferencedialog }
####end FIXME

}


    ###################################################################
    ###################################################################
    ####                      public procs                       ####

#######################################################################
#### checkFiles
# Check to see what files need to be built and bring up a dialog asking
# the user if they want to build.
# 
body ::tycho::BuilderDialog::checkFiles {} {
    global TYCHO
    set origmsg "The following Tycho files do not exist:" 
    set msg $origmsg
    if ![file exists [file join $TYCHO kernel doc codeDoc File.html]] {
	set msg "$msg\n The Tycho Itcl HTML documentation might not be \
		built, for example the file:\n\
		[file join $TYCHO kernel doc codeDoc File.html] \
		does not exist."
    } 
    if ![file exists [file join $TYCHO doc tychoClasses.dag]] {
	set msg "$msg\n The Tycho Class Diagram at \
		[file join $TYCHO doc tychoClasses.dag]"
    } 
    if ![file exists [file join $TYCHO lib idx tycho.idx]] {
	set msg "$msg\n The Tycho Concept Index at \
		[file join $TYCHO lib idx tycho.idx]"
    }
    if ![file exists [file join $TYCHO lib idx codeDoc.idx]] {
	set msg "$msg\n The Tycho Code Index at \
		[file join $TYCHO lib idx codeDoc.idx]"
    } 

    if {$msg != $origmsg} {
	# Something is missing, so bring up the dialog
	set msg "$msg\n\nBring up Build Dialog to build these files?"

	if [::tycho::askuser $msg] {
	    set bd [::tycho::autoName .builderDialog]
	    ::tycho::BuilderDialog $bd
	    $bd centerOnScreen
	    # Return the name of the window so the test suite can get at it.
	    return $bd
	}
    }
}

#########################################################################
#### help
# Open a window with help on the current widget.
#
body ::tycho::BuilderDialog::help {} {
    global ::TYCHO
    ::tycho::File::openContext \
            [file join \$TYCHO kernel doc usersGuides BuilderDialogHelp.html]

}




