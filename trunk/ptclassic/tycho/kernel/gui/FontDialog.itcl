# A Dialog box for selecting a font.
# Note: this file used to be called "FontManager.itcl": see that
# file for the complete SCCS history.
#
# @Author: Edward A. Lee
# @Version: $Id$
#
# Copyright (c) 1995-1996 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
###########################################################################

##########################################################################
#### queryfont
# Query the user for a font and return it as a three-element list:
# {_family_ _size_ _style} . This procedure brings up a
# font dialog, and returns only when it is dismissed. The
# returned string is the name of a font. If any arguments are
# given, then they are taken to be the font family, size, and style
# respectively: see ::tycho::FontManager::getFont. If the dialog
# is cancelled, then this procedure returns the original arguments.
# <p>
# This procedure indirectly calls <code>update</code>, a Tk utility
# that processes pending events, including mouse events. If this
# procedure is called from within an Itcl object, directly or
# indirectly, it may be necessary to take precautions to prevent the
# calling object from being deleted during the call. Because of a
# defect in at least some versions of Itcl, failure to do so can result
# in catastrophic failure of the application (a core dump). In Tycho
# objects, the <code>safeEval</code> method should be used to evaluate
# this procedure or any method or procedure that in turn calls this
# procedure. If the procedure is called from the top level or from a
# Tcl procedure that is not itself called from within an Itcl object,
# then there is no cause for worry.
#
proc ::tycho::queryfont {args} {
    set name [autoName .font]
    uplevel #0 ::tycho::FontDialog $name [list -initialfont $args]
    set fontname [::tycho::Dialog::wait $name 0]
    if { $fontname != "" } {
	return [list [lindex $fontname 1] \
		[lindex $fontname 3] [lindex $fontname 5]]
    } else {
	return $args
    }
}

##########################################################################
#### querysystemfont
# Query the user for a font and return a system-dependent
# representation of the font. This procedure brings up a
# font dialog, and returns only when it is dismissed. The
# arguments an other comment of ::tycho::queryfont apply here
# too.
#
proc ::tycho::querysystemfont {args} {
    set name [autoName .font]
    uplevel #0 ::tycho::FontDialog $name [list -initialfont $args]
    set fontname [::tycho::Dialog::wait $name 0]
    if { $fontname != "" } {
	return [::tycho::font [lindex $fontname 1] \
		[lindex $fontname 3] [lindex $fontname 5]]
    } else {
	return $args
    }
}

#########################################################################
#### FontDialog
# Manage font selection. Instances of this class are dialog windows
# that permit the user to select a font. If the creator makes the font
# manager modal using the <code>::tycho::Dialog::wait</code> procedure,
# then that procedure will return either a valid font name selected by
# the user or the null string (if the user cancels).
# <p>
# Unfortunately, fonts are a major weak point in the X window system,
# since there is only one font that is guaranteed to be installed on
# all systems: "fixed". This font is the fallback font of the
# <code>findFont</code> method, which always returns a valid font.
#
class ::tycho::FontDialog {
    inherit ::tycho::Query

    constructor {args} {}
    destructor {}

    ##########################################################################
    ####                            options                               ####

    # Specify the initial font displayed in the window.
    itk_option define -initialfont initialFont InitialFont {Helvetica 12 Roman}


    ##########################################################################
    ####                         public methods                           ####

    # Update the font display
    method updateDisplay {}
}

#########################################################################
#### -initialfont option configuration
# Specify the initial font. If the font is not valid, trigger an error.
# If it is valid, the text sample in the window will be displayed in
# the specified font. If the specified font can be parsed so that the
# family, size, weight, and style are recognized, then the radio
# buttons in the menus will be set to match. Otherwise, they remain in
# their previous state.
# 
configbody ::tycho::FontDialog::initialfont {
    set spec $itk_option(-initialfont)
    if { [llength $spec] >= 1 } {
	insert family [lindex $itk_option(-initialfont) 0]
    }
    if { [llength $spec] >= 2 } {
	insert size [lindex $itk_option(-initialfont) 1]
    }
    if { [llength $spec] >= 3 } {
	insert style [lindex $itk_option(-initialfont) 2]
    }

    updateDisplay
}

#####################################################################
#
body ::tycho::FontDialog::constructor {args} {

    # The font family menu
    choice family {Font family:} [lsort [::tycho::FontManager::family]] \
	    Helvetica \
	    "$this updateDisplay"

    # The font size menu
    choice size {Font size:} [::tycho::FontManager::size] 12 \
	    "$this updateDisplay"

    # The font style menu
    choice style {Font style:} {Roman Italic Bold {Bold Italic}} Roman \
	    "$this updateDisplay"


    # Here we add a sample of the font.
    # FIXME: This should a separate window: the size changes
    # you get with the embedded text is extremely disconcerting
    # because the option menus move!

    set sample "
ABCDEFGHIJKLMNOPQRSTUVWXYZ
abcdefghijklmnopqrstuvwxyz
0123456789
!@#$%^&*()_+-=[]{};:'\"`~,.<>/?\\|
"
    itk_component add samplerframe {
	frame $itk_component(childsite).sampleframe \
		-relief raised -bd 2
    } {
	keep -background -cursor
    }
    pack $itk_component(samplerframe) -fill both -expand yes \
	    -after $itk_component(top)

    itk_component add sampler {
	label $itk_component(childsite).sampler -text $sample \
		-relief raised -bd 2
    } {
	keep -highlightthickness -background \
		-foreground -highlightbackground
    }
    pack $itk_component(sampler) -fill both -expand yes \
	    -after $itk_component(top) \
	    -in $itk_component(samplerframe)

    itk_component add fontname {
	label $itk_component(childsite).label \
		-font $itk_option(-messagefont)
    } {
	keep -highlightthickness -background \
		-foreground -highlightbackground
    }
    pack $itk_component(fontname) -fill both -expand yes \
	    -after $itk_component(sampler) \
	    -in $itk_component(samplerframe)

    $itk_component(fontname) configure -text \
	    [$itk_component(fontname) cget -font]

    eval itk_initialize $args
    eval preference exclude $this $args

    # If no -okcommand option is specified, use a reasonable default.
    if {$itk_option(-okcommand) == {}} {
	configure -okcommand "$this get"
    }
}

#########################################################################
#########################################################################
####                       public methods                            ####

########################################################################
#### updateDisplay
# Update the display of the current font. This is a public method
# mainly so it can be called by the font options menus; however,
# if any subclass or client changes the font selection by using the
# insert{} method, then they should call this to update the font
# display.
#
body ::tycho::FontDialog::updateDisplay {} {
    set spec [$this get]
    set family [lindex $spec 1]
    set size [lindex $spec 3]
    set style [lindex $spec 5]

    set systemFont [::tycho::font $family $size $style]
    $itk_component(sampler) configure -font $systemFont
    $itk_component(fontname) configure -text $systemFont
}
