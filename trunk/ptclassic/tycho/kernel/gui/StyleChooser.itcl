# Create a dialog box for the user to edit preferences with.
#
# @Version: $Id$
# @Author: John Reekie
#
# @Copyright (c) 1996 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#                                                         COPYRIGHTENDKEY
##########################################################################

#######################################################################
## preferencedialog
#
# Open a preferences dialog box. If there already is one, bring it
# to the top.
#
proc ::tycho::preferencedialog {} {
    if { [::info which -command .tychoPreferences] != "" } {
	raise .tychoPreferences
    } else {
	::tycho::PreferenceDialog .tychoPreferences \
		-title {Tycho preferences}
	wm deiconify .tychoPreferences
    }
}


#######################################################################
#### PreferenceDialog
#
# A window that controls a set of preference editors.
#
class ::tycho::PreferenceDialog {
    inherit ::tycho::Query

    constructor {args} {}
    destructor {}


    ###################################################################
    ####                            options                        ####



    ###################################################################
    ####                         public methods                    ####

    # Open an editor for the specified preference set
    method edit {set}

    # Update changed preferences
    method update {}

    ###################################################################
    ####                       private variables                   ####

    # Open preferences editors
    private variable editors {}
}


#######################################################################
#### constructor
#
body ::tycho::PreferenceDialog::constructor {args} {

    foreach tag [::tycho::preference info] {
	set description [::tycho::preference cget $tag -description]
	if { $description != "" } {
	    itk_component add $tag {
		button $itk_component(childsite).$tag -text $description \
			-command "$this edit $tag" \
			-highlightthickness 0
	    } {
		keep -background -cursor -font
	    }
	    pack $itk_component(childsite).$tag -fill x -expand on
	}
    }

    addButton apply -text "Apply <M-a>" -command "$this update"
    configure -okcommand "$this update"

    ## FIXME: disabled pending proper implementation of tycho database
    #
    # addButton save -text "Save <M-s>" -command "tychoPreferences write"

    # Meta-a performs update
    bind $itk_component(hull) <Meta-a> \
	    "$this update; break"

    # Initialise options
    eval itk_initialize $args
#    eval preference exclude $this $args
}

#######################################################################
#### destructor
#
body ::tycho::PreferenceDialog::destructor {} {
    foreach e $editors {
	catch {delete object $e}
    }
}

#######################################################################
#### edit
#
body ::tycho::PreferenceDialog::edit {set} {
    if { [::info which -command .$set] != "" } {
	raise .$set
    } else {
	set ed [uplevel #0 ::tycho::PreferenceEditor .$set -preferences $set]
	wm deiconify $ed
	lappend editors $ed
    }
}

#######################################################################
#### update
#
body ::tycho::PreferenceDialog::update {} {
    foreach e $editors {
	if { [::info which -command $e] != "" } {
	    $e update
	} else {
	    set editors [ldelete $editors $e]
	}
    }
}
