##########################################################################
# @Version: $Id$
# @Author: John Reekie
#
# @Copyright (c)  The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#                                                         COPYRIGHTENDKEY
##########################################################################


#######################################################################
#### PreferenceEditor
#
# A widget for editing a preference set. This widget provides a
# reasonable behaviour for arbitrary preference sets. If more
# complex layout is needed, you may need to write your own widget.
#
class ::tycho::PreferenceEditor {
    inherit itk::Toplevel

    constructor {args} {}
    destructor {}


    ###################################################################
    ####                            options                        ####

    # The name of the preference set I am editing
    itk_option define -preferences preference Preferences {}

    ###################################################################
    ####                         public methods                    ####

    # Apply one or all preferences
    method apply {{name {}}}

    ###################################################################
    ####                       private variables                   ####
    private common variables
}


#######################################################################
#### -preferences
#
configbody ::tycho::PreferenceEditor::preferences {
    set group $itk_option(-preferences)
    if { $group == "" } {
	return
    }
    set i 0
    foreach preference [preference names $group] {
	set description [preference description $group $preference]
	if { $description != "" } {
	    # Create and grid the entry label
	    itk_component add $preference {
		label $itk_interior.$preference -text $description \
			-foreground blue
	    } {
		keep -background -cursor
	    }
	    grid $itk_component($preference) -column 0 -row $i -sticky e

	    # Create and grid the entry field
	    set entry [set preference]Entry

	    switch -exact [preference cget $group $preference -type] {
		"integer" -
		"number" -
		"string" {
		    itk_component add $entry {
			entry $itk_interior.$entry
		    } {
			keep -background -cursor
		    }
		    $itk_component($entry) insert 0 \
			    [preference get $group $preference]
		    grid $itk_component($entry) -column 1 -row $i -sticky we
		    
		    # Set up bindings to update preferences
		    bind $itk_component($entry) <Return> \
			    "preference assign $group $preference \
			    \[$itk_component($entry) get\]"
		}
		"choice" {
		    itk_component add $entry {
			frame $itk_interior.$entry
		    } {
			keep -background -cursor
		    }
		    foreach v [preference cget $group $preference -values] {
			itk_component add $entry.[join $v ""] {
			    radiobutton $itk_interior.$entry.[join $v ""] \
				    -variable variables($entry) \
				    -text $v \
				    -value $v \
				    -padx 0
			} {
			    keep -background -cursor
			}
			pack $itk_interior.$entry.[join $v ""] -side left
		    }
		    set variables($entry) \
			    [preference get $group $preference]
		    grid $itk_component($entry) -column 1 -row $i -sticky w
		}
		"set" {
		    itk_component add $entry {
			optionmenu $itk_interior.$entry
		    } {
			keep -background -cursor
		    }
		    $itk_interior.$entry configure -items \
			    [preference cget $group $preference -values]
		    $itk_interior.$entry select \
			    [preference get $group $preference]

		    grid $itk_component($entry) -column 1 -row $i -sticky w
		}
		"custom" {
		    itk_component add $entry {
			frame $itk_interior.$entry
		    } {
			keep -background -cursor
		    }
		    itk_component add $entry.value {
			label $itk_interior.$entry.value -text \
				[preference get $group $preference]
		    } {
			keep -background -cursor
		    }
		    pack $itk_interior.$entry.value -fill y -expand on  \
			    -side left
		    itk_component add $entry.button {
			button $itk_interior.$entry.button -text "Edit" \
				-command {puts !} -pady 0
		    } {
			keep -background -cursor
		    }
		    pack $itk_interior.$entry.button -side left
		    grid $itk_component($entry) -column 1 -row $i -sticky ew
		}
		"data" {
		    itk_component add $entry {
			frame $itk_interior.$entry
		    } {
			keep -background -cursor
		    }
		    itk_component add $entry.button {
			button $itk_interior.$entry.button -text "Open" \
				-command "::tycho::PreferenceEditor .$entry \
				-preferences \
				  [preference get $group $preference]" \
				  -pady 0
		    } {
			keep -background -cursor
		    }
		    pack $itk_interior.$entry.button -side left
		    grid $itk_component($entry) -column 1 -row $i -sticky ew
		}
		default {
		    # FIXME
		    puts "Unknown entry type \
			    \"[preference cget $group $preference -type]\""
		}
	    }
	    incr i
	}
    }
}

#######################################################################
#### constructor
#
body ::tycho::PreferenceEditor::constructor {args} {
    
    # A frame so we can have reliefs and stuff
    itk_component add frame {
        frame $itk_interior.frame
    } {
        keep -background -cursor -relief -borderwidth
    }
    pack $itk_component(frame) -expand on -fill both
    set itk_interior $itk_component(frame)

    # Initialise options
    eval itk_initialize $args
#    eval preference exclude $this $args
}


#######################################################################
#### destructor
#
body ::tycho::PreferenceEditor::destructor {} {
    # See if any entries have changed, and if so, update the preference
    set group $itk_option(-preferences)
    foreach preference [preference names $group] {
	set entry [set preference]Entry
	if { [::info exists itk_component($entry)] } {
#	    if { [preference get $group $preference] \
#		    != [$itk_component($entry) get] } {
#		preference assign $group $preference \
#			[$itk_component($entry) get]
#	    }
}
    }
}
