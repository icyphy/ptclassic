##########################################################################
# @Version: $Id$
# @Author: John Reekie
#
# @Copyright (c)  The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#                                                         COPYRIGHTENDKEY
##########################################################################


#######################################################################
#### PreferenceEditor
#
# A widget for editing a preference set. This widget provides a
# reasonable behaviour for arbitrary preference sets. If more
# complex layout is needed, you may need to write your own widget.
#
class ::tycho::PreferenceEditor {
    inherit ::tycho::Query

    constructor {args} {}
    destructor {}


    ###################################################################
    ####                            options                        ####

    # The name of the preference set I am editing
    itk_option define -preferences preference Preferences {}

    ###################################################################
    ####                         public methods                    ####

    # Update specified or changed preferences
    method update {args}

    ###################################################################
    ####                       private variables                   ####
    private common variables
}


#######################################################################
#### -preferences
#
configbody ::tycho::PreferenceEditor::preferences {
    set group $itk_option(-preferences)
    if { $group == "" } {
	return
    }
    configure -title [::preference cget $group -description]
    configure -labelcolor [::tycho::color blue black]

    foreach preference [::preference names $group] {
	set description [::preference description $group $preference]
	if { $description != "" } {
	    switch -exact [::preference cget $group $preference -type] {
		"integer" -
		"number" -
		"string" {
		    line $preference $description \
			    [::preference current $group $preference]
		}
		"choice" {
		    radio $preference $description \
			    [::preference cget $group $preference -values] \
			    [::preference current $group $preference]
		}
		"boolean" {
		    check $preference $description \
			    [::preference current $group $preference]
		}
		"custom" {
		    mediated $preference $description \
			    [::preference current $group $preference] \
			    [::preference cget $group $preference -edit]
		}
		default {
		    line $preference $description \
			    [::preference current $group $preference]
		}
	    }
	}
    }
}

#######################################################################
#### constructor
#
body ::tycho::PreferenceEditor::constructor {args} {
    addButton apply -text "Apply <M-a>" -command "$this update"
    configure -okcommand "$this update"

    # Meta-a performs update
    bind $itk_component(hull) <Meta-a> \
	    "$this update; break"

    # Initialise options
    eval itk_initialize $args
    eval preference exclude $this $args
}

#######################################################################
#### update
#
# With no args, update any changed preferences. With args, always
# update specified preferences.
#
body ::tycho::PreferenceEditor::update {args} {
    if { $args == "" } {
	# See if any entries have changed, and if so, update the preference
	set group $itk_option(-preferences)
	foreach {tag val} [$this get] {
	    if { $val != [::preference current $group $tag] } {
		::preference assign $group $tag $val
	    }
	}
    } else {
	# Update all specified entries
	foreach tag $args {
	    ::preference assign $group $tag [get $tag]
	}
    }
}
