# A subclass of File for testing.
#
# @Authors: John Reekie, Christopher Hylands
#
# @Version: @(#)FileTester.itcl	1.4 04/29/98
#
# @Copyright (c) 1995-1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################


############################################################################
#### Define a proc that can be used to create a test File widget
#
proc _file {args} {
    catch {delete object .f}
    eval ::tycho::FileTester .f $args
    pack .f
    wm deiconify .
    raise .
}

############################################################################
#### Define a proc that can be used to create test files
#
proc _mkfile {name data {readonly 0}} {
    set fd [open $name "w+"]
    puts -nonewline $fd $data
    close $fd
    # NOTE: Unix-only
    if $readonly {
	exec chmod +w $name
    }
}

############################################################################
#### Define a proc to remove a test file
#
proc _rmfile {name} {
    file delete -force $name
}

############################################################################
#### Define a proc to read contents of a test file
#
proc _rdfile {name} {
    set fd [open $name "r"]
    set result [read $fd]
    close $fd
    set result
}

############################################################################
#### Define a proc to update and delay a little
#
proc _update {} {
    update
    after 200
}

#######################################################################
#### FileTester
# This is a simple subclass of File that provides
# an implementation of abstract methods such as insertData{}
# and saveText{}. This makes it possible to test File without
# having to test a complicated subclass (like Edit) at the
# same time.
#
catch {delete class ::tycho::FileTester}
class ::tycho::FileTester {
    inherit ::tycho::File

    constructor {args} {}
    destructor {}

    #####################################################################
    ####                          options                            ####

    ###################################################################
    ####                         public methods                    ####

    # Clear the data being displayed or edited
    method clear {}

    # Insert the specified data
    method insertData {data}

    # Return the data to be saved. NOTE: In File this protected,
    # but we just make it public here to make testing easier.
    method saveText {}
}

#######################################################################
#### constructor
#
# Pack a couple of widgets into the File widget so that it
# can be seen.
#
body ::tycho::FileTester::constructor {args} {
    # A title
    itk_component add title {
	label $itk_interior.title -text "Miniature File Test Widget"
    } {
	keep -background -cursor
    }
    pack $itk_component(title) -side top -expand yes -fill both

    # The data display
    itk_component add string {
	label $itk_interior.string -bd 2 -relief raised
    } {
	keep -background -cursor
    }
    pack $itk_component(string) -side top -expand yes -fill both

    # Evaluate options. Note that this must be done after
    # constructing the visual components, in order that the
    # call to reload{} initiated here will not fail.
    eval itk_initialize $args
}

#######################################################################
#### destructor
#
body ::tycho::FileTester::destructor {} {
}

#####################################################################
#### clear
# Clear the data.
#
body ::tycho::FileTester::clear {} {
    $itk_component(string) configure -text ""
}

#####################################################################
#### insertData
# Insert the specified data.
#
body ::tycho::FileTester::insertData {data} {
    set txt [$itk_component(string) cget -text]
    append txt $data
    $itk_component(string) configure -text $txt
    markModified
}

#####################################################################
#### saveText
# Get the data from the widget as a string.
#
body ::tycho::FileTester::saveText {} {
    $itk_component(string) cget -text
}
