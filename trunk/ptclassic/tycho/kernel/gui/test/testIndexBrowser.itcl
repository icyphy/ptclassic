# Test suite for the Tycho IndexBrowser class
#
# @Author: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1997 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

# Tycho test bed, see $TYCHO/doc/coding/testing.html for more information.

# Load up the test definitions.
if {[string compare test [info procs test]] == 1} then { 
    source [file join $TYCHO kernel test testDefs.tcl]
} {}

# Uncomment this to get a full report, or set in your Tcl shell window.
# set VERBOSE 1

# If a file contains non-graphical tests, then it should be named .tcl
# If a file contains graphical tests, then it should be called .itcl
# 
# It would be nice if the tests would work in a vanilla itkwish binary.
# Check for necessary classes and adjust the auto_path accordingly.
#
if {[namespace ptolemy {info classes File}] == {} } {
    uplevel #0 {
	set ::auto_path [linsert $auto_path 0 [file join $TYCHO kernel]] 
    }
}

######################################################################
#### testIndexBrowserSetup
# Create a test index file
#
proc testIndexBrowserSetup {} {
    global TYCHO
    cd [file join $TYCHO kernel test]
    if ![ file exists IndexBrowser.idx] {
        set fd [open IndexBrowser.idx w]
        puts $fd "# <h1>This is a Tycho index file.  Use tycho to view it.</h1>\
                <nothtml\n\{Sample Index File\}\n\{"
        puts $fd "\{\{A simple entry to the home page\} \{$TYCHO/doc/index.html\}\
                \{home page\}\}"

        puts $fd "\{\{A hierarchical entry\} \{\{Other indices\}\
                \{\{\{Concept Index\} \{$TYCHO/lib/idx/tycho.idx\}\
                \{Concept Index\}\}\
                \{\{Code Index\} \{$TYCHO/lib/idx/codeDoc.idx\}\
            \{Code Index\}\}\}\}\}"
        puts $fd "\}"
        close $fd
    }
}

proc testIndexBrowserCloseFile {filename} {
    if  [::tycho::registry isopen $filename] {
        delete object [::tycho::registry windows $filename]
    }
}

######################################################################
#### 
#
test IndexBrowser-1.1 {Bring up a index, select an simple node} {
    testIndexBrowserSetup
    set tychoHomePage [file join $TYCHO doc index.html]
    testIndexBrowserCloseFile $tychoHomePage
    update idletasks
    set retval1 [::tycho::registry isopen \
            [::tycho::expandPath $tychoHomePage]]

    # Bring up the browser, open the home page
    set win [::tycho::File::openContext IndexBrowser.idx]
    $win clearSelection
    $win goto 0
    # It would be nice if we could some how get the return value here.
    $win ok

    # Did we open the home page?
    set retval2 [::tycho::registry isopen \
            [::tycho::expandPath $tychoHomePage]]

    testIndexBrowserCloseFile [file join $TYCHO doc index.html]
    list $retval1 $retval2
} {0 1}

######################################################################
#### 
# 
test IndexBrowser-1.2 {Bring up a index, select an hierarchichal index} {
    testIndexBrowserSetup

    # Bring up the browser, open the home page
    set win [::tycho::File::openContext IndexBrowser.idx]
    $win clearSelection
    $win goto 1
    # It would be nice if we could some how get the return value here.
    $win ok
    # .. until that happens, just return this:
    list {}
} {{}}
