# Test suite for Exec class, this uses graphics, so it must be run with tycho -e
#
# @Authors: Kevin Chang
#
# @Version: @(#)testResourceRemote.itcl	1.5 03/23/98
#
# @Copyright (c) 1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

# Make sure that the require packages are loaded
package require tycho.util.tytest
package require tycho.kernel.html

#NOTE: You cannot test the functionality without using ResourceFTP
#      or ResourceHTTP's open in order to open up a cachefile.
#The following tests will only test the "interface" to the method,
#to make sure that the behavior of the methods/procs are what they
#are suppose to be (ie. return error, return okay, etc...
#
test remote-method {Make sure that the interface to methods are intact!} {
    set remoteobj [::tycho::autoName .remote]
    ::tycho::ResourceRemote $remoteobj
    set status {}

    # Exception: source
    set methods {\
            {cachefile {(is abstract)}}\
            {close {(is not open)}}\
            {{connect non} {non}}\
            {eof {(is not open)}}\
            {gets {(is not open)}}\
            {isopen {(0)}}\
            {open {(is abstract)}}\
            {path {non}}\
            {progress {}}\
            {{puts HELLO} {(is abstract)}}\
            {read {(is not open)}}\
            {streamable {(1)}} \
            {{write HELLO} {(is abstract)}}}

    foreach method $methods {
        catch "$remoteobj [lindex $method 0]" msg
        # Match the regular expression to check the output of message
        set reg {}
        regexp -nocase [lindex $method 1] $msg _ reg
        if {$reg=={}} {
            lappend status $msg
        } else {
            lappend status $reg
        }
    }
    delete object $remoteobj
    list $status
} {{{is abstract} {is not open} non {is not open} {is not open} 0 {is abstract} non 1.0 {is abstract} {is not open} 1 {is abstract}}}

test remote-procs {Make sure that the interface to procs are intact!} {
    set status {}

    # The exceptions are "initialize" and "new"
    set procs {\
            {{contenttype non} {(is abstract)}} \
            {{forward non} {non}} \
            {{isremote non} {(1)}}}
            
    foreach procname $procs {
        catch "::tycho::ResourceRemote::[lindex $procname 0]" msg
        # Match the regular expression to check the output of message
        set reg {}
        regexp -nocase [lindex $procname 1] $msg _ reg
        if {$reg=={}} {
            lappend status $msg
        } else {
            lappend status $reg
        }
    }
    list $status
} {{{is abstract} non 1}}

# The assumption here is that HTTP works. Now see if the base
# method "forward" works or not.
test remote-forward1 {Connect to the ptolemy site, see if it forwards} {
    # forward http://ptolemy --> http://ptolemy/
    # NOTE: This is HTTP server dependent!
    set site "http://ptolemy.EECS.berkeley.edu/~kchang"
    set httpobj [::tycho::autoName httptest]
    ::tycho::ResourceHTTP $httpobj
    $httpobj connect $site
    $httpobj open r
    catch {delete object $httpobj}
    ::tycho::ResourceRemote::forward $site
} {http://ptolemy.eecs.berkeley.edu/~kchang/}

