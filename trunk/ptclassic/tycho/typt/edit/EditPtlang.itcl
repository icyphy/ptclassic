# Definition of a Ptlang context-sensitive editor.
#
# @Author: Edward A. Lee
#
# @Version: $Id$
#
# @Copyright (c) 1995-%Q% The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

#######################################################################
#### EditPtlang
# This class defines a window that provides an emacs-like editor
# specialized for editing ptlang files. Ptlang is the preprocessor
# language used to define stars in Ptolemy. This class colorizes the
# code, identifying comments and ptlang keywords, automatically indents
# the code, and fills blocks of comments.  It is derived from the C++
# editor, and hence inherits all its features.
#
class ::tycho::EditPtlang {
    inherit ::tycho::EditCpp

    constructor {args} {}
    destructor {}

    ###################################################################
    ####                            options                        ####

    itk_option define -star star Star {SDF Fork}

    ###################################################################
    ####                         public methods                    ####

    # Open a help window.
    method help {}

    ###################################################################
    ####                  protected methods                        ####

    # Return the name of the type of text widget to use (EditPtlangText).
    protected method textWidget {} {return ::tycho::EditPtlangText}
}

#######################################################################
#### -star configuration
# The argument to -star should be a two element list that consists
# of a domain name and a star name.  The domain name should be capitalized.
# for example, the following code will open up the SDF Cosine .pl file 
# <tcl><pre>
#  ::tycho::EditPtlang .e -star {SDF Cos}
#  .e centerOnScreen
# </pre><tcl>
configbody ::tycho::EditPtlang::star {
    global PTOLEMY
    set domainStarList $itk_option(-star)
    set domain [lindex $domainStarList 0]
    set star [lindex $domainStarList 1]
    set file [file join $PTOLEMY src domains [string tolower $domain] \
            stars $domain$star.pl]
    configure -file $file
}

###################################################################
#
body ::tycho::EditPtlang::constructor {args} {
    global PTOLEMY
    addMenuItem {Star/Demo Xref} File -underline 11 -accelerator "C-x C-x" \
            -command "::tycho::File::openContext \
            [file join $PTOLEMY public_html star-demo-index index.html]"
    eval itk_initialize $args
}

###################################################################
#### help
# Open a window with help on the current widget.
#
body ::tycho::EditPtlang::help {} {
    global ::TYCHO
    ::tycho::File::openContext \
	    $TYCHO/editors/textedit/doc/usersGuides/EditPtlangHelp.html
}
