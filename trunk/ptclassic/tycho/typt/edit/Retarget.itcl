# Ptolemy Retargetting mechanism: Display information about domains
#
# @Author: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1996 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
#                                        PT_COPYRIGHT_VERSION_2
#                                        COPYRIGHTENDKEY
#######################################################################
catch {delete  class EditRetarg}

#######################################################################
#### EditRetarg
# Display Ptolemy Retargetting information.
# <p>
# Here is an example of how to use the EditRetarg
# <tcl><pre>
#	::tycho::EditRetarg .t
#	.t centerOnScreen
# </pre></tcl>
class ::tycho::EditRetarg {
    inherit ::tycho::EditForest
    constructor {args} {}
    destructor {}

    ###################################################################
    ####                         public methods                    ####

    # Generate data for new domains
    method compareDomains {}

}

#######################################################################
#### constructor
#
body ::tycho::EditRetarg::constructor {args} {
    addTool newDomains -text {Compare Domains} -command "$this compareDomains"
    eval itk_initialize $args
}

    ###################################################################
    ###################################################################
    ####                      public methods                       ####

#######################################################################
#### compareDomains
# Determine what stars are in two domains and compare them by plotting
# the information as a Forest.
#
body ::tycho::EditRetarg::compareDomains {} {
   set arglist [DialogWindow::newModal EntryQuery .e2 -queries {
       {domainA {Domain A:} {CG56}}
       {domainB {Domain B:} {C50}}}]

    foreach arg $arglist {
        set [lindex $arg 0] [lindex $arg 1]
    }

    set clashList [::tycho::DomainInfo::diffDomains $domainA $domainB]

    clear
    catch {delete object component graphics}

    # Cycle through the different types of clashes
    set headers [list commonStars commonButPorts commonButMultiPorts \
            commonButStates ${domainA}Only ${domainB}Only]
    set indexCount 0
    foreach header $headers {
        component graphics add $header {}
        foreach star [lindex $clashList $indexCount] {
            set contents [list html \
                "<pre>$domainA: [domain $domainA; catch {::print $star} res; set res]</pre> \
                <pre>$domainB: [domain $domainB; catch {::print $star} res; set res]</pre>" ]
            component graphics add $star $contents $header
        }
        incr indexCount
    }

    component graphics redrawGraph
}
