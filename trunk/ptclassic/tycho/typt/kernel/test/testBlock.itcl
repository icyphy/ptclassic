# Test suite for the ::ptolemy::Block class.
#
# @Author: Edward A. Lee
#
# @Version: @(#)testBlock.itcl	1.4   04/29/98
#
# @Copyright (c) 1997-1998 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
#######################################################################

if {[string compare test [info procs test]] == 1} then { 
    source [file join $TYCHO kernel test testDefs.tcl]
} {}

# Uncomment this to get a full report, or set in your Tcl shell window.
# set VERBOSE 1

# If necessary load up the class definitions
if {[namespace ptolemy {info classes Block}] == {} } {
    uplevel #0 {
	set ::auto_path [linsert $auto_path 0 [file join $TYCHO typt kernel]] 
    }
}

######################################################################
#### setup
# Create a simple flat universe.

test Block::setup {create a test universe} {
    catch {delete object .x.w}
    catch {delete object .x.x}
    catch {delete object .x.y}
    catch {delete object .x.z}
    ::pitcl::addUniverse .x SDF
    ::ptolemy::Block .x.w Ramp
    ::ptolemy::Block .x.x Ramp
    ::ptolemy::Block .x.y Add
    ::ptolemy::Block .x.z Xgraph
    ::pitcl::blocks .x
} {w x y z}

######################################################################
#### getDescriptor method

test Block::getDescriptor-1.1 {get a block descriptor} {
    .x.w getDescriptor
} {Generate a ramp signal, starting at "value" (default 0) and
incrementing by step size "step" (default 1) on each firing.}

######################################################################
#### getDomain method

test Block::getDomain-1.1 {get a star domain} {
    .x.w getDomain
} {SDF}

######################################################################
#### getPorts method

test Block::getPorts-1.1 {Query for the ports of a Block instance} {
    .x.y getPorts
} {output}
 
